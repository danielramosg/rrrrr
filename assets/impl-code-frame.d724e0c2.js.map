{"mappings":"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","sources":["<anon>","node_modules/awesome-ajv-errors/dist/code/impl-code-frame.js","node_modules/awesome-code-frame/dist/babel-code-frame/src/index.js","node_modules/awesome-code-frame/dist/babel-highlight/src/index.js","node_modules/awesome-code-frame/node_modules/js-tokens/index.js","node_modules/awesome-code-frame/node_modules/chalk/source/index.js","node_modules/awesome-code-frame/node_modules/chalk/source/vendor/ansi-styles/index.js","node_modules/awesome-code-frame/node_modules/chalk/source/vendor/supports-color/browser.js","node_modules/awesome-code-frame/node_modules/chalk/source/utilities.js","node_modules/@babel/helper-validator-identifier/lib/index.js","node_modules/@babel/helper-validator-identifier/src/index.ts","node_modules/@babel/helper-validator-identifier/lib/identifier.js","node_modules/@babel/helper-validator-identifier/src/identifier.ts","node_modules/@babel/helper-validator-identifier/lib/keyword.js","node_modules/@babel/helper-validator-identifier/src/keyword.ts"],"sourcesContent":["\nfunction $parcel$export(e, n, v, s) {\n  Object.defineProperty(e, n, {get: v, set: s, enumerable: true, configurable: true});\n}\n\nfunction $parcel$interopDefault(a) {\n  return a && a.__esModule ? a.default : a;\n}\n\n      var $parcel$global =\n        typeof globalThis !== 'undefined'\n          ? globalThis\n          : typeof self !== 'undefined'\n          ? self\n          : typeof window !== 'undefined'\n          ? window\n          : typeof global !== 'undefined'\n          ? global\n          : {};\n  var parcelRequire = $parcel$global[\"parcelRequirec7f3\"];\nvar parcelRegister = parcelRequire.register;\nparcelRegister(\"2fKad\", function(module, exports) {\n\n$parcel$export(module.exports, \"printCode\", function () { return $1a40caa3cd7e8fe5$export$4a4670b510dd6137; });\n\nvar $5llJV = parcelRequire(\"5llJV\");\n\nvar $4CBDl = parcelRequire(\"4CBDl\");\nconst $1a40caa3cd7e8fe5$export$4a4670b510dd6137 = (message, parsedJson, { path: path, markIdentifier: markIdentifier, linesAbove: linesAbove = 5, linesBelow: linesBelow = 3, colors: colors })=>{\n    const { start: start, end: end } = (0, $4CBDl.getLocation)(parsedJson, {\n        path: path,\n        markIdentifier: markIdentifier\n    });\n    if (!start) return `{The path ${path} cannot be found in json}`;\n    return (0, $5llJV.codeFrameColumns)(parsedJson.jsonString, {\n        start: start,\n        end: end\n    }, {\n        highlightCode: colors,\n        message: message,\n        linesAbove: linesAbove,\n        linesBelow: linesBelow\n    });\n};\n\n});\nparcelRegister(\"5llJV\", function(module, exports) {\n\n$parcel$export(module.exports, \"codeFrameColumns\", function () { return $3e3fc6feab4a2c79$export$96b35ce993c60015; });\n\nvar $hFYCa = parcelRequire(\"hFYCa\");\n/**\n * Chalk styles for code frame token types.\n */ function $3e3fc6feab4a2c79$var$getDefs(chalk) {\n    return {\n        gutter: chalk.gray,\n        marker: chalk.red.bold,\n        message: chalk.red.bold\n    };\n}\n/**\n * RegExp to test for newlines in terminal.\n */ const $3e3fc6feab4a2c79$var$NEWLINE = /\\r\\n|[\\n\\r\\u2028\\u2029]/;\n/**\n * Extract what lines should be marked and highlighted.\n */ function $3e3fc6feab4a2c79$var$getMarkerLines(loc, source, opts) {\n    const startLoc = {\n        column: 0,\n        // @ts-expect-error\n        line: -1,\n        ...loc.start\n    };\n    const endLoc = {\n        ...startLoc,\n        ...loc.end\n    };\n    const { linesAbove: linesAbove = 2, linesBelow: linesBelow = 3 } = opts || {};\n    const startLine = startLoc.line;\n    const startColumn = startLoc.column;\n    const endLine = endLoc.line;\n    const endColumn = endLoc.column;\n    let start = Math.max(startLine - (linesAbove + 1), 0);\n    let end = Math.min(source.length, endLine + linesBelow);\n    if (startLine === -1) start = 0;\n    if (endLine === -1) end = source.length;\n    const lineDiff = endLine - startLine;\n    const markerLines = {};\n    if (lineDiff) for(let i = 0; i <= lineDiff; i++){\n        const lineNumber = i + startLine;\n        if (!startColumn) markerLines[lineNumber] = true;\n        else if (i === 0) {\n            const sourceLength = source[lineNumber - 1].length;\n            markerLines[lineNumber] = [\n                startColumn,\n                sourceLength - startColumn + 1\n            ];\n        } else if (i === lineDiff) markerLines[lineNumber] = [\n            0,\n            endColumn\n        ];\n        else {\n            const sourceLength = source[lineNumber - i].length;\n            markerLines[lineNumber] = [\n                0,\n                sourceLength\n            ];\n        }\n    }\n    else if (startColumn === endColumn) {\n        if (startColumn) markerLines[startLine] = [\n            startColumn,\n            0\n        ];\n        else markerLines[startLine] = true;\n    } else markerLines[startLine] = [\n        startColumn,\n        endColumn - startColumn\n    ];\n    return {\n        start: start,\n        end: end,\n        markerLines: markerLines\n    };\n}\nfunction $3e3fc6feab4a2c79$export$96b35ce993c60015(rawLines, loc, opts = {}) {\n    const highlighted = (opts.highlightCode || opts.forceColor) && (0, $hFYCa.shouldHighlight)(opts);\n    const chalk = (0, $hFYCa.getChalk)(opts);\n    const defs = $3e3fc6feab4a2c79$var$getDefs(chalk);\n    const maybeHighlight = (chalkFn, text)=>{\n        return highlighted ? chalkFn(text) : text;\n    };\n    const lines = rawLines.split($3e3fc6feab4a2c79$var$NEWLINE);\n    const { start: start, end: end, markerLines: markerLines } = $3e3fc6feab4a2c79$var$getMarkerLines(loc, lines, opts);\n    const hasColumns = loc.start && typeof loc.start.column === \"number\";\n    const numberMaxWidth = String(end).length;\n    const highlightedLines = highlighted ? (0, $hFYCa.default)(rawLines, opts) : rawLines;\n    let frame = highlightedLines.split($3e3fc6feab4a2c79$var$NEWLINE, end).slice(start, end).map((line, index)=>{\n        const number = start + 1 + index;\n        const paddedNumber = ` ${number}`.slice(-numberMaxWidth);\n        const gutter = ` ${paddedNumber} |`;\n        const hasMarker = markerLines[number];\n        const lastMarkerLine = !markerLines[number + 1];\n        if (hasMarker) {\n            let markerLine = \"\";\n            if (Array.isArray(hasMarker)) {\n                const markerSpacing = line.slice(0, Math.max(hasMarker[0] - 1, 0)).replace(/[^\\t]/g, \" \");\n                const numberOfMarkers = hasMarker[1] || 1;\n                markerLine = [\n                    \"\\n \",\n                    maybeHighlight(defs.gutter, gutter.replace(/\\d/g, \" \")),\n                    \" \",\n                    markerSpacing,\n                    maybeHighlight(defs.marker, \"^\").repeat(numberOfMarkers)\n                ].join(\"\");\n                if (lastMarkerLine && opts.message) markerLine += \" \" + maybeHighlight(defs.message, opts.message);\n            }\n            return [\n                maybeHighlight(defs.marker, \">\"),\n                maybeHighlight(defs.gutter, gutter),\n                line.length > 0 ? ` ${line}` : \"\",\n                markerLine\n            ].join(\"\");\n        } else return ` ${maybeHighlight(defs.gutter, gutter)}${line.length > 0 ? ` ${line}` : \"\"}`;\n    }).join(\"\\n\");\n    if (opts.message && !hasColumns) frame = `${\" \".repeat(numberMaxWidth + 1)}${opts.message}\\n${frame}`;\n    if (highlighted) return chalk.reset(frame);\n    else return frame;\n}\n\n});\nparcelRegister(\"hFYCa\", function(module, exports) {\n\n$parcel$export(module.exports, \"shouldHighlight\", function () { return $cde548d262878208$export$b398ae2b6acac6de; });\n$parcel$export(module.exports, \"getChalk\", function () { return $cde548d262878208$export$ff2ffba552fac685; });\n$parcel$export(module.exports, \"default\", function () { return $cde548d262878208$export$2e2bcd8739ae039; });\n// /// <reference path=\"../../../lib/third-party-libs.d.ts\" />\n\nvar $1Si6F = parcelRequire(\"1Si6F\");\n\nvar $672ZO = parcelRequire(\"672ZO\");\n\nvar $5ENKe = parcelRequire(\"5ENKe\");\n/**\n * Names that are always allowed as identifiers, but also appear as keywords\n * within certain syntactic productions.\n *\n * https://tc39.es/ecma262/#sec-keywords-and-reserved-words\n *\n * `target` has been omitted since it is very likely going to be a false\n * positive.\n */ const $cde548d262878208$var$sometimesKeywords = new Set([\n    \"as\",\n    \"async\",\n    \"from\",\n    \"get\",\n    \"of\",\n    \"set\"\n]);\n/**\n * Chalk styles for token types.\n */ function $cde548d262878208$var$getDefs(chalk) {\n    return {\n        keyword: chalk.cyan,\n        capitalized: chalk.yellow,\n        jsxIdentifier: chalk.yellow,\n        punctuator: chalk.yellow,\n        number: chalk.magenta,\n        string: chalk.green,\n        regex: chalk.magenta,\n        comment: chalk.gray,\n        invalid: chalk.white.bgRed.bold\n    };\n}\n/**\n * RegExp to test for newlines in terminal.\n */ const $cde548d262878208$var$NEWLINE = /\\r\\n|[\\n\\r\\u2028\\u2029]/;\n/**\n * RegExp to test for the three types of brackets.\n */ const $cde548d262878208$var$BRACKET = /^[()[\\]{}]$/;\nlet $cde548d262878208$var$tokenize;\n/**\n * Get the type of token, specifying punctuator type.\n */ const $cde548d262878208$var$getTokenType = function(token) {\n    if (token.type === \"IdentifierName\") {\n        if ((0, $5ENKe.isKeyword)(token.value) || (0, $5ENKe.isStrictReservedWord)(token.value, true) || $cde548d262878208$var$sometimesKeywords.has(token.value)) return \"keyword\";\n        if (token.value[0] !== token.value[0].toLowerCase()) return \"capitalized\";\n    }\n    if (token.type === \"Punctuator\" && $cde548d262878208$var$BRACKET.test(token.value)) return \"uncolored\";\n    if (token.type === \"Invalid\" && (token.value === \"@\" || token.value === \"#\")) return \"punctuator\";\n    switch(token.type){\n        case \"NumericLiteral\":\n            return \"number\";\n        case \"StringLiteral\":\n        case \"JSXString\":\n        case \"NoSubstitutionTemplate\":\n            return \"string\";\n        case \"RegularExpressionLiteral\":\n            return \"regex\";\n        case \"Punctuator\":\n        case \"JSXPunctuator\":\n            return \"punctuator\";\n        case \"MultiLineComment\":\n        case \"SingleLineComment\":\n            return \"comment\";\n        case \"Invalid\":\n        case \"JSXInvalid\":\n            return \"invalid\";\n        case \"JSXIdentifier\":\n            return \"jsxIdentifier\";\n        default:\n            return \"uncolored\";\n    }\n};\n/**\n * Turn a string of JS into an array of objects.\n */ $cde548d262878208$var$tokenize = function*(text) {\n    for (const token of (0, (/*@__PURE__*/$parcel$interopDefault($1Si6F)))(text, {\n        jsx: true\n    }))switch(token.type){\n        case \"TemplateHead\":\n            yield {\n                type: \"string\",\n                value: token.value.slice(0, -2)\n            };\n            yield {\n                type: \"punctuator\",\n                value: \"${\"\n            };\n            break;\n        case \"TemplateMiddle\":\n            yield {\n                type: \"punctuator\",\n                value: \"}\"\n            };\n            yield {\n                type: \"string\",\n                value: token.value.slice(1, -2)\n            };\n            yield {\n                type: \"punctuator\",\n                value: \"${\"\n            };\n            break;\n        case \"TemplateTail\":\n            yield {\n                type: \"punctuator\",\n                value: \"}\"\n            };\n            yield {\n                type: \"string\",\n                value: token.value.slice(1)\n            };\n            break;\n        default:\n            yield {\n                type: $cde548d262878208$var$getTokenType(token),\n                value: token.value\n            };\n    }\n};\n/**\n * Highlight `text` using the token definitions in `defs`.\n */ function $cde548d262878208$var$highlightTokens(defs, text) {\n    let highlighted = \"\";\n    for (const { type: type, value: value } of $cde548d262878208$var$tokenize(text)){\n        const colorize = defs[type];\n        if (colorize) highlighted += value.split($cde548d262878208$var$NEWLINE).map((str)=>colorize(str)).join(\"\\n\");\n        else highlighted += value;\n    }\n    return highlighted;\n}\nfunction $cde548d262878208$export$b398ae2b6acac6de(options) {\n    return !!(0, $672ZO.supportsColor) || !!options.forceColor;\n}\nfunction $cde548d262878208$export$ff2ffba552fac685(options) {\n    return options.forceColor ? new (0, $672ZO.Chalk)({\n        level: 1\n    }) : new (0, $672ZO.Chalk)();\n}\nfunction $cde548d262878208$export$2e2bcd8739ae039(code, options = {}) {\n    if (code !== \"\" && $cde548d262878208$export$b398ae2b6acac6de(options)) {\n        const chalk = $cde548d262878208$export$ff2ffba552fac685(options);\n        const defs = $cde548d262878208$var$getDefs(chalk);\n        return $cde548d262878208$var$highlightTokens(defs, code);\n    } else return code;\n}\n\n});\nparcelRegister(\"1Si6F\", function(module, exports) {\n// Copyright 2014, 2015, 2016, 2017, 2018, 2019, 2020, 2021, 2022, 2023 Simon Lydell\n// License: MIT.\nvar $15d8e12dbdcf0478$var$Identifier, $15d8e12dbdcf0478$var$JSXIdentifier, $15d8e12dbdcf0478$var$JSXPunctuator, $15d8e12dbdcf0478$var$JSXString, $15d8e12dbdcf0478$var$JSXText, $15d8e12dbdcf0478$var$KeywordsWithExpressionAfter, $15d8e12dbdcf0478$var$KeywordsWithNoLineTerminatorAfter, $15d8e12dbdcf0478$var$LineTerminatorSequence, $15d8e12dbdcf0478$var$MultiLineComment, $15d8e12dbdcf0478$var$Newline, $15d8e12dbdcf0478$var$NumericLiteral, $15d8e12dbdcf0478$var$Punctuator, $15d8e12dbdcf0478$var$RegularExpressionLiteral, $15d8e12dbdcf0478$var$SingleLineComment, $15d8e12dbdcf0478$var$StringLiteral, $15d8e12dbdcf0478$var$Template, $15d8e12dbdcf0478$var$TokensNotPrecedingObjectLiteral, $15d8e12dbdcf0478$var$TokensPrecedingExpression, $15d8e12dbdcf0478$var$WhiteSpace, $15d8e12dbdcf0478$var$jsTokens;\n$15d8e12dbdcf0478$var$RegularExpressionLiteral = /\\/(?![*\\/])(?:\\[(?:[^\\]\\\\\\n\\r\\u2028\\u2029]+|\\\\.)*\\]|[^\\/\\\\\\n\\r\\u2028\\u2029]+|\\\\.)*(\\/[$_\\u200C\\u200D\\p{ID_Continue}]*|\\\\)?/yu;\n$15d8e12dbdcf0478$var$Punctuator = /--|\\+\\+|=>|\\.{3}|\\??\\.(?!\\d)|(?:&&|\\|\\||\\?\\?|[+\\-%&|^]|\\*{1,2}|<{1,2}|>{1,3}|!=?|={1,2}|\\/(?![\\/*]))=?|[?~,:;[\\](){}]/y;\n$15d8e12dbdcf0478$var$Identifier = /(\\x23?)(?=[$_\\p{ID_Start}\\\\])(?:[$_\\u200C\\u200D\\p{ID_Continue}]+|\\\\u[\\da-fA-F]{4}|\\\\u\\{[\\da-fA-F]+\\})+/yu;\n$15d8e12dbdcf0478$var$StringLiteral = /(['\"])(?:[^'\"\\\\\\n\\r]+|(?!\\1)['\"]|\\\\(?:\\r\\n|[^]))*(\\1)?/y;\n$15d8e12dbdcf0478$var$NumericLiteral = /(?:0[xX][\\da-fA-F](?:_?[\\da-fA-F])*|0[oO][0-7](?:_?[0-7])*|0[bB][01](?:_?[01])*)n?|0n|[1-9](?:_?\\d)*n|(?:(?:0(?!\\d)|0\\d*[89]\\d*|[1-9](?:_?\\d)*)(?:\\.(?:\\d(?:_?\\d)*)?)?|\\.\\d(?:_?\\d)*)(?:[eE][+-]?\\d(?:_?\\d)*)?|0[0-7]+/y;\n$15d8e12dbdcf0478$var$Template = /[`}](?:[^`\\\\$]+|\\\\[^]|\\$(?!\\{))*(`|\\$\\{)?/y;\n$15d8e12dbdcf0478$var$WhiteSpace = /[\\t\\v\\f\\ufeff\\p{Zs}]+/yu;\n$15d8e12dbdcf0478$var$LineTerminatorSequence = /\\r?\\n|[\\r\\u2028\\u2029]/y;\n$15d8e12dbdcf0478$var$MultiLineComment = /\\/\\*(?:[^*]+|\\*(?!\\/))*(\\*\\/)?/y;\n$15d8e12dbdcf0478$var$SingleLineComment = /\\/\\/.*/y;\n$15d8e12dbdcf0478$var$JSXPunctuator = /[<>.:={}]|\\/(?![\\/*])/y;\n$15d8e12dbdcf0478$var$JSXIdentifier = /[$_\\p{ID_Start}][$_\\u200C\\u200D\\p{ID_Continue}-]*/yu;\n$15d8e12dbdcf0478$var$JSXString = /(['\"])(?:[^'\"]+|(?!\\1)['\"])*(\\1)?/y;\n$15d8e12dbdcf0478$var$JSXText = /[^<>{}]+/y;\n$15d8e12dbdcf0478$var$TokensPrecedingExpression = /^(?:[\\/+-]|\\.{3}|\\?(?:InterpolationIn(?:JSX|Template)|NoLineTerminatorHere|NonExpressionParenEnd|UnaryIncDec))?$|[{}([,;<>=*%&|^!~?:]$/;\n$15d8e12dbdcf0478$var$TokensNotPrecedingObjectLiteral = /^(?:=>|[;\\]){}]|else|\\?(?:NoLineTerminatorHere|NonExpressionParenEnd))?$/;\n$15d8e12dbdcf0478$var$KeywordsWithExpressionAfter = /^(?:await|case|default|delete|do|else|instanceof|new|return|throw|typeof|void|yield)$/;\n$15d8e12dbdcf0478$var$KeywordsWithNoLineTerminatorAfter = /^(?:return|throw|yield)$/;\n$15d8e12dbdcf0478$var$Newline = RegExp($15d8e12dbdcf0478$var$LineTerminatorSequence.source);\nmodule.exports = $15d8e12dbdcf0478$var$jsTokens = function*(input, { jsx: jsx = false } = {}) {\n    var braces, firstCodePoint, isExpression, lastIndex, lastSignificantToken, length, match, mode, nextLastIndex, nextLastSignificantToken, parenNesting, postfixIncDec, punctuator, stack;\n    ({ length: length } = input);\n    lastIndex = 0;\n    lastSignificantToken = \"\";\n    stack = [\n        {\n            tag: \"JS\"\n        }\n    ];\n    braces = [];\n    parenNesting = 0;\n    postfixIncDec = false;\n    while(lastIndex < length){\n        mode = stack[stack.length - 1];\n        switch(mode.tag){\n            case \"JS\":\n            case \"JSNonExpressionParen\":\n            case \"InterpolationInTemplate\":\n            case \"InterpolationInJSX\":\n                if (input[lastIndex] === \"/\" && ($15d8e12dbdcf0478$var$TokensPrecedingExpression.test(lastSignificantToken) || $15d8e12dbdcf0478$var$KeywordsWithExpressionAfter.test(lastSignificantToken))) {\n                    $15d8e12dbdcf0478$var$RegularExpressionLiteral.lastIndex = lastIndex;\n                    if (match = $15d8e12dbdcf0478$var$RegularExpressionLiteral.exec(input)) {\n                        lastIndex = $15d8e12dbdcf0478$var$RegularExpressionLiteral.lastIndex;\n                        lastSignificantToken = match[0];\n                        postfixIncDec = true;\n                        yield {\n                            type: \"RegularExpressionLiteral\",\n                            value: match[0],\n                            closed: match[1] !== void 0 && match[1] !== \"\\\\\"\n                        };\n                        continue;\n                    }\n                }\n                $15d8e12dbdcf0478$var$Punctuator.lastIndex = lastIndex;\n                if (match = $15d8e12dbdcf0478$var$Punctuator.exec(input)) {\n                    punctuator = match[0];\n                    nextLastIndex = $15d8e12dbdcf0478$var$Punctuator.lastIndex;\n                    nextLastSignificantToken = punctuator;\n                    switch(punctuator){\n                        case \"(\":\n                            if (lastSignificantToken === \"?NonExpressionParenKeyword\") stack.push({\n                                tag: \"JSNonExpressionParen\",\n                                nesting: parenNesting\n                            });\n                            parenNesting++;\n                            postfixIncDec = false;\n                            break;\n                        case \")\":\n                            parenNesting--;\n                            postfixIncDec = true;\n                            if (mode.tag === \"JSNonExpressionParen\" && parenNesting === mode.nesting) {\n                                stack.pop();\n                                nextLastSignificantToken = \"?NonExpressionParenEnd\";\n                                postfixIncDec = false;\n                            }\n                            break;\n                        case \"{\":\n                            $15d8e12dbdcf0478$var$Punctuator.lastIndex = 0;\n                            isExpression = !$15d8e12dbdcf0478$var$TokensNotPrecedingObjectLiteral.test(lastSignificantToken) && ($15d8e12dbdcf0478$var$TokensPrecedingExpression.test(lastSignificantToken) || $15d8e12dbdcf0478$var$KeywordsWithExpressionAfter.test(lastSignificantToken));\n                            braces.push(isExpression);\n                            postfixIncDec = false;\n                            break;\n                        case \"}\":\n                            switch(mode.tag){\n                                case \"InterpolationInTemplate\":\n                                    if (braces.length === mode.nesting) {\n                                        $15d8e12dbdcf0478$var$Template.lastIndex = lastIndex;\n                                        match = $15d8e12dbdcf0478$var$Template.exec(input);\n                                        lastIndex = $15d8e12dbdcf0478$var$Template.lastIndex;\n                                        lastSignificantToken = match[0];\n                                        if (match[1] === \"${\") {\n                                            lastSignificantToken = \"?InterpolationInTemplate\";\n                                            postfixIncDec = false;\n                                            yield {\n                                                type: \"TemplateMiddle\",\n                                                value: match[0]\n                                            };\n                                        } else {\n                                            stack.pop();\n                                            postfixIncDec = true;\n                                            yield {\n                                                type: \"TemplateTail\",\n                                                value: match[0],\n                                                closed: match[1] === \"`\"\n                                            };\n                                        }\n                                        continue;\n                                    }\n                                    break;\n                                case \"InterpolationInJSX\":\n                                    if (braces.length === mode.nesting) {\n                                        stack.pop();\n                                        lastIndex += 1;\n                                        lastSignificantToken = \"}\";\n                                        yield {\n                                            type: \"JSXPunctuator\",\n                                            value: \"}\"\n                                        };\n                                        continue;\n                                    }\n                            }\n                            postfixIncDec = braces.pop();\n                            nextLastSignificantToken = postfixIncDec ? \"?ExpressionBraceEnd\" : \"}\";\n                            break;\n                        case \"]\":\n                            postfixIncDec = true;\n                            break;\n                        case \"++\":\n                        case \"--\":\n                            nextLastSignificantToken = postfixIncDec ? \"?PostfixIncDec\" : \"?UnaryIncDec\";\n                            break;\n                        case \"<\":\n                            if (jsx && ($15d8e12dbdcf0478$var$TokensPrecedingExpression.test(lastSignificantToken) || $15d8e12dbdcf0478$var$KeywordsWithExpressionAfter.test(lastSignificantToken))) {\n                                stack.push({\n                                    tag: \"JSXTag\"\n                                });\n                                lastIndex += 1;\n                                lastSignificantToken = \"<\";\n                                yield {\n                                    type: \"JSXPunctuator\",\n                                    value: punctuator\n                                };\n                                continue;\n                            }\n                            postfixIncDec = false;\n                            break;\n                        default:\n                            postfixIncDec = false;\n                    }\n                    lastIndex = nextLastIndex;\n                    lastSignificantToken = nextLastSignificantToken;\n                    yield {\n                        type: \"Punctuator\",\n                        value: punctuator\n                    };\n                    continue;\n                }\n                $15d8e12dbdcf0478$var$Identifier.lastIndex = lastIndex;\n                if (match = $15d8e12dbdcf0478$var$Identifier.exec(input)) {\n                    lastIndex = $15d8e12dbdcf0478$var$Identifier.lastIndex;\n                    nextLastSignificantToken = match[0];\n                    switch(match[0]){\n                        case \"for\":\n                        case \"if\":\n                        case \"while\":\n                        case \"with\":\n                            if (lastSignificantToken !== \".\" && lastSignificantToken !== \"?.\") nextLastSignificantToken = \"?NonExpressionParenKeyword\";\n                    }\n                    lastSignificantToken = nextLastSignificantToken;\n                    postfixIncDec = !$15d8e12dbdcf0478$var$KeywordsWithExpressionAfter.test(match[0]);\n                    yield {\n                        type: match[1] === \"#\" ? \"PrivateIdentifier\" : \"IdentifierName\",\n                        value: match[0]\n                    };\n                    continue;\n                }\n                $15d8e12dbdcf0478$var$StringLiteral.lastIndex = lastIndex;\n                if (match = $15d8e12dbdcf0478$var$StringLiteral.exec(input)) {\n                    lastIndex = $15d8e12dbdcf0478$var$StringLiteral.lastIndex;\n                    lastSignificantToken = match[0];\n                    postfixIncDec = true;\n                    yield {\n                        type: \"StringLiteral\",\n                        value: match[0],\n                        closed: match[2] !== void 0\n                    };\n                    continue;\n                }\n                $15d8e12dbdcf0478$var$NumericLiteral.lastIndex = lastIndex;\n                if (match = $15d8e12dbdcf0478$var$NumericLiteral.exec(input)) {\n                    lastIndex = $15d8e12dbdcf0478$var$NumericLiteral.lastIndex;\n                    lastSignificantToken = match[0];\n                    postfixIncDec = true;\n                    yield {\n                        type: \"NumericLiteral\",\n                        value: match[0]\n                    };\n                    continue;\n                }\n                $15d8e12dbdcf0478$var$Template.lastIndex = lastIndex;\n                if (match = $15d8e12dbdcf0478$var$Template.exec(input)) {\n                    lastIndex = $15d8e12dbdcf0478$var$Template.lastIndex;\n                    lastSignificantToken = match[0];\n                    if (match[1] === \"${\") {\n                        lastSignificantToken = \"?InterpolationInTemplate\";\n                        stack.push({\n                            tag: \"InterpolationInTemplate\",\n                            nesting: braces.length\n                        });\n                        postfixIncDec = false;\n                        yield {\n                            type: \"TemplateHead\",\n                            value: match[0]\n                        };\n                    } else {\n                        postfixIncDec = true;\n                        yield {\n                            type: \"NoSubstitutionTemplate\",\n                            value: match[0],\n                            closed: match[1] === \"`\"\n                        };\n                    }\n                    continue;\n                }\n                break;\n            case \"JSXTag\":\n            case \"JSXTagEnd\":\n                $15d8e12dbdcf0478$var$JSXPunctuator.lastIndex = lastIndex;\n                if (match = $15d8e12dbdcf0478$var$JSXPunctuator.exec(input)) {\n                    lastIndex = $15d8e12dbdcf0478$var$JSXPunctuator.lastIndex;\n                    nextLastSignificantToken = match[0];\n                    switch(match[0]){\n                        case \"<\":\n                            stack.push({\n                                tag: \"JSXTag\"\n                            });\n                            break;\n                        case \">\":\n                            stack.pop();\n                            if (lastSignificantToken === \"/\" || mode.tag === \"JSXTagEnd\") {\n                                nextLastSignificantToken = \"?JSX\";\n                                postfixIncDec = true;\n                            } else stack.push({\n                                tag: \"JSXChildren\"\n                            });\n                            break;\n                        case \"{\":\n                            stack.push({\n                                tag: \"InterpolationInJSX\",\n                                nesting: braces.length\n                            });\n                            nextLastSignificantToken = \"?InterpolationInJSX\";\n                            postfixIncDec = false;\n                            break;\n                        case \"/\":\n                            if (lastSignificantToken === \"<\") {\n                                stack.pop();\n                                if (stack[stack.length - 1].tag === \"JSXChildren\") stack.pop();\n                                stack.push({\n                                    tag: \"JSXTagEnd\"\n                                });\n                            }\n                    }\n                    lastSignificantToken = nextLastSignificantToken;\n                    yield {\n                        type: \"JSXPunctuator\",\n                        value: match[0]\n                    };\n                    continue;\n                }\n                $15d8e12dbdcf0478$var$JSXIdentifier.lastIndex = lastIndex;\n                if (match = $15d8e12dbdcf0478$var$JSXIdentifier.exec(input)) {\n                    lastIndex = $15d8e12dbdcf0478$var$JSXIdentifier.lastIndex;\n                    lastSignificantToken = match[0];\n                    yield {\n                        type: \"JSXIdentifier\",\n                        value: match[0]\n                    };\n                    continue;\n                }\n                $15d8e12dbdcf0478$var$JSXString.lastIndex = lastIndex;\n                if (match = $15d8e12dbdcf0478$var$JSXString.exec(input)) {\n                    lastIndex = $15d8e12dbdcf0478$var$JSXString.lastIndex;\n                    lastSignificantToken = match[0];\n                    yield {\n                        type: \"JSXString\",\n                        value: match[0],\n                        closed: match[2] !== void 0\n                    };\n                    continue;\n                }\n                break;\n            case \"JSXChildren\":\n                $15d8e12dbdcf0478$var$JSXText.lastIndex = lastIndex;\n                if (match = $15d8e12dbdcf0478$var$JSXText.exec(input)) {\n                    lastIndex = $15d8e12dbdcf0478$var$JSXText.lastIndex;\n                    lastSignificantToken = match[0];\n                    yield {\n                        type: \"JSXText\",\n                        value: match[0]\n                    };\n                    continue;\n                }\n                switch(input[lastIndex]){\n                    case \"<\":\n                        stack.push({\n                            tag: \"JSXTag\"\n                        });\n                        lastIndex++;\n                        lastSignificantToken = \"<\";\n                        yield {\n                            type: \"JSXPunctuator\",\n                            value: \"<\"\n                        };\n                        continue;\n                    case \"{\":\n                        stack.push({\n                            tag: \"InterpolationInJSX\",\n                            nesting: braces.length\n                        });\n                        lastIndex++;\n                        lastSignificantToken = \"?InterpolationInJSX\";\n                        postfixIncDec = false;\n                        yield {\n                            type: \"JSXPunctuator\",\n                            value: \"{\"\n                        };\n                        continue;\n                }\n        }\n        $15d8e12dbdcf0478$var$WhiteSpace.lastIndex = lastIndex;\n        if (match = $15d8e12dbdcf0478$var$WhiteSpace.exec(input)) {\n            lastIndex = $15d8e12dbdcf0478$var$WhiteSpace.lastIndex;\n            yield {\n                type: \"WhiteSpace\",\n                value: match[0]\n            };\n            continue;\n        }\n        $15d8e12dbdcf0478$var$LineTerminatorSequence.lastIndex = lastIndex;\n        if (match = $15d8e12dbdcf0478$var$LineTerminatorSequence.exec(input)) {\n            lastIndex = $15d8e12dbdcf0478$var$LineTerminatorSequence.lastIndex;\n            postfixIncDec = false;\n            if ($15d8e12dbdcf0478$var$KeywordsWithNoLineTerminatorAfter.test(lastSignificantToken)) lastSignificantToken = \"?NoLineTerminatorHere\";\n            yield {\n                type: \"LineTerminatorSequence\",\n                value: match[0]\n            };\n            continue;\n        }\n        $15d8e12dbdcf0478$var$MultiLineComment.lastIndex = lastIndex;\n        if (match = $15d8e12dbdcf0478$var$MultiLineComment.exec(input)) {\n            lastIndex = $15d8e12dbdcf0478$var$MultiLineComment.lastIndex;\n            if ($15d8e12dbdcf0478$var$Newline.test(match[0])) {\n                postfixIncDec = false;\n                if ($15d8e12dbdcf0478$var$KeywordsWithNoLineTerminatorAfter.test(lastSignificantToken)) lastSignificantToken = \"?NoLineTerminatorHere\";\n            }\n            yield {\n                type: \"MultiLineComment\",\n                value: match[0],\n                closed: match[1] !== void 0\n            };\n            continue;\n        }\n        $15d8e12dbdcf0478$var$SingleLineComment.lastIndex = lastIndex;\n        if (match = $15d8e12dbdcf0478$var$SingleLineComment.exec(input)) {\n            lastIndex = $15d8e12dbdcf0478$var$SingleLineComment.lastIndex;\n            postfixIncDec = false;\n            yield {\n                type: \"SingleLineComment\",\n                value: match[0]\n            };\n            continue;\n        }\n        firstCodePoint = String.fromCodePoint(input.codePointAt(lastIndex));\n        lastIndex += firstCodePoint.length;\n        lastSignificantToken = firstCodePoint;\n        postfixIncDec = false;\n        yield {\n            type: mode.tag.startsWith(\"JSX\") ? \"JSXInvalid\" : \"Invalid\",\n            value: firstCodePoint\n        };\n    }\n    return void 0;\n};\n\n});\n\nparcelRegister(\"672ZO\", function(module, exports) {\n\n$parcel$export(module.exports, \"supportsColor\", function () { return $4735b870170493f3$export$fcbe44f5d6fcebd; });\n$parcel$export(module.exports, \"Chalk\", function () { return $4735b870170493f3$export$79544b80b91c2197; });\n\nvar $6fcTa = parcelRequire(\"6fcTa\");\n\nvar $2ztGv = parcelRequire(\"2ztGv\");\n\nvar $jNMsN = parcelRequire(\"jNMsN\");\n\nconst { stdout: $4735b870170493f3$export$fcbe44f5d6fcebd, stderr: $4735b870170493f3$export$8107055a758cd2bd } = (0, $2ztGv.default);\nconst $4735b870170493f3$var$GENERATOR = Symbol(\"GENERATOR\");\nconst $4735b870170493f3$var$STYLER = Symbol(\"STYLER\");\nconst $4735b870170493f3$var$IS_EMPTY = Symbol(\"IS_EMPTY\");\n// `supportsColor.level` → `ansiStyles.color[name]` mapping\nconst $4735b870170493f3$var$levelMapping = [\n    \"ansi\",\n    \"ansi\",\n    \"ansi256\",\n    \"ansi16m\"\n];\nconst $4735b870170493f3$var$styles = Object.create(null);\nconst $4735b870170493f3$var$applyOptions = (object, options = {})=>{\n    if (options.level && !(Number.isInteger(options.level) && options.level >= 0 && options.level <= 3)) throw new Error(\"The `level` option should be an integer from 0 to 3\");\n    // Detect level if not set manually\n    const colorLevel = $4735b870170493f3$export$fcbe44f5d6fcebd ? $4735b870170493f3$export$fcbe44f5d6fcebd.level : 0;\n    object.level = options.level === undefined ? colorLevel : options.level;\n};\nclass $4735b870170493f3$export$79544b80b91c2197 {\n    constructor(options){\n        // eslint-disable-next-line no-constructor-return\n        return $4735b870170493f3$var$chalkFactory(options);\n    }\n}\nconst $4735b870170493f3$var$chalkFactory = (options)=>{\n    const chalk = (...strings)=>strings.join(\" \");\n    $4735b870170493f3$var$applyOptions(chalk, options);\n    Object.setPrototypeOf(chalk, $4735b870170493f3$var$createChalk.prototype);\n    return chalk;\n};\nfunction $4735b870170493f3$var$createChalk(options) {\n    return $4735b870170493f3$var$chalkFactory(options);\n}\nObject.setPrototypeOf($4735b870170493f3$var$createChalk.prototype, Function.prototype);\nfor (const [styleName, style] of Object.entries((0, $6fcTa.default)))$4735b870170493f3$var$styles[styleName] = {\n    get () {\n        const builder = $4735b870170493f3$var$createBuilder(this, $4735b870170493f3$var$createStyler(style.open, style.close, this[$4735b870170493f3$var$STYLER]), this[$4735b870170493f3$var$IS_EMPTY]);\n        Object.defineProperty(this, styleName, {\n            value: builder\n        });\n        return builder;\n    }\n};\n$4735b870170493f3$var$styles.visible = {\n    get () {\n        const builder = $4735b870170493f3$var$createBuilder(this, this[$4735b870170493f3$var$STYLER], true);\n        Object.defineProperty(this, \"visible\", {\n            value: builder\n        });\n        return builder;\n    }\n};\nconst $4735b870170493f3$var$getModelAnsi = (model, level, type, ...arguments_)=>{\n    if (model === \"rgb\") {\n        if (level === \"ansi16m\") return (0, $6fcTa.default)[type].ansi16m(...arguments_);\n        if (level === \"ansi256\") return (0, $6fcTa.default)[type].ansi256((0, $6fcTa.default).rgbToAnsi256(...arguments_));\n        return (0, $6fcTa.default)[type].ansi((0, $6fcTa.default).rgbToAnsi(...arguments_));\n    }\n    if (model === \"hex\") return $4735b870170493f3$var$getModelAnsi(\"rgb\", level, type, ...(0, $6fcTa.default).hexToRgb(...arguments_));\n    return (0, $6fcTa.default)[type][model](...arguments_);\n};\nconst $4735b870170493f3$var$usedModels = [\n    \"rgb\",\n    \"hex\",\n    \"ansi256\"\n];\nfor (const model of $4735b870170493f3$var$usedModels){\n    $4735b870170493f3$var$styles[model] = {\n        get () {\n            const { level: level } = this;\n            return function(...arguments_) {\n                const styler = $4735b870170493f3$var$createStyler($4735b870170493f3$var$getModelAnsi(model, $4735b870170493f3$var$levelMapping[level], \"color\", ...arguments_), (0, $6fcTa.default).color.close, this[$4735b870170493f3$var$STYLER]);\n                return $4735b870170493f3$var$createBuilder(this, styler, this[$4735b870170493f3$var$IS_EMPTY]);\n            };\n        }\n    };\n    const bgModel = \"bg\" + model[0].toUpperCase() + model.slice(1);\n    $4735b870170493f3$var$styles[bgModel] = {\n        get () {\n            const { level: level } = this;\n            return function(...arguments_) {\n                const styler = $4735b870170493f3$var$createStyler($4735b870170493f3$var$getModelAnsi(model, $4735b870170493f3$var$levelMapping[level], \"bgColor\", ...arguments_), (0, $6fcTa.default).bgColor.close, this[$4735b870170493f3$var$STYLER]);\n                return $4735b870170493f3$var$createBuilder(this, styler, this[$4735b870170493f3$var$IS_EMPTY]);\n            };\n        }\n    };\n}\nconst $4735b870170493f3$var$proto = Object.defineProperties(()=>{}, {\n    ...$4735b870170493f3$var$styles,\n    level: {\n        enumerable: true,\n        get () {\n            return this[$4735b870170493f3$var$GENERATOR].level;\n        },\n        set (level) {\n            this[$4735b870170493f3$var$GENERATOR].level = level;\n        }\n    }\n});\nconst $4735b870170493f3$var$createStyler = (open, close, parent)=>{\n    let openAll;\n    let closeAll;\n    if (parent === undefined) {\n        openAll = open;\n        closeAll = close;\n    } else {\n        openAll = parent.openAll + open;\n        closeAll = close + parent.closeAll;\n    }\n    return {\n        open: open,\n        close: close,\n        openAll: openAll,\n        closeAll: closeAll,\n        parent: parent\n    };\n};\nconst $4735b870170493f3$var$createBuilder = (self, _styler, _isEmpty)=>{\n    // Single argument is hot path, implicit coercion is faster than anything\n    // eslint-disable-next-line no-implicit-coercion\n    const builder = (...arguments_)=>$4735b870170493f3$var$applyStyle(builder, arguments_.length === 1 ? \"\" + arguments_[0] : arguments_.join(\" \"));\n    // We alter the prototype because we must return a function, but there is\n    // no way to create a function with a different prototype\n    Object.setPrototypeOf(builder, $4735b870170493f3$var$proto);\n    builder[$4735b870170493f3$var$GENERATOR] = self;\n    builder[$4735b870170493f3$var$STYLER] = _styler;\n    builder[$4735b870170493f3$var$IS_EMPTY] = _isEmpty;\n    return builder;\n};\nconst $4735b870170493f3$var$applyStyle = (self, string)=>{\n    if (self.level <= 0 || !string) return self[$4735b870170493f3$var$IS_EMPTY] ? \"\" : string;\n    let styler = self[$4735b870170493f3$var$STYLER];\n    if (styler === undefined) return string;\n    const { openAll: openAll, closeAll: closeAll } = styler;\n    if (string.includes(\"\\x1b\")) while(styler !== undefined){\n        // Replace any instances already present with a re-opening code\n        // otherwise only the part of the string until said closing code\n        // will be colored, and the rest will simply be 'plain'.\n        string = (0, $jNMsN.stringReplaceAll)(string, styler.close, styler.open);\n        styler = styler.parent;\n    }\n    // We can move both next actions out of loop, because remaining actions in loop won't have\n    // any/visible effect on parts we add here. Close the styling before a linebreak and reopen\n    // after next line to fix a bleed issue on macOS: https://github.com/chalk/chalk/pull/92\n    const lfIndex = string.indexOf(\"\\n\");\n    if (lfIndex !== -1) string = (0, $jNMsN.stringEncaseCRLFWithFirstIndex)(string, closeAll, openAll, lfIndex);\n    return openAll + string + closeAll;\n};\nObject.defineProperties($4735b870170493f3$var$createChalk.prototype, $4735b870170493f3$var$styles);\nconst $4735b870170493f3$var$chalk = $4735b870170493f3$var$createChalk();\nconst $4735b870170493f3$export$8cef8185e551afa5 = $4735b870170493f3$var$createChalk({\n    level: $4735b870170493f3$export$8107055a758cd2bd ? $4735b870170493f3$export$8107055a758cd2bd.level : 0\n});\nvar $4735b870170493f3$export$2e2bcd8739ae039 = $4735b870170493f3$var$chalk;\n\n});\nparcelRegister(\"6fcTa\", function(module, exports) {\n\n$parcel$export(module.exports, \"default\", function () { return $48be243e32dd4ca3$export$2e2bcd8739ae039; });\nconst $48be243e32dd4ca3$var$ANSI_BACKGROUND_OFFSET = 10;\nconst $48be243e32dd4ca3$var$wrapAnsi16 = (offset = 0)=>(code)=>`\\u001B[${code + offset}m`;\nconst $48be243e32dd4ca3$var$wrapAnsi256 = (offset = 0)=>(code)=>`\\u001B[${38 + offset};5;${code}m`;\nconst $48be243e32dd4ca3$var$wrapAnsi16m = (offset = 0)=>(red, green, blue)=>`\\u001B[${38 + offset};2;${red};${green};${blue}m`;\nconst $48be243e32dd4ca3$var$styles = {\n    modifier: {\n        reset: [\n            0,\n            0\n        ],\n        // 21 isn't widely supported and 22 does the same thing\n        bold: [\n            1,\n            22\n        ],\n        dim: [\n            2,\n            22\n        ],\n        italic: [\n            3,\n            23\n        ],\n        underline: [\n            4,\n            24\n        ],\n        overline: [\n            53,\n            55\n        ],\n        inverse: [\n            7,\n            27\n        ],\n        hidden: [\n            8,\n            28\n        ],\n        strikethrough: [\n            9,\n            29\n        ]\n    },\n    color: {\n        black: [\n            30,\n            39\n        ],\n        red: [\n            31,\n            39\n        ],\n        green: [\n            32,\n            39\n        ],\n        yellow: [\n            33,\n            39\n        ],\n        blue: [\n            34,\n            39\n        ],\n        magenta: [\n            35,\n            39\n        ],\n        cyan: [\n            36,\n            39\n        ],\n        white: [\n            37,\n            39\n        ],\n        // Bright color\n        blackBright: [\n            90,\n            39\n        ],\n        gray: [\n            90,\n            39\n        ],\n        grey: [\n            90,\n            39\n        ],\n        redBright: [\n            91,\n            39\n        ],\n        greenBright: [\n            92,\n            39\n        ],\n        yellowBright: [\n            93,\n            39\n        ],\n        blueBright: [\n            94,\n            39\n        ],\n        magentaBright: [\n            95,\n            39\n        ],\n        cyanBright: [\n            96,\n            39\n        ],\n        whiteBright: [\n            97,\n            39\n        ]\n    },\n    bgColor: {\n        bgBlack: [\n            40,\n            49\n        ],\n        bgRed: [\n            41,\n            49\n        ],\n        bgGreen: [\n            42,\n            49\n        ],\n        bgYellow: [\n            43,\n            49\n        ],\n        bgBlue: [\n            44,\n            49\n        ],\n        bgMagenta: [\n            45,\n            49\n        ],\n        bgCyan: [\n            46,\n            49\n        ],\n        bgWhite: [\n            47,\n            49\n        ],\n        // Bright color\n        bgBlackBright: [\n            100,\n            49\n        ],\n        bgGray: [\n            100,\n            49\n        ],\n        bgGrey: [\n            100,\n            49\n        ],\n        bgRedBright: [\n            101,\n            49\n        ],\n        bgGreenBright: [\n            102,\n            49\n        ],\n        bgYellowBright: [\n            103,\n            49\n        ],\n        bgBlueBright: [\n            104,\n            49\n        ],\n        bgMagentaBright: [\n            105,\n            49\n        ],\n        bgCyanBright: [\n            106,\n            49\n        ],\n        bgWhiteBright: [\n            107,\n            49\n        ]\n    }\n};\nconst $48be243e32dd4ca3$export$3348c8f862b779ea = Object.keys($48be243e32dd4ca3$var$styles.modifier);\nconst $48be243e32dd4ca3$export$b42573f554ad2328 = Object.keys($48be243e32dd4ca3$var$styles.color);\nconst $48be243e32dd4ca3$export$e9149c7dc90ec5a1 = Object.keys($48be243e32dd4ca3$var$styles.bgColor);\nconst $48be243e32dd4ca3$export$88bbe6beac980300 = [\n    ...$48be243e32dd4ca3$export$b42573f554ad2328,\n    ...$48be243e32dd4ca3$export$e9149c7dc90ec5a1\n];\nfunction $48be243e32dd4ca3$var$assembleStyles() {\n    const codes = new Map();\n    for (const [groupName, group] of Object.entries($48be243e32dd4ca3$var$styles)){\n        for (const [styleName, style] of Object.entries(group)){\n            $48be243e32dd4ca3$var$styles[styleName] = {\n                open: `\\u001B[${style[0]}m`,\n                close: `\\u001B[${style[1]}m`\n            };\n            group[styleName] = $48be243e32dd4ca3$var$styles[styleName];\n            codes.set(style[0], style[1]);\n        }\n        Object.defineProperty($48be243e32dd4ca3$var$styles, groupName, {\n            value: group,\n            enumerable: false\n        });\n    }\n    Object.defineProperty($48be243e32dd4ca3$var$styles, \"codes\", {\n        value: codes,\n        enumerable: false\n    });\n    $48be243e32dd4ca3$var$styles.color.close = \"\\x1b[39m\";\n    $48be243e32dd4ca3$var$styles.bgColor.close = \"\\x1b[49m\";\n    $48be243e32dd4ca3$var$styles.color.ansi = $48be243e32dd4ca3$var$wrapAnsi16();\n    $48be243e32dd4ca3$var$styles.color.ansi256 = $48be243e32dd4ca3$var$wrapAnsi256();\n    $48be243e32dd4ca3$var$styles.color.ansi16m = $48be243e32dd4ca3$var$wrapAnsi16m();\n    $48be243e32dd4ca3$var$styles.bgColor.ansi = $48be243e32dd4ca3$var$wrapAnsi16($48be243e32dd4ca3$var$ANSI_BACKGROUND_OFFSET);\n    $48be243e32dd4ca3$var$styles.bgColor.ansi256 = $48be243e32dd4ca3$var$wrapAnsi256($48be243e32dd4ca3$var$ANSI_BACKGROUND_OFFSET);\n    $48be243e32dd4ca3$var$styles.bgColor.ansi16m = $48be243e32dd4ca3$var$wrapAnsi16m($48be243e32dd4ca3$var$ANSI_BACKGROUND_OFFSET);\n    // From https://github.com/Qix-/color-convert/blob/3f0e0d4e92e235796ccb17f6e85c72094a651f49/conversions.js\n    Object.defineProperties($48be243e32dd4ca3$var$styles, {\n        rgbToAnsi256: {\n            value (red, green, blue) {\n                // We use the extended greyscale palette here, with the exception of\n                // black and white. normal palette only has 4 greyscale shades.\n                if (red === green && green === blue) {\n                    if (red < 8) return 16;\n                    if (red > 248) return 231;\n                    return Math.round((red - 8) / 247 * 24) + 232;\n                }\n                return 16 + 36 * Math.round(red / 255 * 5) + 6 * Math.round(green / 255 * 5) + Math.round(blue / 255 * 5);\n            },\n            enumerable: false\n        },\n        hexToRgb: {\n            value (hex) {\n                const matches = /[a-f\\d]{6}|[a-f\\d]{3}/i.exec(hex.toString(16));\n                if (!matches) return [\n                    0,\n                    0,\n                    0\n                ];\n                let [colorString] = matches;\n                if (colorString.length === 3) colorString = [\n                    ...colorString\n                ].map((character)=>character + character).join(\"\");\n                const integer = Number.parseInt(colorString, 16);\n                return [\n                    /* eslint-disable no-bitwise */ integer >> 16 & 0xFF,\n                    integer >> 8 & 0xFF,\n                    integer & 0xFF\n                ];\n            },\n            enumerable: false\n        },\n        hexToAnsi256: {\n            value: (hex)=>$48be243e32dd4ca3$var$styles.rgbToAnsi256(...$48be243e32dd4ca3$var$styles.hexToRgb(hex)),\n            enumerable: false\n        },\n        ansi256ToAnsi: {\n            value (code) {\n                if (code < 8) return 30 + code;\n                if (code < 16) return 90 + (code - 8);\n                let red;\n                let green;\n                let blue;\n                if (code >= 232) {\n                    red = ((code - 232) * 10 + 8) / 255;\n                    green = red;\n                    blue = red;\n                } else {\n                    code -= 16;\n                    const remainder = code % 36;\n                    red = Math.floor(code / 36) / 5;\n                    green = Math.floor(remainder / 6) / 5;\n                    blue = remainder % 6 / 5;\n                }\n                const value = Math.max(red, green, blue) * 2;\n                if (value === 0) return 30;\n                // eslint-disable-next-line no-bitwise\n                let result = 30 + (Math.round(blue) << 2 | Math.round(green) << 1 | Math.round(red));\n                if (value === 2) result += 60;\n                return result;\n            },\n            enumerable: false\n        },\n        rgbToAnsi: {\n            value: (red, green, blue)=>$48be243e32dd4ca3$var$styles.ansi256ToAnsi($48be243e32dd4ca3$var$styles.rgbToAnsi256(red, green, blue)),\n            enumerable: false\n        },\n        hexToAnsi: {\n            value: (hex)=>$48be243e32dd4ca3$var$styles.ansi256ToAnsi($48be243e32dd4ca3$var$styles.hexToAnsi256(hex)),\n            enumerable: false\n        }\n    });\n    return $48be243e32dd4ca3$var$styles;\n}\nconst $48be243e32dd4ca3$var$ansiStyles = $48be243e32dd4ca3$var$assembleStyles();\nvar $48be243e32dd4ca3$export$2e2bcd8739ae039 = $48be243e32dd4ca3$var$ansiStyles;\n\n});\n\nparcelRegister(\"2ztGv\", function(module, exports) {\n\n$parcel$export(module.exports, \"default\", function () { return $1df5e05ee943fd44$export$2e2bcd8739ae039; });\n/* eslint-env browser */ const $1df5e05ee943fd44$var$level = (()=>{\n    if (navigator.userAgentData) {\n        const brand = navigator.userAgentData.brands.find(({ brand: brand })=>brand === \"Chromium\");\n        if (brand && brand.version > 93) return 3;\n    }\n    if (/\\b(Chrome|Chromium)\\//.test(navigator.userAgent)) return 1;\n    return 0;\n})();\nconst $1df5e05ee943fd44$var$colorSupport = $1df5e05ee943fd44$var$level !== 0 && {\n    level: $1df5e05ee943fd44$var$level,\n    hasBasic: true,\n    has256: $1df5e05ee943fd44$var$level >= 2,\n    has16m: $1df5e05ee943fd44$var$level >= 3\n};\nconst $1df5e05ee943fd44$var$supportsColor = {\n    stdout: $1df5e05ee943fd44$var$colorSupport,\n    stderr: $1df5e05ee943fd44$var$colorSupport\n};\nvar $1df5e05ee943fd44$export$2e2bcd8739ae039 = $1df5e05ee943fd44$var$supportsColor;\n\n});\n\nparcelRegister(\"jNMsN\", function(module, exports) {\n\n$parcel$export(module.exports, \"stringReplaceAll\", function () { return $e6a82fbf759d06a0$export$9300dfb554c6c407; });\n$parcel$export(module.exports, \"stringEncaseCRLFWithFirstIndex\", function () { return $e6a82fbf759d06a0$export$ecabf4aff2e9764; });\n// TODO: When targeting Node.js 16, use `String.prototype.replaceAll`.\nfunction $e6a82fbf759d06a0$export$9300dfb554c6c407(string, substring, replacer) {\n    let index = string.indexOf(substring);\n    if (index === -1) return string;\n    const substringLength = substring.length;\n    let endIndex = 0;\n    let returnValue = \"\";\n    do {\n        returnValue += string.slice(endIndex, index) + substring + replacer;\n        endIndex = index + substringLength;\n        index = string.indexOf(substring, endIndex);\n    }while (index !== -1);\n    returnValue += string.slice(endIndex);\n    return returnValue;\n}\nfunction $e6a82fbf759d06a0$export$ecabf4aff2e9764(string, prefix, postfix, index) {\n    let endIndex = 0;\n    let returnValue = \"\";\n    do {\n        const gotCR = string[index - 1] === \"\\r\";\n        returnValue += string.slice(endIndex, gotCR ? index - 1 : index) + prefix + (gotCR ? \"\\r\\n\" : \"\\n\") + postfix;\n        endIndex = index + 1;\n        index = string.indexOf(\"\\n\", endIndex);\n    }while (index !== -1);\n    returnValue += string.slice(endIndex);\n    return returnValue;\n}\n\n});\n\n\nparcelRegister(\"5ENKe\", function(module, exports) {\n\"use strict\";\nObject.defineProperty(module.exports, \"__esModule\", {\n    value: true\n});\nObject.defineProperty(module.exports, \"isIdentifierChar\", {\n    enumerable: true,\n    get: function() {\n        return $93Yib.isIdentifierChar;\n    }\n});\nObject.defineProperty(module.exports, \"isIdentifierName\", {\n    enumerable: true,\n    get: function() {\n        return $93Yib.isIdentifierName;\n    }\n});\nObject.defineProperty(module.exports, \"isIdentifierStart\", {\n    enumerable: true,\n    get: function() {\n        return $93Yib.isIdentifierStart;\n    }\n});\nObject.defineProperty(module.exports, \"isKeyword\", {\n    enumerable: true,\n    get: function() {\n        return $011uq.isKeyword;\n    }\n});\nObject.defineProperty(module.exports, \"isReservedWord\", {\n    enumerable: true,\n    get: function() {\n        return $011uq.isReservedWord;\n    }\n});\nObject.defineProperty(module.exports, \"isStrictBindOnlyReservedWord\", {\n    enumerable: true,\n    get: function() {\n        return $011uq.isStrictBindOnlyReservedWord;\n    }\n});\nObject.defineProperty(module.exports, \"isStrictBindReservedWord\", {\n    enumerable: true,\n    get: function() {\n        return $011uq.isStrictBindReservedWord;\n    }\n});\nObject.defineProperty(module.exports, \"isStrictReservedWord\", {\n    enumerable: true,\n    get: function() {\n        return $011uq.isStrictReservedWord;\n    }\n});\n\nvar $93Yib = parcelRequire(\"93Yib\");\n\nvar $011uq = parcelRequire(\"011uq\");\n\n});\nparcelRegister(\"93Yib\", function(module, exports) {\n\"use strict\";\nObject.defineProperty(module.exports, \"__esModule\", {\n    value: true\n});\nmodule.exports.isIdentifierChar = $699329a2eacf4bfe$var$isIdentifierChar;\nmodule.exports.isIdentifierName = $699329a2eacf4bfe$var$isIdentifierName;\nmodule.exports.isIdentifierStart = $699329a2eacf4bfe$var$isIdentifierStart;\nlet $699329a2eacf4bfe$var$nonASCIIidentifierStartChars = \"\\xaa\\xb5\\xba\\xc0-\\xd6\\xd8-\\xf6\\xf8-\\u02C1\\u02C6-\\u02D1\\u02E0-\\u02E4\\u02EC\\u02EE\\u0370-\\u0374\\u0376\\u0377\\u037A-\\u037D\\u037F\\u0386\\u0388-\\u038A\\u038C\\u038E-\\u03A1\\u03A3-\\u03F5\\u03F7-\\u0481\\u048A-\\u052F\\u0531-\\u0556\\u0559\\u0560-\\u0588\\u05D0-\\u05EA\\u05EF-\\u05F2\\u0620-\\u064A\\u066E\\u066F\\u0671-\\u06D3\\u06D5\\u06E5\\u06E6\\u06EE\\u06EF\\u06FA-\\u06FC\\u06FF\\u0710\\u0712-\\u072F\\u074D-\\u07A5\\u07B1\\u07CA-\\u07EA\\u07F4\\u07F5\\u07FA\\u0800-\\u0815\\u081A\\u0824\\u0828\\u0840-\\u0858\\u0860-\\u086A\\u0870-\\u0887\\u0889-\\u088E\\u08A0-\\u08C9\\u0904-\\u0939\\u093D\\u0950\\u0958-\\u0961\\u0971-\\u0980\\u0985-\\u098C\\u098F\\u0990\\u0993-\\u09A8\\u09AA-\\u09B0\\u09B2\\u09B6-\\u09B9\\u09BD\\u09CE\\u09DC\\u09DD\\u09DF-\\u09E1\\u09F0\\u09F1\\u09FC\\u0A05-\\u0A0A\\u0A0F\\u0A10\\u0A13-\\u0A28\\u0A2A-\\u0A30\\u0A32\\u0A33\\u0A35\\u0A36\\u0A38\\u0A39\\u0A59-\\u0A5C\\u0A5E\\u0A72-\\u0A74\\u0A85-\\u0A8D\\u0A8F-\\u0A91\\u0A93-\\u0AA8\\u0AAA-\\u0AB0\\u0AB2\\u0AB3\\u0AB5-\\u0AB9\\u0ABD\\u0AD0\\u0AE0\\u0AE1\\u0AF9\\u0B05-\\u0B0C\\u0B0F\\u0B10\\u0B13-\\u0B28\\u0B2A-\\u0B30\\u0B32\\u0B33\\u0B35-\\u0B39\\u0B3D\\u0B5C\\u0B5D\\u0B5F-\\u0B61\\u0B71\\u0B83\\u0B85-\\u0B8A\\u0B8E-\\u0B90\\u0B92-\\u0B95\\u0B99\\u0B9A\\u0B9C\\u0B9E\\u0B9F\\u0BA3\\u0BA4\\u0BA8-\\u0BAA\\u0BAE-\\u0BB9\\u0BD0\\u0C05-\\u0C0C\\u0C0E-\\u0C10\\u0C12-\\u0C28\\u0C2A-\\u0C39\\u0C3D\\u0C58-\\u0C5A\\u0C5D\\u0C60\\u0C61\\u0C80\\u0C85-\\u0C8C\\u0C8E-\\u0C90\\u0C92-\\u0CA8\\u0CAA-\\u0CB3\\u0CB5-\\u0CB9\\u0CBD\\u0CDD\\u0CDE\\u0CE0\\u0CE1\\u0CF1\\u0CF2\\u0D04-\\u0D0C\\u0D0E-\\u0D10\\u0D12-\\u0D3A\\u0D3D\\u0D4E\\u0D54-\\u0D56\\u0D5F-\\u0D61\\u0D7A-\\u0D7F\\u0D85-\\u0D96\\u0D9A-\\u0DB1\\u0DB3-\\u0DBB\\u0DBD\\u0DC0-\\u0DC6\\u0E01-\\u0E30\\u0E32\\u0E33\\u0E40-\\u0E46\\u0E81\\u0E82\\u0E84\\u0E86-\\u0E8A\\u0E8C-\\u0EA3\\u0EA5\\u0EA7-\\u0EB0\\u0EB2\\u0EB3\\u0EBD\\u0EC0-\\u0EC4\\u0EC6\\u0EDC-\\u0EDF\\u0F00\\u0F40-\\u0F47\\u0F49-\\u0F6C\\u0F88-\\u0F8C\\u1000-\\u102A\\u103F\\u1050-\\u1055\\u105A-\\u105D\\u1061\\u1065\\u1066\\u106E-\\u1070\\u1075-\\u1081\\u108E\\u10A0-\\u10C5\\u10C7\\u10CD\\u10D0-\\u10FA\\u10FC-\\u1248\\u124A-\\u124D\\u1250-\\u1256\\u1258\\u125A-\\u125D\\u1260-\\u1288\\u128A-\\u128D\\u1290-\\u12B0\\u12B2-\\u12B5\\u12B8-\\u12BE\\u12C0\\u12C2-\\u12C5\\u12C8-\\u12D6\\u12D8-\\u1310\\u1312-\\u1315\\u1318-\\u135A\\u1380-\\u138F\\u13A0-\\u13F5\\u13F8-\\u13FD\\u1401-\\u166C\\u166F-\\u167F\\u1681-\\u169A\\u16A0-\\u16EA\\u16EE-\\u16F8\\u1700-\\u1711\\u171F-\\u1731\\u1740-\\u1751\\u1760-\\u176C\\u176E-\\u1770\\u1780-\\u17B3\\u17D7\\u17DC\\u1820-\\u1878\\u1880-\\u18A8\\u18AA\\u18B0-\\u18F5\\u1900-\\u191E\\u1950-\\u196D\\u1970-\\u1974\\u1980-\\u19AB\\u19B0-\\u19C9\\u1A00-\\u1A16\\u1A20-\\u1A54\\u1AA7\\u1B05-\\u1B33\\u1B45-\\u1B4C\\u1B83-\\u1BA0\\u1BAE\\u1BAF\\u1BBA-\\u1BE5\\u1C00-\\u1C23\\u1C4D-\\u1C4F\\u1C5A-\\u1C7D\\u1C80-\\u1C88\\u1C90-\\u1CBA\\u1CBD-\\u1CBF\\u1CE9-\\u1CEC\\u1CEE-\\u1CF3\\u1CF5\\u1CF6\\u1CFA\\u1D00-\\u1DBF\\u1E00-\\u1F15\\u1F18-\\u1F1D\\u1F20-\\u1F45\\u1F48-\\u1F4D\\u1F50-\\u1F57\\u1F59\\u1F5B\\u1F5D\\u1F5F-\\u1F7D\\u1F80-\\u1FB4\\u1FB6-\\u1FBC\\u1FBE\\u1FC2-\\u1FC4\\u1FC6-\\u1FCC\\u1FD0-\\u1FD3\\u1FD6-\\u1FDB\\u1FE0-\\u1FEC\\u1FF2-\\u1FF4\\u1FF6-\\u1FFC\\u2071\\u207F\\u2090-\\u209C\\u2102\\u2107\\u210A-\\u2113\\u2115\\u2118-\\u211D\\u2124\\u2126\\u2128\\u212A-\\u2139\\u213C-\\u213F\\u2145-\\u2149\\u214E\\u2160-\\u2188\\u2C00-\\u2CE4\\u2CEB-\\u2CEE\\u2CF2\\u2CF3\\u2D00-\\u2D25\\u2D27\\u2D2D\\u2D30-\\u2D67\\u2D6F\\u2D80-\\u2D96\\u2DA0-\\u2DA6\\u2DA8-\\u2DAE\\u2DB0-\\u2DB6\\u2DB8-\\u2DBE\\u2DC0-\\u2DC6\\u2DC8-\\u2DCE\\u2DD0-\\u2DD6\\u2DD8-\\u2DDE\\u3005-\\u3007\\u3021-\\u3029\\u3031-\\u3035\\u3038-\\u303C\\u3041-\\u3096\\u309B-\\u309F\\u30A1-\\u30FA\\u30FC-\\u30FF\\u3105-\\u312F\\u3131-\\u318E\\u31A0-\\u31BF\\u31F0-\\u31FF\\u3400-\\u4DBF\\u4E00-\\uA48C\\uA4D0-\\uA4FD\\uA500-\\uA60C\\uA610-\\uA61F\\uA62A\\uA62B\\uA640-\\uA66E\\uA67F-\\uA69D\\uA6A0-\\uA6EF\\uA717-\\uA71F\\uA722-\\uA788\\uA78B-\\uA7CA\\uA7D0\\uA7D1\\uA7D3\\uA7D5-\\uA7D9\\uA7F2-\\uA801\\uA803-\\uA805\\uA807-\\uA80A\\uA80C-\\uA822\\uA840-\\uA873\\uA882-\\uA8B3\\uA8F2-\\uA8F7\\uA8FB\\uA8FD\\uA8FE\\uA90A-\\uA925\\uA930-\\uA946\\uA960-\\uA97C\\uA984-\\uA9B2\\uA9CF\\uA9E0-\\uA9E4\\uA9E6-\\uA9EF\\uA9FA-\\uA9FE\\uAA00-\\uAA28\\uAA40-\\uAA42\\uAA44-\\uAA4B\\uAA60-\\uAA76\\uAA7A\\uAA7E-\\uAAAF\\uAAB1\\uAAB5\\uAAB6\\uAAB9-\\uAABD\\uAAC0\\uAAC2\\uAADB-\\uAADD\\uAAE0-\\uAAEA\\uAAF2-\\uAAF4\\uAB01-\\uAB06\\uAB09-\\uAB0E\\uAB11-\\uAB16\\uAB20-\\uAB26\\uAB28-\\uAB2E\\uAB30-\\uAB5A\\uAB5C-\\uAB69\\uAB70-\\uABE2\\uAC00-\\uD7A3\\uD7B0-\\uD7C6\\uD7CB-\\uD7FB\\uF900-\\uFA6D\\uFA70-\\uFAD9\\uFB00-\\uFB06\\uFB13-\\uFB17\\uFB1D\\uFB1F-\\uFB28\\uFB2A-\\uFB36\\uFB38-\\uFB3C\\uFB3E\\uFB40\\uFB41\\uFB43\\uFB44\\uFB46-\\uFBB1\\uFBD3-\\uFD3D\\uFD50-\\uFD8F\\uFD92-\\uFDC7\\uFDF0-\\uFDFB\\uFE70-\\uFE74\\uFE76-\\uFEFC\\uFF21-\\uFF3A\\uFF41-\\uFF5A\\uFF66-\\uFFBE\\uFFC2-\\uFFC7\\uFFCA-\\uFFCF\\uFFD2-\\uFFD7\\uFFDA-\\uFFDC\";\nlet $699329a2eacf4bfe$var$nonASCIIidentifierChars = \"\\u200C\\u200D\\xb7\\u0300-\\u036F\\u0387\\u0483-\\u0487\\u0591-\\u05BD\\u05BF\\u05C1\\u05C2\\u05C4\\u05C5\\u05C7\\u0610-\\u061A\\u064B-\\u0669\\u0670\\u06D6-\\u06DC\\u06DF-\\u06E4\\u06E7\\u06E8\\u06EA-\\u06ED\\u06F0-\\u06F9\\u0711\\u0730-\\u074A\\u07A6-\\u07B0\\u07C0-\\u07C9\\u07EB-\\u07F3\\u07FD\\u0816-\\u0819\\u081B-\\u0823\\u0825-\\u0827\\u0829-\\u082D\\u0859-\\u085B\\u0898-\\u089F\\u08CA-\\u08E1\\u08E3-\\u0903\\u093A-\\u093C\\u093E-\\u094F\\u0951-\\u0957\\u0962\\u0963\\u0966-\\u096F\\u0981-\\u0983\\u09BC\\u09BE-\\u09C4\\u09C7\\u09C8\\u09CB-\\u09CD\\u09D7\\u09E2\\u09E3\\u09E6-\\u09EF\\u09FE\\u0A01-\\u0A03\\u0A3C\\u0A3E-\\u0A42\\u0A47\\u0A48\\u0A4B-\\u0A4D\\u0A51\\u0A66-\\u0A71\\u0A75\\u0A81-\\u0A83\\u0ABC\\u0ABE-\\u0AC5\\u0AC7-\\u0AC9\\u0ACB-\\u0ACD\\u0AE2\\u0AE3\\u0AE6-\\u0AEF\\u0AFA-\\u0AFF\\u0B01-\\u0B03\\u0B3C\\u0B3E-\\u0B44\\u0B47\\u0B48\\u0B4B-\\u0B4D\\u0B55-\\u0B57\\u0B62\\u0B63\\u0B66-\\u0B6F\\u0B82\\u0BBE-\\u0BC2\\u0BC6-\\u0BC8\\u0BCA-\\u0BCD\\u0BD7\\u0BE6-\\u0BEF\\u0C00-\\u0C04\\u0C3C\\u0C3E-\\u0C44\\u0C46-\\u0C48\\u0C4A-\\u0C4D\\u0C55\\u0C56\\u0C62\\u0C63\\u0C66-\\u0C6F\\u0C81-\\u0C83\\u0CBC\\u0CBE-\\u0CC4\\u0CC6-\\u0CC8\\u0CCA-\\u0CCD\\u0CD5\\u0CD6\\u0CE2\\u0CE3\\u0CE6-\\u0CEF\\u0CF3\\u0D00-\\u0D03\\u0D3B\\u0D3C\\u0D3E-\\u0D44\\u0D46-\\u0D48\\u0D4A-\\u0D4D\\u0D57\\u0D62\\u0D63\\u0D66-\\u0D6F\\u0D81-\\u0D83\\u0DCA\\u0DCF-\\u0DD4\\u0DD6\\u0DD8-\\u0DDF\\u0DE6-\\u0DEF\\u0DF2\\u0DF3\\u0E31\\u0E34-\\u0E3A\\u0E47-\\u0E4E\\u0E50-\\u0E59\\u0EB1\\u0EB4-\\u0EBC\\u0EC8-\\u0ECE\\u0ED0-\\u0ED9\\u0F18\\u0F19\\u0F20-\\u0F29\\u0F35\\u0F37\\u0F39\\u0F3E\\u0F3F\\u0F71-\\u0F84\\u0F86\\u0F87\\u0F8D-\\u0F97\\u0F99-\\u0FBC\\u0FC6\\u102B-\\u103E\\u1040-\\u1049\\u1056-\\u1059\\u105E-\\u1060\\u1062-\\u1064\\u1067-\\u106D\\u1071-\\u1074\\u1082-\\u108D\\u108F-\\u109D\\u135D-\\u135F\\u1369-\\u1371\\u1712-\\u1715\\u1732-\\u1734\\u1752\\u1753\\u1772\\u1773\\u17B4-\\u17D3\\u17DD\\u17E0-\\u17E9\\u180B-\\u180D\\u180F-\\u1819\\u18A9\\u1920-\\u192B\\u1930-\\u193B\\u1946-\\u194F\\u19D0-\\u19DA\\u1A17-\\u1A1B\\u1A55-\\u1A5E\\u1A60-\\u1A7C\\u1A7F-\\u1A89\\u1A90-\\u1A99\\u1AB0-\\u1ABD\\u1ABF-\\u1ACE\\u1B00-\\u1B04\\u1B34-\\u1B44\\u1B50-\\u1B59\\u1B6B-\\u1B73\\u1B80-\\u1B82\\u1BA1-\\u1BAD\\u1BB0-\\u1BB9\\u1BE6-\\u1BF3\\u1C24-\\u1C37\\u1C40-\\u1C49\\u1C50-\\u1C59\\u1CD0-\\u1CD2\\u1CD4-\\u1CE8\\u1CED\\u1CF4\\u1CF7-\\u1CF9\\u1DC0-\\u1DFF\\u200C\\u200D\\u203F\\u2040\\u2054\\u20D0-\\u20DC\\u20E1\\u20E5-\\u20F0\\u2CEF-\\u2CF1\\u2D7F\\u2DE0-\\u2DFF\\u302A-\\u302F\\u3099\\u309A\\u30FB\\uA620-\\uA629\\uA66F\\uA674-\\uA67D\\uA69E\\uA69F\\uA6F0\\uA6F1\\uA802\\uA806\\uA80B\\uA823-\\uA827\\uA82C\\uA880\\uA881\\uA8B4-\\uA8C5\\uA8D0-\\uA8D9\\uA8E0-\\uA8F1\\uA8FF-\\uA909\\uA926-\\uA92D\\uA947-\\uA953\\uA980-\\uA983\\uA9B3-\\uA9C0\\uA9D0-\\uA9D9\\uA9E5\\uA9F0-\\uA9F9\\uAA29-\\uAA36\\uAA43\\uAA4C\\uAA4D\\uAA50-\\uAA59\\uAA7B-\\uAA7D\\uAAB0\\uAAB2-\\uAAB4\\uAAB7\\uAAB8\\uAABE\\uAABF\\uAAC1\\uAAEB-\\uAAEF\\uAAF5\\uAAF6\\uABE3-\\uABEA\\uABEC\\uABED\\uABF0-\\uABF9\\uFB1E\\uFE00-\\uFE0F\\uFE20-\\uFE2F\\uFE33\\uFE34\\uFE4D-\\uFE4F\\uFF10-\\uFF19\\uFF3F\\uFF65\";\nconst $699329a2eacf4bfe$var$nonASCIIidentifierStart = new RegExp(\"[\" + $699329a2eacf4bfe$var$nonASCIIidentifierStartChars + \"]\");\nconst $699329a2eacf4bfe$var$nonASCIIidentifier = new RegExp(\"[\" + $699329a2eacf4bfe$var$nonASCIIidentifierStartChars + $699329a2eacf4bfe$var$nonASCIIidentifierChars + \"]\");\n$699329a2eacf4bfe$var$nonASCIIidentifierStartChars = $699329a2eacf4bfe$var$nonASCIIidentifierChars = null;\nconst $699329a2eacf4bfe$var$astralIdentifierStartCodes = [\n    0,\n    11,\n    2,\n    25,\n    2,\n    18,\n    2,\n    1,\n    2,\n    14,\n    3,\n    13,\n    35,\n    122,\n    70,\n    52,\n    268,\n    28,\n    4,\n    48,\n    48,\n    31,\n    14,\n    29,\n    6,\n    37,\n    11,\n    29,\n    3,\n    35,\n    5,\n    7,\n    2,\n    4,\n    43,\n    157,\n    19,\n    35,\n    5,\n    35,\n    5,\n    39,\n    9,\n    51,\n    13,\n    10,\n    2,\n    14,\n    2,\n    6,\n    2,\n    1,\n    2,\n    10,\n    2,\n    14,\n    2,\n    6,\n    2,\n    1,\n    68,\n    310,\n    10,\n    21,\n    11,\n    7,\n    25,\n    5,\n    2,\n    41,\n    2,\n    8,\n    70,\n    5,\n    3,\n    0,\n    2,\n    43,\n    2,\n    1,\n    4,\n    0,\n    3,\n    22,\n    11,\n    22,\n    10,\n    30,\n    66,\n    18,\n    2,\n    1,\n    11,\n    21,\n    11,\n    25,\n    71,\n    55,\n    7,\n    1,\n    65,\n    0,\n    16,\n    3,\n    2,\n    2,\n    2,\n    28,\n    43,\n    28,\n    4,\n    28,\n    36,\n    7,\n    2,\n    27,\n    28,\n    53,\n    11,\n    21,\n    11,\n    18,\n    14,\n    17,\n    111,\n    72,\n    56,\n    50,\n    14,\n    50,\n    14,\n    35,\n    349,\n    41,\n    7,\n    1,\n    79,\n    28,\n    11,\n    0,\n    9,\n    21,\n    43,\n    17,\n    47,\n    20,\n    28,\n    22,\n    13,\n    52,\n    58,\n    1,\n    3,\n    0,\n    14,\n    44,\n    33,\n    24,\n    27,\n    35,\n    30,\n    0,\n    3,\n    0,\n    9,\n    34,\n    4,\n    0,\n    13,\n    47,\n    15,\n    3,\n    22,\n    0,\n    2,\n    0,\n    36,\n    17,\n    2,\n    24,\n    20,\n    1,\n    64,\n    6,\n    2,\n    0,\n    2,\n    3,\n    2,\n    14,\n    2,\n    9,\n    8,\n    46,\n    39,\n    7,\n    3,\n    1,\n    3,\n    21,\n    2,\n    6,\n    2,\n    1,\n    2,\n    4,\n    4,\n    0,\n    19,\n    0,\n    13,\n    4,\n    159,\n    52,\n    19,\n    3,\n    21,\n    2,\n    31,\n    47,\n    21,\n    1,\n    2,\n    0,\n    185,\n    46,\n    42,\n    3,\n    37,\n    47,\n    21,\n    0,\n    60,\n    42,\n    14,\n    0,\n    72,\n    26,\n    38,\n    6,\n    186,\n    43,\n    117,\n    63,\n    32,\n    7,\n    3,\n    0,\n    3,\n    7,\n    2,\n    1,\n    2,\n    23,\n    16,\n    0,\n    2,\n    0,\n    95,\n    7,\n    3,\n    38,\n    17,\n    0,\n    2,\n    0,\n    29,\n    0,\n    11,\n    39,\n    8,\n    0,\n    22,\n    0,\n    12,\n    45,\n    20,\n    0,\n    19,\n    72,\n    264,\n    8,\n    2,\n    36,\n    18,\n    0,\n    50,\n    29,\n    113,\n    6,\n    2,\n    1,\n    2,\n    37,\n    22,\n    0,\n    26,\n    5,\n    2,\n    1,\n    2,\n    31,\n    15,\n    0,\n    328,\n    18,\n    16,\n    0,\n    2,\n    12,\n    2,\n    33,\n    125,\n    0,\n    80,\n    921,\n    103,\n    110,\n    18,\n    195,\n    2637,\n    96,\n    16,\n    1071,\n    18,\n    5,\n    4026,\n    582,\n    8634,\n    568,\n    8,\n    30,\n    18,\n    78,\n    18,\n    29,\n    19,\n    47,\n    17,\n    3,\n    32,\n    20,\n    6,\n    18,\n    689,\n    63,\n    129,\n    74,\n    6,\n    0,\n    67,\n    12,\n    65,\n    1,\n    2,\n    0,\n    29,\n    6135,\n    9,\n    1237,\n    43,\n    8,\n    8936,\n    3,\n    2,\n    6,\n    2,\n    1,\n    2,\n    290,\n    16,\n    0,\n    30,\n    2,\n    3,\n    0,\n    15,\n    3,\n    9,\n    395,\n    2309,\n    106,\n    6,\n    12,\n    4,\n    8,\n    8,\n    9,\n    5991,\n    84,\n    2,\n    70,\n    2,\n    1,\n    3,\n    0,\n    3,\n    1,\n    3,\n    3,\n    2,\n    11,\n    2,\n    0,\n    2,\n    6,\n    2,\n    64,\n    2,\n    3,\n    3,\n    7,\n    2,\n    6,\n    2,\n    27,\n    2,\n    3,\n    2,\n    4,\n    2,\n    0,\n    4,\n    6,\n    2,\n    339,\n    3,\n    24,\n    2,\n    24,\n    2,\n    30,\n    2,\n    24,\n    2,\n    30,\n    2,\n    24,\n    2,\n    30,\n    2,\n    24,\n    2,\n    30,\n    2,\n    24,\n    2,\n    7,\n    1845,\n    30,\n    7,\n    5,\n    262,\n    61,\n    147,\n    44,\n    11,\n    6,\n    17,\n    0,\n    322,\n    29,\n    19,\n    43,\n    485,\n    27,\n    757,\n    6,\n    2,\n    3,\n    2,\n    1,\n    2,\n    14,\n    2,\n    196,\n    60,\n    67,\n    8,\n    0,\n    1205,\n    3,\n    2,\n    26,\n    2,\n    1,\n    2,\n    0,\n    3,\n    0,\n    2,\n    9,\n    2,\n    3,\n    2,\n    0,\n    2,\n    0,\n    7,\n    0,\n    5,\n    0,\n    2,\n    0,\n    2,\n    0,\n    2,\n    2,\n    2,\n    1,\n    2,\n    0,\n    3,\n    0,\n    2,\n    0,\n    2,\n    0,\n    2,\n    0,\n    2,\n    0,\n    2,\n    1,\n    2,\n    0,\n    3,\n    3,\n    2,\n    6,\n    2,\n    3,\n    2,\n    3,\n    2,\n    0,\n    2,\n    9,\n    2,\n    16,\n    6,\n    2,\n    2,\n    4,\n    2,\n    16,\n    4421,\n    42719,\n    33,\n    4153,\n    7,\n    221,\n    3,\n    5761,\n    15,\n    7472,\n    16,\n    621,\n    2467,\n    541,\n    1507,\n    4938,\n    6,\n    4191\n];\nconst $699329a2eacf4bfe$var$astralIdentifierCodes = [\n    509,\n    0,\n    227,\n    0,\n    150,\n    4,\n    294,\n    9,\n    1368,\n    2,\n    2,\n    1,\n    6,\n    3,\n    41,\n    2,\n    5,\n    0,\n    166,\n    1,\n    574,\n    3,\n    9,\n    9,\n    370,\n    1,\n    81,\n    2,\n    71,\n    10,\n    50,\n    3,\n    123,\n    2,\n    54,\n    14,\n    32,\n    10,\n    3,\n    1,\n    11,\n    3,\n    46,\n    10,\n    8,\n    0,\n    46,\n    9,\n    7,\n    2,\n    37,\n    13,\n    2,\n    9,\n    6,\n    1,\n    45,\n    0,\n    13,\n    2,\n    49,\n    13,\n    9,\n    3,\n    2,\n    11,\n    83,\n    11,\n    7,\n    0,\n    3,\n    0,\n    158,\n    11,\n    6,\n    9,\n    7,\n    3,\n    56,\n    1,\n    2,\n    6,\n    3,\n    1,\n    3,\n    2,\n    10,\n    0,\n    11,\n    1,\n    3,\n    6,\n    4,\n    4,\n    193,\n    17,\n    10,\n    9,\n    5,\n    0,\n    82,\n    19,\n    13,\n    9,\n    214,\n    6,\n    3,\n    8,\n    28,\n    1,\n    83,\n    16,\n    16,\n    9,\n    82,\n    12,\n    9,\n    9,\n    84,\n    14,\n    5,\n    9,\n    243,\n    14,\n    166,\n    9,\n    71,\n    5,\n    2,\n    1,\n    3,\n    3,\n    2,\n    0,\n    2,\n    1,\n    13,\n    9,\n    120,\n    6,\n    3,\n    6,\n    4,\n    0,\n    29,\n    9,\n    41,\n    6,\n    2,\n    3,\n    9,\n    0,\n    10,\n    10,\n    47,\n    15,\n    406,\n    7,\n    2,\n    7,\n    17,\n    9,\n    57,\n    21,\n    2,\n    13,\n    123,\n    5,\n    4,\n    0,\n    2,\n    1,\n    2,\n    6,\n    2,\n    0,\n    9,\n    9,\n    49,\n    4,\n    2,\n    1,\n    2,\n    4,\n    9,\n    9,\n    330,\n    3,\n    10,\n    1,\n    2,\n    0,\n    49,\n    6,\n    4,\n    4,\n    14,\n    9,\n    5351,\n    0,\n    7,\n    14,\n    13835,\n    9,\n    87,\n    9,\n    39,\n    4,\n    60,\n    6,\n    26,\n    9,\n    1014,\n    0,\n    2,\n    54,\n    8,\n    3,\n    82,\n    0,\n    12,\n    1,\n    19628,\n    1,\n    4706,\n    45,\n    3,\n    22,\n    543,\n    4,\n    4,\n    5,\n    9,\n    7,\n    3,\n    6,\n    31,\n    3,\n    149,\n    2,\n    1418,\n    49,\n    513,\n    54,\n    5,\n    49,\n    9,\n    0,\n    15,\n    0,\n    23,\n    4,\n    2,\n    14,\n    1361,\n    6,\n    2,\n    16,\n    3,\n    6,\n    2,\n    1,\n    2,\n    4,\n    101,\n    0,\n    161,\n    6,\n    10,\n    9,\n    357,\n    0,\n    62,\n    13,\n    499,\n    13,\n    983,\n    6,\n    110,\n    6,\n    6,\n    9,\n    4759,\n    9,\n    787719,\n    239\n];\nfunction $699329a2eacf4bfe$var$isInAstralSet(code, set) {\n    let pos = 0x10000;\n    for(let i = 0, length = set.length; i < length; i += 2){\n        pos += set[i];\n        if (pos > code) return false;\n        pos += set[i + 1];\n        if (pos >= code) return true;\n    }\n    return false;\n}\nfunction $699329a2eacf4bfe$var$isIdentifierStart(code) {\n    if (code < 65) return code === 36;\n    if (code <= 90) return true;\n    if (code < 97) return code === 95;\n    if (code <= 122) return true;\n    if (code <= 0xffff) return code >= 0xaa && $699329a2eacf4bfe$var$nonASCIIidentifierStart.test(String.fromCharCode(code));\n    return $699329a2eacf4bfe$var$isInAstralSet(code, $699329a2eacf4bfe$var$astralIdentifierStartCodes);\n}\nfunction $699329a2eacf4bfe$var$isIdentifierChar(code) {\n    if (code < 48) return code === 36;\n    if (code < 58) return true;\n    if (code < 65) return false;\n    if (code <= 90) return true;\n    if (code < 97) return code === 95;\n    if (code <= 122) return true;\n    if (code <= 0xffff) return code >= 0xaa && $699329a2eacf4bfe$var$nonASCIIidentifier.test(String.fromCharCode(code));\n    return $699329a2eacf4bfe$var$isInAstralSet(code, $699329a2eacf4bfe$var$astralIdentifierStartCodes) || $699329a2eacf4bfe$var$isInAstralSet(code, $699329a2eacf4bfe$var$astralIdentifierCodes);\n}\nfunction $699329a2eacf4bfe$var$isIdentifierName(name) {\n    let isFirst = true;\n    for(let i = 0; i < name.length; i++){\n        let cp = name.charCodeAt(i);\n        if ((cp & 0xfc00) === 0xd800 && i + 1 < name.length) {\n            const trail = name.charCodeAt(++i);\n            if ((trail & 0xfc00) === 0xdc00) cp = 0x10000 + ((cp & 0x3ff) << 10) + (trail & 0x3ff);\n        }\n        if (isFirst) {\n            isFirst = false;\n            if (!$699329a2eacf4bfe$var$isIdentifierStart(cp)) return false;\n        } else if (!$699329a2eacf4bfe$var$isIdentifierChar(cp)) return false;\n    }\n    return !isFirst;\n}\n\n});\n\nparcelRegister(\"011uq\", function(module, exports) {\n\"use strict\";\nObject.defineProperty(module.exports, \"__esModule\", {\n    value: true\n});\nmodule.exports.isKeyword = $00313ff3a6f6175a$var$isKeyword;\nmodule.exports.isReservedWord = $00313ff3a6f6175a$var$isReservedWord;\nmodule.exports.isStrictBindOnlyReservedWord = $00313ff3a6f6175a$var$isStrictBindOnlyReservedWord;\nmodule.exports.isStrictBindReservedWord = $00313ff3a6f6175a$var$isStrictBindReservedWord;\nmodule.exports.isStrictReservedWord = $00313ff3a6f6175a$var$isStrictReservedWord;\nconst $00313ff3a6f6175a$var$reservedWords = {\n    keyword: [\n        \"break\",\n        \"case\",\n        \"catch\",\n        \"continue\",\n        \"debugger\",\n        \"default\",\n        \"do\",\n        \"else\",\n        \"finally\",\n        \"for\",\n        \"function\",\n        \"if\",\n        \"return\",\n        \"switch\",\n        \"throw\",\n        \"try\",\n        \"var\",\n        \"const\",\n        \"while\",\n        \"with\",\n        \"new\",\n        \"this\",\n        \"super\",\n        \"class\",\n        \"extends\",\n        \"export\",\n        \"import\",\n        \"null\",\n        \"true\",\n        \"false\",\n        \"in\",\n        \"instanceof\",\n        \"typeof\",\n        \"void\",\n        \"delete\"\n    ],\n    strict: [\n        \"implements\",\n        \"interface\",\n        \"let\",\n        \"package\",\n        \"private\",\n        \"protected\",\n        \"public\",\n        \"static\",\n        \"yield\"\n    ],\n    strictBind: [\n        \"eval\",\n        \"arguments\"\n    ]\n};\nconst $00313ff3a6f6175a$var$keywords = new Set($00313ff3a6f6175a$var$reservedWords.keyword);\nconst $00313ff3a6f6175a$var$reservedWordsStrictSet = new Set($00313ff3a6f6175a$var$reservedWords.strict);\nconst $00313ff3a6f6175a$var$reservedWordsStrictBindSet = new Set($00313ff3a6f6175a$var$reservedWords.strictBind);\nfunction $00313ff3a6f6175a$var$isReservedWord(word, inModule) {\n    return inModule && word === \"await\" || word === \"enum\";\n}\nfunction $00313ff3a6f6175a$var$isStrictReservedWord(word, inModule) {\n    return $00313ff3a6f6175a$var$isReservedWord(word, inModule) || $00313ff3a6f6175a$var$reservedWordsStrictSet.has(word);\n}\nfunction $00313ff3a6f6175a$var$isStrictBindOnlyReservedWord(word) {\n    return $00313ff3a6f6175a$var$reservedWordsStrictBindSet.has(word);\n}\nfunction $00313ff3a6f6175a$var$isStrictBindReservedWord(word, inModule) {\n    return $00313ff3a6f6175a$var$isStrictReservedWord(word, inModule) || $00313ff3a6f6175a$var$isStrictBindOnlyReservedWord(word);\n}\nfunction $00313ff3a6f6175a$var$isKeyword(word) {\n    return $00313ff3a6f6175a$var$keywords.has(word);\n}\n\n});\n\n\n\n\n\n\n//# sourceMappingURL=impl-code-frame.d724e0c2.js.map\n","import { codeFrameColumns } from 'awesome-code-frame';\nimport { getLocation } from 'jsonpos';\nexport const printCode = (message, parsedJson, { path, markIdentifier, linesAbove = 5, linesBelow = 3, colors, }) => {\n    const { start, end } = getLocation(parsedJson, { path, markIdentifier });\n    if (!start)\n        return `{The path ${path} cannot be found in json}`;\n    return codeFrameColumns(parsedJson.jsonString, { start, end }, {\n        highlightCode: colors,\n        message,\n        linesAbove,\n        linesBelow,\n    });\n};\n","import highlight, { shouldHighlight, getChalk, } from \"../../babel-highlight/src/index.js\";\n/**\n * Chalk styles for code frame token types.\n */\nfunction getDefs(chalk) {\n    return {\n        gutter: chalk.gray,\n        marker: chalk.red.bold,\n        message: chalk.red.bold,\n    };\n}\n/**\n * RegExp to test for newlines in terminal.\n */\nconst NEWLINE = /\\r\\n|[\\n\\r\\u2028\\u2029]/;\n/**\n * Extract what lines should be marked and highlighted.\n */\nfunction getMarkerLines(loc, source, opts) {\n    const startLoc = {\n        column: 0,\n        // @ts-expect-error\n        line: -1,\n        ...loc.start,\n    };\n    const endLoc = {\n        ...startLoc,\n        ...loc.end,\n    };\n    const { linesAbove = 2, linesBelow = 3 } = opts || {};\n    const startLine = startLoc.line;\n    const startColumn = startLoc.column;\n    const endLine = endLoc.line;\n    const endColumn = endLoc.column;\n    let start = Math.max(startLine - (linesAbove + 1), 0);\n    let end = Math.min(source.length, endLine + linesBelow);\n    if (startLine === -1) {\n        start = 0;\n    }\n    if (endLine === -1) {\n        end = source.length;\n    }\n    const lineDiff = endLine - startLine;\n    const markerLines = {};\n    if (lineDiff) {\n        for (let i = 0; i <= lineDiff; i++) {\n            const lineNumber = i + startLine;\n            if (!startColumn) {\n                markerLines[lineNumber] = true;\n            }\n            else if (i === 0) {\n                const sourceLength = source[lineNumber - 1].length;\n                markerLines[lineNumber] = [startColumn, sourceLength - startColumn + 1];\n            }\n            else if (i === lineDiff) {\n                markerLines[lineNumber] = [0, endColumn];\n            }\n            else {\n                const sourceLength = source[lineNumber - i].length;\n                markerLines[lineNumber] = [0, sourceLength];\n            }\n        }\n    }\n    else {\n        if (startColumn === endColumn) {\n            if (startColumn) {\n                markerLines[startLine] = [startColumn, 0];\n            }\n            else {\n                markerLines[startLine] = true;\n            }\n        }\n        else {\n            markerLines[startLine] = [startColumn, endColumn - startColumn];\n        }\n    }\n    return { start, end, markerLines };\n}\nexport function codeFrameColumns(rawLines, loc, opts = {}) {\n    const highlighted = (opts.highlightCode || opts.forceColor) && shouldHighlight(opts);\n    const chalk = getChalk(opts);\n    const defs = getDefs(chalk);\n    const maybeHighlight = (chalkFn, text) => {\n        return highlighted ? chalkFn(text) : text;\n    };\n    const lines = rawLines.split(NEWLINE);\n    const { start, end, markerLines } = getMarkerLines(loc, lines, opts);\n    const hasColumns = loc.start && typeof loc.start.column === \"number\";\n    const numberMaxWidth = String(end).length;\n    const highlightedLines = highlighted ? highlight(rawLines, opts) : rawLines;\n    let frame = highlightedLines\n        .split(NEWLINE, end)\n        .slice(start, end)\n        .map((line, index) => {\n        const number = start + 1 + index;\n        const paddedNumber = ` ${number}`.slice(-numberMaxWidth);\n        const gutter = ` ${paddedNumber} |`;\n        const hasMarker = markerLines[number];\n        const lastMarkerLine = !markerLines[number + 1];\n        if (hasMarker) {\n            let markerLine = \"\";\n            if (Array.isArray(hasMarker)) {\n                const markerSpacing = line\n                    .slice(0, Math.max(hasMarker[0] - 1, 0))\n                    .replace(/[^\\t]/g, \" \");\n                const numberOfMarkers = hasMarker[1] || 1;\n                markerLine = [\n                    \"\\n \",\n                    maybeHighlight(defs.gutter, gutter.replace(/\\d/g, \" \")),\n                    \" \",\n                    markerSpacing,\n                    maybeHighlight(defs.marker, \"^\").repeat(numberOfMarkers),\n                ].join(\"\");\n                if (lastMarkerLine && opts.message) {\n                    markerLine += \" \" + maybeHighlight(defs.message, opts.message);\n                }\n            }\n            return [\n                maybeHighlight(defs.marker, \">\"),\n                maybeHighlight(defs.gutter, gutter),\n                line.length > 0 ? ` ${line}` : \"\",\n                markerLine,\n            ].join(\"\");\n        }\n        else {\n            return ` ${maybeHighlight(defs.gutter, gutter)}${line.length > 0 ? ` ${line}` : \"\"}`;\n        }\n    })\n        .join(\"\\n\");\n    if (opts.message && !hasColumns) {\n        frame = `${\" \".repeat(numberMaxWidth + 1)}${opts.message}\\n${frame}`;\n    }\n    if (highlighted) {\n        return chalk.reset(frame);\n    }\n    else {\n        return frame;\n    }\n}\n","// /// <reference path=\"../../../lib/third-party-libs.d.ts\" />\nimport jsTokens from \"js-tokens\";\nimport { supportsColor, Chalk } from \"chalk\";\nimport { isStrictReservedWord, isKeyword, } from \"@babel/helper-validator-identifier\";\n/**\n * Names that are always allowed as identifiers, but also appear as keywords\n * within certain syntactic productions.\n *\n * https://tc39.es/ecma262/#sec-keywords-and-reserved-words\n *\n * `target` has been omitted since it is very likely going to be a false\n * positive.\n */\nconst sometimesKeywords = new Set([\"as\", \"async\", \"from\", \"get\", \"of\", \"set\"]);\n/**\n * Chalk styles for token types.\n */\nfunction getDefs(chalk) {\n    return {\n        keyword: chalk.cyan,\n        capitalized: chalk.yellow,\n        jsxIdentifier: chalk.yellow,\n        punctuator: chalk.yellow,\n        number: chalk.magenta,\n        string: chalk.green,\n        regex: chalk.magenta,\n        comment: chalk.gray,\n        invalid: chalk.white.bgRed.bold,\n    };\n}\n/**\n * RegExp to test for newlines in terminal.\n */\nconst NEWLINE = /\\r\\n|[\\n\\r\\u2028\\u2029]/;\n/**\n * RegExp to test for the three types of brackets.\n */\nconst BRACKET = /^[()[\\]{}]$/;\nlet tokenize;\n/**\n * Get the type of token, specifying punctuator type.\n */\nconst getTokenType = function (token) {\n    if (token.type === \"IdentifierName\") {\n        if (isKeyword(token.value) ||\n            isStrictReservedWord(token.value, true) ||\n            sometimesKeywords.has(token.value)) {\n            return \"keyword\";\n        }\n        if (token.value[0] !== token.value[0].toLowerCase()) {\n            return \"capitalized\";\n        }\n    }\n    if (token.type === \"Punctuator\" && BRACKET.test(token.value)) {\n        return \"uncolored\";\n    }\n    if (token.type === \"Invalid\" &&\n        (token.value === \"@\" || token.value === \"#\")) {\n        return \"punctuator\";\n    }\n    switch (token.type) {\n        case \"NumericLiteral\":\n            return \"number\";\n        case \"StringLiteral\":\n        case \"JSXString\":\n        case \"NoSubstitutionTemplate\":\n            return \"string\";\n        case \"RegularExpressionLiteral\":\n            return \"regex\";\n        case \"Punctuator\":\n        case \"JSXPunctuator\":\n            return \"punctuator\";\n        case \"MultiLineComment\":\n        case \"SingleLineComment\":\n            return \"comment\";\n        case \"Invalid\":\n        case \"JSXInvalid\":\n            return \"invalid\";\n        case \"JSXIdentifier\":\n            return \"jsxIdentifier\";\n        default:\n            return \"uncolored\";\n    }\n};\n/**\n * Turn a string of JS into an array of objects.\n */\ntokenize = function* (text) {\n    for (const token of jsTokens(text, { jsx: true })) {\n        switch (token.type) {\n            case \"TemplateHead\":\n                yield { type: \"string\", value: token.value.slice(0, -2) };\n                yield { type: \"punctuator\", value: \"${\" };\n                break;\n            case \"TemplateMiddle\":\n                yield { type: \"punctuator\", value: \"}\" };\n                yield { type: \"string\", value: token.value.slice(1, -2) };\n                yield { type: \"punctuator\", value: \"${\" };\n                break;\n            case \"TemplateTail\":\n                yield { type: \"punctuator\", value: \"}\" };\n                yield { type: \"string\", value: token.value.slice(1) };\n                break;\n            default:\n                yield {\n                    type: getTokenType(token),\n                    value: token.value,\n                };\n        }\n    }\n};\n/**\n * Highlight `text` using the token definitions in `defs`.\n */\nfunction highlightTokens(defs, text) {\n    let highlighted = \"\";\n    for (const { type, value } of tokenize(text)) {\n        const colorize = defs[type];\n        if (colorize) {\n            highlighted += value\n                .split(NEWLINE)\n                .map(str => colorize(str))\n                .join(\"\\n\");\n        }\n        else {\n            highlighted += value;\n        }\n    }\n    return highlighted;\n}\n/**\n * Whether the code should be highlighted given the passed options.\n */\nexport function shouldHighlight(options) {\n    return !!supportsColor || !!options.forceColor;\n}\n/**\n * The Chalk instance that should be used given the passed options.\n */\nexport function getChalk(options) {\n    return options.forceColor\n        ? new Chalk({ level: 1 })\n        : new Chalk();\n}\n/**\n * Highlight `code`.\n */\nexport default function highlight(code, options = {}) {\n    if (code !== \"\" && shouldHighlight(options)) {\n        const chalk = getChalk(options);\n        const defs = getDefs(chalk);\n        return highlightTokens(defs, code);\n    }\n    else {\n        return code;\n    }\n}\n","// Copyright 2014, 2015, 2016, 2017, 2018, 2019, 2020, 2021, 2022, 2023 Simon Lydell\n// License: MIT.\nvar Identifier, JSXIdentifier, JSXPunctuator, JSXString, JSXText, KeywordsWithExpressionAfter, KeywordsWithNoLineTerminatorAfter, LineTerminatorSequence, MultiLineComment, Newline, NumericLiteral, Punctuator, RegularExpressionLiteral, SingleLineComment, StringLiteral, Template, TokensNotPrecedingObjectLiteral, TokensPrecedingExpression, WhiteSpace, jsTokens;\nRegularExpressionLiteral = /\\/(?![*\\/])(?:\\[(?:[^\\]\\\\\\n\\r\\u2028\\u2029]+|\\\\.)*\\]|[^\\/\\\\\\n\\r\\u2028\\u2029]+|\\\\.)*(\\/[$_\\u200C\\u200D\\p{ID_Continue}]*|\\\\)?/yu;\nPunctuator = /--|\\+\\+|=>|\\.{3}|\\??\\.(?!\\d)|(?:&&|\\|\\||\\?\\?|[+\\-%&|^]|\\*{1,2}|<{1,2}|>{1,3}|!=?|={1,2}|\\/(?![\\/*]))=?|[?~,:;[\\](){}]/y;\nIdentifier = /(\\x23?)(?=[$_\\p{ID_Start}\\\\])(?:[$_\\u200C\\u200D\\p{ID_Continue}]+|\\\\u[\\da-fA-F]{4}|\\\\u\\{[\\da-fA-F]+\\})+/yu;\nStringLiteral = /(['\"])(?:[^'\"\\\\\\n\\r]+|(?!\\1)['\"]|\\\\(?:\\r\\n|[^]))*(\\1)?/y;\nNumericLiteral = /(?:0[xX][\\da-fA-F](?:_?[\\da-fA-F])*|0[oO][0-7](?:_?[0-7])*|0[bB][01](?:_?[01])*)n?|0n|[1-9](?:_?\\d)*n|(?:(?:0(?!\\d)|0\\d*[89]\\d*|[1-9](?:_?\\d)*)(?:\\.(?:\\d(?:_?\\d)*)?)?|\\.\\d(?:_?\\d)*)(?:[eE][+-]?\\d(?:_?\\d)*)?|0[0-7]+/y;\nTemplate = /[`}](?:[^`\\\\$]+|\\\\[^]|\\$(?!\\{))*(`|\\$\\{)?/y;\nWhiteSpace = /[\\t\\v\\f\\ufeff\\p{Zs}]+/yu;\nLineTerminatorSequence = /\\r?\\n|[\\r\\u2028\\u2029]/y;\nMultiLineComment = /\\/\\*(?:[^*]+|\\*(?!\\/))*(\\*\\/)?/y;\nSingleLineComment = /\\/\\/.*/y;\nJSXPunctuator = /[<>.:={}]|\\/(?![\\/*])/y;\nJSXIdentifier = /[$_\\p{ID_Start}][$_\\u200C\\u200D\\p{ID_Continue}-]*/yu;\nJSXString = /(['\"])(?:[^'\"]+|(?!\\1)['\"])*(\\1)?/y;\nJSXText = /[^<>{}]+/y;\nTokensPrecedingExpression = /^(?:[\\/+-]|\\.{3}|\\?(?:InterpolationIn(?:JSX|Template)|NoLineTerminatorHere|NonExpressionParenEnd|UnaryIncDec))?$|[{}([,;<>=*%&|^!~?:]$/;\nTokensNotPrecedingObjectLiteral = /^(?:=>|[;\\]){}]|else|\\?(?:NoLineTerminatorHere|NonExpressionParenEnd))?$/;\nKeywordsWithExpressionAfter = /^(?:await|case|default|delete|do|else|instanceof|new|return|throw|typeof|void|yield)$/;\nKeywordsWithNoLineTerminatorAfter = /^(?:return|throw|yield)$/;\nNewline = RegExp(LineTerminatorSequence.source);\nmodule.exports = jsTokens = function*(input, {jsx = false} = {}) {\n\tvar braces, firstCodePoint, isExpression, lastIndex, lastSignificantToken, length, match, mode, nextLastIndex, nextLastSignificantToken, parenNesting, postfixIncDec, punctuator, stack;\n\t({length} = input);\n\tlastIndex = 0;\n\tlastSignificantToken = \"\";\n\tstack = [\n\t\t{tag: \"JS\"}\n\t];\n\tbraces = [];\n\tparenNesting = 0;\n\tpostfixIncDec = false;\n\twhile (lastIndex < length) {\n\t\tmode = stack[stack.length - 1];\n\t\tswitch (mode.tag) {\n\t\t\tcase \"JS\":\n\t\t\tcase \"JSNonExpressionParen\":\n\t\t\tcase \"InterpolationInTemplate\":\n\t\t\tcase \"InterpolationInJSX\":\n\t\t\t\tif (input[lastIndex] === \"/\" && (TokensPrecedingExpression.test(lastSignificantToken) || KeywordsWithExpressionAfter.test(lastSignificantToken))) {\n\t\t\t\t\tRegularExpressionLiteral.lastIndex = lastIndex;\n\t\t\t\t\tif (match = RegularExpressionLiteral.exec(input)) {\n\t\t\t\t\t\tlastIndex = RegularExpressionLiteral.lastIndex;\n\t\t\t\t\t\tlastSignificantToken = match[0];\n\t\t\t\t\t\tpostfixIncDec = true;\n\t\t\t\t\t\tyield ({\n\t\t\t\t\t\t\ttype: \"RegularExpressionLiteral\",\n\t\t\t\t\t\t\tvalue: match[0],\n\t\t\t\t\t\t\tclosed: match[1] !== void 0 && match[1] !== \"\\\\\"\n\t\t\t\t\t\t});\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tPunctuator.lastIndex = lastIndex;\n\t\t\t\tif (match = Punctuator.exec(input)) {\n\t\t\t\t\tpunctuator = match[0];\n\t\t\t\t\tnextLastIndex = Punctuator.lastIndex;\n\t\t\t\t\tnextLastSignificantToken = punctuator;\n\t\t\t\t\tswitch (punctuator) {\n\t\t\t\t\t\tcase \"(\":\n\t\t\t\t\t\t\tif (lastSignificantToken === \"?NonExpressionParenKeyword\") {\n\t\t\t\t\t\t\t\tstack.push({\n\t\t\t\t\t\t\t\t\ttag: \"JSNonExpressionParen\",\n\t\t\t\t\t\t\t\t\tnesting: parenNesting\n\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tparenNesting++;\n\t\t\t\t\t\t\tpostfixIncDec = false;\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase \")\":\n\t\t\t\t\t\t\tparenNesting--;\n\t\t\t\t\t\t\tpostfixIncDec = true;\n\t\t\t\t\t\t\tif (mode.tag === \"JSNonExpressionParen\" && parenNesting === mode.nesting) {\n\t\t\t\t\t\t\t\tstack.pop();\n\t\t\t\t\t\t\t\tnextLastSignificantToken = \"?NonExpressionParenEnd\";\n\t\t\t\t\t\t\t\tpostfixIncDec = false;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase \"{\":\n\t\t\t\t\t\t\tPunctuator.lastIndex = 0;\n\t\t\t\t\t\t\tisExpression = !TokensNotPrecedingObjectLiteral.test(lastSignificantToken) && (TokensPrecedingExpression.test(lastSignificantToken) || KeywordsWithExpressionAfter.test(lastSignificantToken));\n\t\t\t\t\t\t\tbraces.push(isExpression);\n\t\t\t\t\t\t\tpostfixIncDec = false;\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase \"}\":\n\t\t\t\t\t\t\tswitch (mode.tag) {\n\t\t\t\t\t\t\t\tcase \"InterpolationInTemplate\":\n\t\t\t\t\t\t\t\t\tif (braces.length === mode.nesting) {\n\t\t\t\t\t\t\t\t\t\tTemplate.lastIndex = lastIndex;\n\t\t\t\t\t\t\t\t\t\tmatch = Template.exec(input);\n\t\t\t\t\t\t\t\t\t\tlastIndex = Template.lastIndex;\n\t\t\t\t\t\t\t\t\t\tlastSignificantToken = match[0];\n\t\t\t\t\t\t\t\t\t\tif (match[1] === \"${\") {\n\t\t\t\t\t\t\t\t\t\t\tlastSignificantToken = \"?InterpolationInTemplate\";\n\t\t\t\t\t\t\t\t\t\t\tpostfixIncDec = false;\n\t\t\t\t\t\t\t\t\t\t\tyield ({\n\t\t\t\t\t\t\t\t\t\t\t\ttype: \"TemplateMiddle\",\n\t\t\t\t\t\t\t\t\t\t\t\tvalue: match[0]\n\t\t\t\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\t\t\tstack.pop();\n\t\t\t\t\t\t\t\t\t\t\tpostfixIncDec = true;\n\t\t\t\t\t\t\t\t\t\t\tyield ({\n\t\t\t\t\t\t\t\t\t\t\t\ttype: \"TemplateTail\",\n\t\t\t\t\t\t\t\t\t\t\t\tvalue: match[0],\n\t\t\t\t\t\t\t\t\t\t\t\tclosed: match[1] === \"`\"\n\t\t\t\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\tcontinue;\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\tcase \"InterpolationInJSX\":\n\t\t\t\t\t\t\t\t\tif (braces.length === mode.nesting) {\n\t\t\t\t\t\t\t\t\t\tstack.pop();\n\t\t\t\t\t\t\t\t\t\tlastIndex += 1;\n\t\t\t\t\t\t\t\t\t\tlastSignificantToken = \"}\";\n\t\t\t\t\t\t\t\t\t\tyield ({\n\t\t\t\t\t\t\t\t\t\t\ttype: \"JSXPunctuator\",\n\t\t\t\t\t\t\t\t\t\t\tvalue: \"}\"\n\t\t\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\t\t\tcontinue;\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tpostfixIncDec = braces.pop();\n\t\t\t\t\t\t\tnextLastSignificantToken = postfixIncDec ? \"?ExpressionBraceEnd\" : \"}\";\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase \"]\":\n\t\t\t\t\t\t\tpostfixIncDec = true;\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase \"++\":\n\t\t\t\t\t\tcase \"--\":\n\t\t\t\t\t\t\tnextLastSignificantToken = postfixIncDec ? \"?PostfixIncDec\" : \"?UnaryIncDec\";\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase \"<\":\n\t\t\t\t\t\t\tif (jsx && (TokensPrecedingExpression.test(lastSignificantToken) || KeywordsWithExpressionAfter.test(lastSignificantToken))) {\n\t\t\t\t\t\t\t\tstack.push({tag: \"JSXTag\"});\n\t\t\t\t\t\t\t\tlastIndex += 1;\n\t\t\t\t\t\t\t\tlastSignificantToken = \"<\";\n\t\t\t\t\t\t\t\tyield ({\n\t\t\t\t\t\t\t\t\ttype: \"JSXPunctuator\",\n\t\t\t\t\t\t\t\t\tvalue: punctuator\n\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\tcontinue;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tpostfixIncDec = false;\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\tpostfixIncDec = false;\n\t\t\t\t\t}\n\t\t\t\t\tlastIndex = nextLastIndex;\n\t\t\t\t\tlastSignificantToken = nextLastSignificantToken;\n\t\t\t\t\tyield ({\n\t\t\t\t\t\ttype: \"Punctuator\",\n\t\t\t\t\t\tvalue: punctuator\n\t\t\t\t\t});\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t\tIdentifier.lastIndex = lastIndex;\n\t\t\t\tif (match = Identifier.exec(input)) {\n\t\t\t\t\tlastIndex = Identifier.lastIndex;\n\t\t\t\t\tnextLastSignificantToken = match[0];\n\t\t\t\t\tswitch (match[0]) {\n\t\t\t\t\t\tcase \"for\":\n\t\t\t\t\t\tcase \"if\":\n\t\t\t\t\t\tcase \"while\":\n\t\t\t\t\t\tcase \"with\":\n\t\t\t\t\t\t\tif (lastSignificantToken !== \".\" && lastSignificantToken !== \"?.\") {\n\t\t\t\t\t\t\t\tnextLastSignificantToken = \"?NonExpressionParenKeyword\";\n\t\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tlastSignificantToken = nextLastSignificantToken;\n\t\t\t\t\tpostfixIncDec = !KeywordsWithExpressionAfter.test(match[0]);\n\t\t\t\t\tyield ({\n\t\t\t\t\t\ttype: match[1] === \"#\" ? \"PrivateIdentifier\" : \"IdentifierName\",\n\t\t\t\t\t\tvalue: match[0]\n\t\t\t\t\t});\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t\tStringLiteral.lastIndex = lastIndex;\n\t\t\t\tif (match = StringLiteral.exec(input)) {\n\t\t\t\t\tlastIndex = StringLiteral.lastIndex;\n\t\t\t\t\tlastSignificantToken = match[0];\n\t\t\t\t\tpostfixIncDec = true;\n\t\t\t\t\tyield ({\n\t\t\t\t\t\ttype: \"StringLiteral\",\n\t\t\t\t\t\tvalue: match[0],\n\t\t\t\t\t\tclosed: match[2] !== void 0\n\t\t\t\t\t});\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t\tNumericLiteral.lastIndex = lastIndex;\n\t\t\t\tif (match = NumericLiteral.exec(input)) {\n\t\t\t\t\tlastIndex = NumericLiteral.lastIndex;\n\t\t\t\t\tlastSignificantToken = match[0];\n\t\t\t\t\tpostfixIncDec = true;\n\t\t\t\t\tyield ({\n\t\t\t\t\t\ttype: \"NumericLiteral\",\n\t\t\t\t\t\tvalue: match[0]\n\t\t\t\t\t});\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t\tTemplate.lastIndex = lastIndex;\n\t\t\t\tif (match = Template.exec(input)) {\n\t\t\t\t\tlastIndex = Template.lastIndex;\n\t\t\t\t\tlastSignificantToken = match[0];\n\t\t\t\t\tif (match[1] === \"${\") {\n\t\t\t\t\t\tlastSignificantToken = \"?InterpolationInTemplate\";\n\t\t\t\t\t\tstack.push({\n\t\t\t\t\t\t\ttag: \"InterpolationInTemplate\",\n\t\t\t\t\t\t\tnesting: braces.length\n\t\t\t\t\t\t});\n\t\t\t\t\t\tpostfixIncDec = false;\n\t\t\t\t\t\tyield ({\n\t\t\t\t\t\t\ttype: \"TemplateHead\",\n\t\t\t\t\t\t\tvalue: match[0]\n\t\t\t\t\t\t});\n\t\t\t\t\t} else {\n\t\t\t\t\t\tpostfixIncDec = true;\n\t\t\t\t\t\tyield ({\n\t\t\t\t\t\t\ttype: \"NoSubstitutionTemplate\",\n\t\t\t\t\t\t\tvalue: match[0],\n\t\t\t\t\t\t\tclosed: match[1] === \"`\"\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\tcase \"JSXTag\":\n\t\t\tcase \"JSXTagEnd\":\n\t\t\t\tJSXPunctuator.lastIndex = lastIndex;\n\t\t\t\tif (match = JSXPunctuator.exec(input)) {\n\t\t\t\t\tlastIndex = JSXPunctuator.lastIndex;\n\t\t\t\t\tnextLastSignificantToken = match[0];\n\t\t\t\t\tswitch (match[0]) {\n\t\t\t\t\t\tcase \"<\":\n\t\t\t\t\t\t\tstack.push({tag: \"JSXTag\"});\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase \">\":\n\t\t\t\t\t\t\tstack.pop();\n\t\t\t\t\t\t\tif (lastSignificantToken === \"/\" || mode.tag === \"JSXTagEnd\") {\n\t\t\t\t\t\t\t\tnextLastSignificantToken = \"?JSX\";\n\t\t\t\t\t\t\t\tpostfixIncDec = true;\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tstack.push({tag: \"JSXChildren\"});\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase \"{\":\n\t\t\t\t\t\t\tstack.push({\n\t\t\t\t\t\t\t\ttag: \"InterpolationInJSX\",\n\t\t\t\t\t\t\t\tnesting: braces.length\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\tnextLastSignificantToken = \"?InterpolationInJSX\";\n\t\t\t\t\t\t\tpostfixIncDec = false;\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase \"/\":\n\t\t\t\t\t\t\tif (lastSignificantToken === \"<\") {\n\t\t\t\t\t\t\t\tstack.pop();\n\t\t\t\t\t\t\t\tif (stack[stack.length - 1].tag === \"JSXChildren\") {\n\t\t\t\t\t\t\t\t\tstack.pop();\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tstack.push({tag: \"JSXTagEnd\"});\n\t\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tlastSignificantToken = nextLastSignificantToken;\n\t\t\t\t\tyield ({\n\t\t\t\t\t\ttype: \"JSXPunctuator\",\n\t\t\t\t\t\tvalue: match[0]\n\t\t\t\t\t});\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t\tJSXIdentifier.lastIndex = lastIndex;\n\t\t\t\tif (match = JSXIdentifier.exec(input)) {\n\t\t\t\t\tlastIndex = JSXIdentifier.lastIndex;\n\t\t\t\t\tlastSignificantToken = match[0];\n\t\t\t\t\tyield ({\n\t\t\t\t\t\ttype: \"JSXIdentifier\",\n\t\t\t\t\t\tvalue: match[0]\n\t\t\t\t\t});\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t\tJSXString.lastIndex = lastIndex;\n\t\t\t\tif (match = JSXString.exec(input)) {\n\t\t\t\t\tlastIndex = JSXString.lastIndex;\n\t\t\t\t\tlastSignificantToken = match[0];\n\t\t\t\t\tyield ({\n\t\t\t\t\t\ttype: \"JSXString\",\n\t\t\t\t\t\tvalue: match[0],\n\t\t\t\t\t\tclosed: match[2] !== void 0\n\t\t\t\t\t});\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\tcase \"JSXChildren\":\n\t\t\t\tJSXText.lastIndex = lastIndex;\n\t\t\t\tif (match = JSXText.exec(input)) {\n\t\t\t\t\tlastIndex = JSXText.lastIndex;\n\t\t\t\t\tlastSignificantToken = match[0];\n\t\t\t\t\tyield ({\n\t\t\t\t\t\ttype: \"JSXText\",\n\t\t\t\t\t\tvalue: match[0]\n\t\t\t\t\t});\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t\tswitch (input[lastIndex]) {\n\t\t\t\t\tcase \"<\":\n\t\t\t\t\t\tstack.push({tag: \"JSXTag\"});\n\t\t\t\t\t\tlastIndex++;\n\t\t\t\t\t\tlastSignificantToken = \"<\";\n\t\t\t\t\t\tyield ({\n\t\t\t\t\t\t\ttype: \"JSXPunctuator\",\n\t\t\t\t\t\t\tvalue: \"<\"\n\t\t\t\t\t\t});\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\tcase \"{\":\n\t\t\t\t\t\tstack.push({\n\t\t\t\t\t\t\ttag: \"InterpolationInJSX\",\n\t\t\t\t\t\t\tnesting: braces.length\n\t\t\t\t\t\t});\n\t\t\t\t\t\tlastIndex++;\n\t\t\t\t\t\tlastSignificantToken = \"?InterpolationInJSX\";\n\t\t\t\t\t\tpostfixIncDec = false;\n\t\t\t\t\t\tyield ({\n\t\t\t\t\t\t\ttype: \"JSXPunctuator\",\n\t\t\t\t\t\t\tvalue: \"{\"\n\t\t\t\t\t\t});\n\t\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t}\n\t\tWhiteSpace.lastIndex = lastIndex;\n\t\tif (match = WhiteSpace.exec(input)) {\n\t\t\tlastIndex = WhiteSpace.lastIndex;\n\t\t\tyield ({\n\t\t\t\ttype: \"WhiteSpace\",\n\t\t\t\tvalue: match[0]\n\t\t\t});\n\t\t\tcontinue;\n\t\t}\n\t\tLineTerminatorSequence.lastIndex = lastIndex;\n\t\tif (match = LineTerminatorSequence.exec(input)) {\n\t\t\tlastIndex = LineTerminatorSequence.lastIndex;\n\t\t\tpostfixIncDec = false;\n\t\t\tif (KeywordsWithNoLineTerminatorAfter.test(lastSignificantToken)) {\n\t\t\t\tlastSignificantToken = \"?NoLineTerminatorHere\";\n\t\t\t}\n\t\t\tyield ({\n\t\t\t\ttype: \"LineTerminatorSequence\",\n\t\t\t\tvalue: match[0]\n\t\t\t});\n\t\t\tcontinue;\n\t\t}\n\t\tMultiLineComment.lastIndex = lastIndex;\n\t\tif (match = MultiLineComment.exec(input)) {\n\t\t\tlastIndex = MultiLineComment.lastIndex;\n\t\t\tif (Newline.test(match[0])) {\n\t\t\t\tpostfixIncDec = false;\n\t\t\t\tif (KeywordsWithNoLineTerminatorAfter.test(lastSignificantToken)) {\n\t\t\t\t\tlastSignificantToken = \"?NoLineTerminatorHere\";\n\t\t\t\t}\n\t\t\t}\n\t\t\tyield ({\n\t\t\t\ttype: \"MultiLineComment\",\n\t\t\t\tvalue: match[0],\n\t\t\t\tclosed: match[1] !== void 0\n\t\t\t});\n\t\t\tcontinue;\n\t\t}\n\t\tSingleLineComment.lastIndex = lastIndex;\n\t\tif (match = SingleLineComment.exec(input)) {\n\t\t\tlastIndex = SingleLineComment.lastIndex;\n\t\t\tpostfixIncDec = false;\n\t\t\tyield ({\n\t\t\t\ttype: \"SingleLineComment\",\n\t\t\t\tvalue: match[0]\n\t\t\t});\n\t\t\tcontinue;\n\t\t}\n\t\tfirstCodePoint = String.fromCodePoint(input.codePointAt(lastIndex));\n\t\tlastIndex += firstCodePoint.length;\n\t\tlastSignificantToken = firstCodePoint;\n\t\tpostfixIncDec = false;\n\t\tyield ({\n\t\t\ttype: mode.tag.startsWith(\"JSX\") ? \"JSXInvalid\" : \"Invalid\",\n\t\t\tvalue: firstCodePoint\n\t\t});\n\t}\n\treturn void 0;\n};\n","import ansiStyles from '#ansi-styles';\nimport supportsColor from '#supports-color';\nimport { // eslint-disable-line import/order\n\tstringReplaceAll,\n\tstringEncaseCRLFWithFirstIndex,\n} from './utilities.js';\n\nconst {stdout: stdoutColor, stderr: stderrColor} = supportsColor;\n\nconst GENERATOR = Symbol('GENERATOR');\nconst STYLER = Symbol('STYLER');\nconst IS_EMPTY = Symbol('IS_EMPTY');\n\n// `supportsColor.level` → `ansiStyles.color[name]` mapping\nconst levelMapping = [\n\t'ansi',\n\t'ansi',\n\t'ansi256',\n\t'ansi16m',\n];\n\nconst styles = Object.create(null);\n\nconst applyOptions = (object, options = {}) => {\n\tif (options.level && !(Number.isInteger(options.level) && options.level >= 0 && options.level <= 3)) {\n\t\tthrow new Error('The `level` option should be an integer from 0 to 3');\n\t}\n\n\t// Detect level if not set manually\n\tconst colorLevel = stdoutColor ? stdoutColor.level : 0;\n\tobject.level = options.level === undefined ? colorLevel : options.level;\n};\n\nexport class Chalk {\n\tconstructor(options) {\n\t\t// eslint-disable-next-line no-constructor-return\n\t\treturn chalkFactory(options);\n\t}\n}\n\nconst chalkFactory = options => {\n\tconst chalk = (...strings) => strings.join(' ');\n\tapplyOptions(chalk, options);\n\n\tObject.setPrototypeOf(chalk, createChalk.prototype);\n\n\treturn chalk;\n};\n\nfunction createChalk(options) {\n\treturn chalkFactory(options);\n}\n\nObject.setPrototypeOf(createChalk.prototype, Function.prototype);\n\nfor (const [styleName, style] of Object.entries(ansiStyles)) {\n\tstyles[styleName] = {\n\t\tget() {\n\t\t\tconst builder = createBuilder(this, createStyler(style.open, style.close, this[STYLER]), this[IS_EMPTY]);\n\t\t\tObject.defineProperty(this, styleName, {value: builder});\n\t\t\treturn builder;\n\t\t},\n\t};\n}\n\nstyles.visible = {\n\tget() {\n\t\tconst builder = createBuilder(this, this[STYLER], true);\n\t\tObject.defineProperty(this, 'visible', {value: builder});\n\t\treturn builder;\n\t},\n};\n\nconst getModelAnsi = (model, level, type, ...arguments_) => {\n\tif (model === 'rgb') {\n\t\tif (level === 'ansi16m') {\n\t\t\treturn ansiStyles[type].ansi16m(...arguments_);\n\t\t}\n\n\t\tif (level === 'ansi256') {\n\t\t\treturn ansiStyles[type].ansi256(ansiStyles.rgbToAnsi256(...arguments_));\n\t\t}\n\n\t\treturn ansiStyles[type].ansi(ansiStyles.rgbToAnsi(...arguments_));\n\t}\n\n\tif (model === 'hex') {\n\t\treturn getModelAnsi('rgb', level, type, ...ansiStyles.hexToRgb(...arguments_));\n\t}\n\n\treturn ansiStyles[type][model](...arguments_);\n};\n\nconst usedModels = ['rgb', 'hex', 'ansi256'];\n\nfor (const model of usedModels) {\n\tstyles[model] = {\n\t\tget() {\n\t\t\tconst {level} = this;\n\t\t\treturn function (...arguments_) {\n\t\t\t\tconst styler = createStyler(getModelAnsi(model, levelMapping[level], 'color', ...arguments_), ansiStyles.color.close, this[STYLER]);\n\t\t\t\treturn createBuilder(this, styler, this[IS_EMPTY]);\n\t\t\t};\n\t\t},\n\t};\n\n\tconst bgModel = 'bg' + model[0].toUpperCase() + model.slice(1);\n\tstyles[bgModel] = {\n\t\tget() {\n\t\t\tconst {level} = this;\n\t\t\treturn function (...arguments_) {\n\t\t\t\tconst styler = createStyler(getModelAnsi(model, levelMapping[level], 'bgColor', ...arguments_), ansiStyles.bgColor.close, this[STYLER]);\n\t\t\t\treturn createBuilder(this, styler, this[IS_EMPTY]);\n\t\t\t};\n\t\t},\n\t};\n}\n\nconst proto = Object.defineProperties(() => {}, {\n\t...styles,\n\tlevel: {\n\t\tenumerable: true,\n\t\tget() {\n\t\t\treturn this[GENERATOR].level;\n\t\t},\n\t\tset(level) {\n\t\t\tthis[GENERATOR].level = level;\n\t\t},\n\t},\n});\n\nconst createStyler = (open, close, parent) => {\n\tlet openAll;\n\tlet closeAll;\n\tif (parent === undefined) {\n\t\topenAll = open;\n\t\tcloseAll = close;\n\t} else {\n\t\topenAll = parent.openAll + open;\n\t\tcloseAll = close + parent.closeAll;\n\t}\n\n\treturn {\n\t\topen,\n\t\tclose,\n\t\topenAll,\n\t\tcloseAll,\n\t\tparent,\n\t};\n};\n\nconst createBuilder = (self, _styler, _isEmpty) => {\n\t// Single argument is hot path, implicit coercion is faster than anything\n\t// eslint-disable-next-line no-implicit-coercion\n\tconst builder = (...arguments_) => applyStyle(builder, (arguments_.length === 1) ? ('' + arguments_[0]) : arguments_.join(' '));\n\n\t// We alter the prototype because we must return a function, but there is\n\t// no way to create a function with a different prototype\n\tObject.setPrototypeOf(builder, proto);\n\n\tbuilder[GENERATOR] = self;\n\tbuilder[STYLER] = _styler;\n\tbuilder[IS_EMPTY] = _isEmpty;\n\n\treturn builder;\n};\n\nconst applyStyle = (self, string) => {\n\tif (self.level <= 0 || !string) {\n\t\treturn self[IS_EMPTY] ? '' : string;\n\t}\n\n\tlet styler = self[STYLER];\n\n\tif (styler === undefined) {\n\t\treturn string;\n\t}\n\n\tconst {openAll, closeAll} = styler;\n\tif (string.includes('\\u001B')) {\n\t\twhile (styler !== undefined) {\n\t\t\t// Replace any instances already present with a re-opening code\n\t\t\t// otherwise only the part of the string until said closing code\n\t\t\t// will be colored, and the rest will simply be 'plain'.\n\t\t\tstring = stringReplaceAll(string, styler.close, styler.open);\n\n\t\t\tstyler = styler.parent;\n\t\t}\n\t}\n\n\t// We can move both next actions out of loop, because remaining actions in loop won't have\n\t// any/visible effect on parts we add here. Close the styling before a linebreak and reopen\n\t// after next line to fix a bleed issue on macOS: https://github.com/chalk/chalk/pull/92\n\tconst lfIndex = string.indexOf('\\n');\n\tif (lfIndex !== -1) {\n\t\tstring = stringEncaseCRLFWithFirstIndex(string, closeAll, openAll, lfIndex);\n\t}\n\n\treturn openAll + string + closeAll;\n};\n\nObject.defineProperties(createChalk.prototype, styles);\n\nconst chalk = createChalk();\nexport const chalkStderr = createChalk({level: stderrColor ? stderrColor.level : 0});\n\nexport {\n\tmodifierNames,\n\tforegroundColorNames,\n\tbackgroundColorNames,\n\tcolorNames,\n\n\t// TODO: Remove these aliases in the next major version\n\tmodifierNames as modifiers,\n\tforegroundColorNames as foregroundColors,\n\tbackgroundColorNames as backgroundColors,\n\tcolorNames as colors,\n} from './vendor/ansi-styles/index.js';\n\nexport {\n\tstdoutColor as supportsColor,\n\tstderrColor as supportsColorStderr,\n};\n\nexport default chalk;\n","const ANSI_BACKGROUND_OFFSET = 10;\n\nconst wrapAnsi16 = (offset = 0) => code => `\\u001B[${code + offset}m`;\n\nconst wrapAnsi256 = (offset = 0) => code => `\\u001B[${38 + offset};5;${code}m`;\n\nconst wrapAnsi16m = (offset = 0) => (red, green, blue) => `\\u001B[${38 + offset};2;${red};${green};${blue}m`;\n\nconst styles = {\n\tmodifier: {\n\t\treset: [0, 0],\n\t\t// 21 isn't widely supported and 22 does the same thing\n\t\tbold: [1, 22],\n\t\tdim: [2, 22],\n\t\titalic: [3, 23],\n\t\tunderline: [4, 24],\n\t\toverline: [53, 55],\n\t\tinverse: [7, 27],\n\t\thidden: [8, 28],\n\t\tstrikethrough: [9, 29],\n\t},\n\tcolor: {\n\t\tblack: [30, 39],\n\t\tred: [31, 39],\n\t\tgreen: [32, 39],\n\t\tyellow: [33, 39],\n\t\tblue: [34, 39],\n\t\tmagenta: [35, 39],\n\t\tcyan: [36, 39],\n\t\twhite: [37, 39],\n\n\t\t// Bright color\n\t\tblackBright: [90, 39],\n\t\tgray: [90, 39], // Alias of `blackBright`\n\t\tgrey: [90, 39], // Alias of `blackBright`\n\t\tredBright: [91, 39],\n\t\tgreenBright: [92, 39],\n\t\tyellowBright: [93, 39],\n\t\tblueBright: [94, 39],\n\t\tmagentaBright: [95, 39],\n\t\tcyanBright: [96, 39],\n\t\twhiteBright: [97, 39],\n\t},\n\tbgColor: {\n\t\tbgBlack: [40, 49],\n\t\tbgRed: [41, 49],\n\t\tbgGreen: [42, 49],\n\t\tbgYellow: [43, 49],\n\t\tbgBlue: [44, 49],\n\t\tbgMagenta: [45, 49],\n\t\tbgCyan: [46, 49],\n\t\tbgWhite: [47, 49],\n\n\t\t// Bright color\n\t\tbgBlackBright: [100, 49],\n\t\tbgGray: [100, 49], // Alias of `bgBlackBright`\n\t\tbgGrey: [100, 49], // Alias of `bgBlackBright`\n\t\tbgRedBright: [101, 49],\n\t\tbgGreenBright: [102, 49],\n\t\tbgYellowBright: [103, 49],\n\t\tbgBlueBright: [104, 49],\n\t\tbgMagentaBright: [105, 49],\n\t\tbgCyanBright: [106, 49],\n\t\tbgWhiteBright: [107, 49],\n\t},\n};\n\nexport const modifierNames = Object.keys(styles.modifier);\nexport const foregroundColorNames = Object.keys(styles.color);\nexport const backgroundColorNames = Object.keys(styles.bgColor);\nexport const colorNames = [...foregroundColorNames, ...backgroundColorNames];\n\nfunction assembleStyles() {\n\tconst codes = new Map();\n\n\tfor (const [groupName, group] of Object.entries(styles)) {\n\t\tfor (const [styleName, style] of Object.entries(group)) {\n\t\t\tstyles[styleName] = {\n\t\t\t\topen: `\\u001B[${style[0]}m`,\n\t\t\t\tclose: `\\u001B[${style[1]}m`,\n\t\t\t};\n\n\t\t\tgroup[styleName] = styles[styleName];\n\n\t\t\tcodes.set(style[0], style[1]);\n\t\t}\n\n\t\tObject.defineProperty(styles, groupName, {\n\t\t\tvalue: group,\n\t\t\tenumerable: false,\n\t\t});\n\t}\n\n\tObject.defineProperty(styles, 'codes', {\n\t\tvalue: codes,\n\t\tenumerable: false,\n\t});\n\n\tstyles.color.close = '\\u001B[39m';\n\tstyles.bgColor.close = '\\u001B[49m';\n\n\tstyles.color.ansi = wrapAnsi16();\n\tstyles.color.ansi256 = wrapAnsi256();\n\tstyles.color.ansi16m = wrapAnsi16m();\n\tstyles.bgColor.ansi = wrapAnsi16(ANSI_BACKGROUND_OFFSET);\n\tstyles.bgColor.ansi256 = wrapAnsi256(ANSI_BACKGROUND_OFFSET);\n\tstyles.bgColor.ansi16m = wrapAnsi16m(ANSI_BACKGROUND_OFFSET);\n\n\t// From https://github.com/Qix-/color-convert/blob/3f0e0d4e92e235796ccb17f6e85c72094a651f49/conversions.js\n\tObject.defineProperties(styles, {\n\t\trgbToAnsi256: {\n\t\t\tvalue(red, green, blue) {\n\t\t\t\t// We use the extended greyscale palette here, with the exception of\n\t\t\t\t// black and white. normal palette only has 4 greyscale shades.\n\t\t\t\tif (red === green && green === blue) {\n\t\t\t\t\tif (red < 8) {\n\t\t\t\t\t\treturn 16;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (red > 248) {\n\t\t\t\t\t\treturn 231;\n\t\t\t\t\t}\n\n\t\t\t\t\treturn Math.round(((red - 8) / 247) * 24) + 232;\n\t\t\t\t}\n\n\t\t\t\treturn 16\n\t\t\t\t\t+ (36 * Math.round(red / 255 * 5))\n\t\t\t\t\t+ (6 * Math.round(green / 255 * 5))\n\t\t\t\t\t+ Math.round(blue / 255 * 5);\n\t\t\t},\n\t\t\tenumerable: false,\n\t\t},\n\t\thexToRgb: {\n\t\t\tvalue(hex) {\n\t\t\t\tconst matches = /[a-f\\d]{6}|[a-f\\d]{3}/i.exec(hex.toString(16));\n\t\t\t\tif (!matches) {\n\t\t\t\t\treturn [0, 0, 0];\n\t\t\t\t}\n\n\t\t\t\tlet [colorString] = matches;\n\n\t\t\t\tif (colorString.length === 3) {\n\t\t\t\t\tcolorString = [...colorString].map(character => character + character).join('');\n\t\t\t\t}\n\n\t\t\t\tconst integer = Number.parseInt(colorString, 16);\n\n\t\t\t\treturn [\n\t\t\t\t\t/* eslint-disable no-bitwise */\n\t\t\t\t\t(integer >> 16) & 0xFF,\n\t\t\t\t\t(integer >> 8) & 0xFF,\n\t\t\t\t\tinteger & 0xFF,\n\t\t\t\t\t/* eslint-enable no-bitwise */\n\t\t\t\t];\n\t\t\t},\n\t\t\tenumerable: false,\n\t\t},\n\t\thexToAnsi256: {\n\t\t\tvalue: hex => styles.rgbToAnsi256(...styles.hexToRgb(hex)),\n\t\t\tenumerable: false,\n\t\t},\n\t\tansi256ToAnsi: {\n\t\t\tvalue(code) {\n\t\t\t\tif (code < 8) {\n\t\t\t\t\treturn 30 + code;\n\t\t\t\t}\n\n\t\t\t\tif (code < 16) {\n\t\t\t\t\treturn 90 + (code - 8);\n\t\t\t\t}\n\n\t\t\t\tlet red;\n\t\t\t\tlet green;\n\t\t\t\tlet blue;\n\n\t\t\t\tif (code >= 232) {\n\t\t\t\t\tred = (((code - 232) * 10) + 8) / 255;\n\t\t\t\t\tgreen = red;\n\t\t\t\t\tblue = red;\n\t\t\t\t} else {\n\t\t\t\t\tcode -= 16;\n\n\t\t\t\t\tconst remainder = code % 36;\n\n\t\t\t\t\tred = Math.floor(code / 36) / 5;\n\t\t\t\t\tgreen = Math.floor(remainder / 6) / 5;\n\t\t\t\t\tblue = (remainder % 6) / 5;\n\t\t\t\t}\n\n\t\t\t\tconst value = Math.max(red, green, blue) * 2;\n\n\t\t\t\tif (value === 0) {\n\t\t\t\t\treturn 30;\n\t\t\t\t}\n\n\t\t\t\t// eslint-disable-next-line no-bitwise\n\t\t\t\tlet result = 30 + ((Math.round(blue) << 2) | (Math.round(green) << 1) | Math.round(red));\n\n\t\t\t\tif (value === 2) {\n\t\t\t\t\tresult += 60;\n\t\t\t\t}\n\n\t\t\t\treturn result;\n\t\t\t},\n\t\t\tenumerable: false,\n\t\t},\n\t\trgbToAnsi: {\n\t\t\tvalue: (red, green, blue) => styles.ansi256ToAnsi(styles.rgbToAnsi256(red, green, blue)),\n\t\t\tenumerable: false,\n\t\t},\n\t\thexToAnsi: {\n\t\t\tvalue: hex => styles.ansi256ToAnsi(styles.hexToAnsi256(hex)),\n\t\t\tenumerable: false,\n\t\t},\n\t});\n\n\treturn styles;\n}\n\nconst ansiStyles = assembleStyles();\n\nexport default ansiStyles;\n","/* eslint-env browser */\n\nconst level = (() => {\n\tif (navigator.userAgentData) {\n\t\tconst brand = navigator.userAgentData.brands.find(({brand}) => brand === 'Chromium');\n\t\tif (brand && brand.version > 93) {\n\t\t\treturn 3;\n\t\t}\n\t}\n\n\tif (/\\b(Chrome|Chromium)\\//.test(navigator.userAgent)) {\n\t\treturn 1;\n\t}\n\n\treturn 0;\n})();\n\nconst colorSupport = level !== 0 && {\n\tlevel,\n\thasBasic: true,\n\thas256: level >= 2,\n\thas16m: level >= 3,\n};\n\nconst supportsColor = {\n\tstdout: colorSupport,\n\tstderr: colorSupport,\n};\n\nexport default supportsColor;\n","// TODO: When targeting Node.js 16, use `String.prototype.replaceAll`.\nexport function stringReplaceAll(string, substring, replacer) {\n\tlet index = string.indexOf(substring);\n\tif (index === -1) {\n\t\treturn string;\n\t}\n\n\tconst substringLength = substring.length;\n\tlet endIndex = 0;\n\tlet returnValue = '';\n\tdo {\n\t\treturnValue += string.slice(endIndex, index) + substring + replacer;\n\t\tendIndex = index + substringLength;\n\t\tindex = string.indexOf(substring, endIndex);\n\t} while (index !== -1);\n\n\treturnValue += string.slice(endIndex);\n\treturn returnValue;\n}\n\nexport function stringEncaseCRLFWithFirstIndex(string, prefix, postfix, index) {\n\tlet endIndex = 0;\n\tlet returnValue = '';\n\tdo {\n\t\tconst gotCR = string[index - 1] === '\\r';\n\t\treturnValue += string.slice(endIndex, (gotCR ? index - 1 : index)) + prefix + (gotCR ? '\\r\\n' : '\\n') + postfix;\n\t\tendIndex = index + 1;\n\t\tindex = string.indexOf('\\n', endIndex);\n\t} while (index !== -1);\n\n\treturnValue += string.slice(endIndex);\n\treturn returnValue;\n}\n","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nObject.defineProperty(exports, \"isIdentifierChar\", {\n  enumerable: true,\n  get: function () {\n    return _identifier.isIdentifierChar;\n  }\n});\nObject.defineProperty(exports, \"isIdentifierName\", {\n  enumerable: true,\n  get: function () {\n    return _identifier.isIdentifierName;\n  }\n});\nObject.defineProperty(exports, \"isIdentifierStart\", {\n  enumerable: true,\n  get: function () {\n    return _identifier.isIdentifierStart;\n  }\n});\nObject.defineProperty(exports, \"isKeyword\", {\n  enumerable: true,\n  get: function () {\n    return _keyword.isKeyword;\n  }\n});\nObject.defineProperty(exports, \"isReservedWord\", {\n  enumerable: true,\n  get: function () {\n    return _keyword.isReservedWord;\n  }\n});\nObject.defineProperty(exports, \"isStrictBindOnlyReservedWord\", {\n  enumerable: true,\n  get: function () {\n    return _keyword.isStrictBindOnlyReservedWord;\n  }\n});\nObject.defineProperty(exports, \"isStrictBindReservedWord\", {\n  enumerable: true,\n  get: function () {\n    return _keyword.isStrictBindReservedWord;\n  }\n});\nObject.defineProperty(exports, \"isStrictReservedWord\", {\n  enumerable: true,\n  get: function () {\n    return _keyword.isStrictReservedWord;\n  }\n});\nvar _identifier = require(\"./identifier.js\");\nvar _keyword = require(\"./keyword.js\");\n\n//# sourceMappingURL=index.js.map\n","export {\n  isIdentifierName,\n  isIdentifierChar,\n  isIdentifierStart,\n} from \"./identifier.ts\";\nexport {\n  isReservedWord,\n  isStrictBindOnlyReservedWord,\n  isStrictBindReservedWord,\n  isStrictReservedWord,\n  isKeyword,\n} from \"./keyword.ts\";\n","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.isIdentifierChar = isIdentifierChar;\nexports.isIdentifierName = isIdentifierName;\nexports.isIdentifierStart = isIdentifierStart;\nlet nonASCIIidentifierStartChars = \"\\xaa\\xb5\\xba\\xc0-\\xd6\\xd8-\\xf6\\xf8-\\u02c1\\u02c6-\\u02d1\\u02e0-\\u02e4\\u02ec\\u02ee\\u0370-\\u0374\\u0376\\u0377\\u037a-\\u037d\\u037f\\u0386\\u0388-\\u038a\\u038c\\u038e-\\u03a1\\u03a3-\\u03f5\\u03f7-\\u0481\\u048a-\\u052f\\u0531-\\u0556\\u0559\\u0560-\\u0588\\u05d0-\\u05ea\\u05ef-\\u05f2\\u0620-\\u064a\\u066e\\u066f\\u0671-\\u06d3\\u06d5\\u06e5\\u06e6\\u06ee\\u06ef\\u06fa-\\u06fc\\u06ff\\u0710\\u0712-\\u072f\\u074d-\\u07a5\\u07b1\\u07ca-\\u07ea\\u07f4\\u07f5\\u07fa\\u0800-\\u0815\\u081a\\u0824\\u0828\\u0840-\\u0858\\u0860-\\u086a\\u0870-\\u0887\\u0889-\\u088e\\u08a0-\\u08c9\\u0904-\\u0939\\u093d\\u0950\\u0958-\\u0961\\u0971-\\u0980\\u0985-\\u098c\\u098f\\u0990\\u0993-\\u09a8\\u09aa-\\u09b0\\u09b2\\u09b6-\\u09b9\\u09bd\\u09ce\\u09dc\\u09dd\\u09df-\\u09e1\\u09f0\\u09f1\\u09fc\\u0a05-\\u0a0a\\u0a0f\\u0a10\\u0a13-\\u0a28\\u0a2a-\\u0a30\\u0a32\\u0a33\\u0a35\\u0a36\\u0a38\\u0a39\\u0a59-\\u0a5c\\u0a5e\\u0a72-\\u0a74\\u0a85-\\u0a8d\\u0a8f-\\u0a91\\u0a93-\\u0aa8\\u0aaa-\\u0ab0\\u0ab2\\u0ab3\\u0ab5-\\u0ab9\\u0abd\\u0ad0\\u0ae0\\u0ae1\\u0af9\\u0b05-\\u0b0c\\u0b0f\\u0b10\\u0b13-\\u0b28\\u0b2a-\\u0b30\\u0b32\\u0b33\\u0b35-\\u0b39\\u0b3d\\u0b5c\\u0b5d\\u0b5f-\\u0b61\\u0b71\\u0b83\\u0b85-\\u0b8a\\u0b8e-\\u0b90\\u0b92-\\u0b95\\u0b99\\u0b9a\\u0b9c\\u0b9e\\u0b9f\\u0ba3\\u0ba4\\u0ba8-\\u0baa\\u0bae-\\u0bb9\\u0bd0\\u0c05-\\u0c0c\\u0c0e-\\u0c10\\u0c12-\\u0c28\\u0c2a-\\u0c39\\u0c3d\\u0c58-\\u0c5a\\u0c5d\\u0c60\\u0c61\\u0c80\\u0c85-\\u0c8c\\u0c8e-\\u0c90\\u0c92-\\u0ca8\\u0caa-\\u0cb3\\u0cb5-\\u0cb9\\u0cbd\\u0cdd\\u0cde\\u0ce0\\u0ce1\\u0cf1\\u0cf2\\u0d04-\\u0d0c\\u0d0e-\\u0d10\\u0d12-\\u0d3a\\u0d3d\\u0d4e\\u0d54-\\u0d56\\u0d5f-\\u0d61\\u0d7a-\\u0d7f\\u0d85-\\u0d96\\u0d9a-\\u0db1\\u0db3-\\u0dbb\\u0dbd\\u0dc0-\\u0dc6\\u0e01-\\u0e30\\u0e32\\u0e33\\u0e40-\\u0e46\\u0e81\\u0e82\\u0e84\\u0e86-\\u0e8a\\u0e8c-\\u0ea3\\u0ea5\\u0ea7-\\u0eb0\\u0eb2\\u0eb3\\u0ebd\\u0ec0-\\u0ec4\\u0ec6\\u0edc-\\u0edf\\u0f00\\u0f40-\\u0f47\\u0f49-\\u0f6c\\u0f88-\\u0f8c\\u1000-\\u102a\\u103f\\u1050-\\u1055\\u105a-\\u105d\\u1061\\u1065\\u1066\\u106e-\\u1070\\u1075-\\u1081\\u108e\\u10a0-\\u10c5\\u10c7\\u10cd\\u10d0-\\u10fa\\u10fc-\\u1248\\u124a-\\u124d\\u1250-\\u1256\\u1258\\u125a-\\u125d\\u1260-\\u1288\\u128a-\\u128d\\u1290-\\u12b0\\u12b2-\\u12b5\\u12b8-\\u12be\\u12c0\\u12c2-\\u12c5\\u12c8-\\u12d6\\u12d8-\\u1310\\u1312-\\u1315\\u1318-\\u135a\\u1380-\\u138f\\u13a0-\\u13f5\\u13f8-\\u13fd\\u1401-\\u166c\\u166f-\\u167f\\u1681-\\u169a\\u16a0-\\u16ea\\u16ee-\\u16f8\\u1700-\\u1711\\u171f-\\u1731\\u1740-\\u1751\\u1760-\\u176c\\u176e-\\u1770\\u1780-\\u17b3\\u17d7\\u17dc\\u1820-\\u1878\\u1880-\\u18a8\\u18aa\\u18b0-\\u18f5\\u1900-\\u191e\\u1950-\\u196d\\u1970-\\u1974\\u1980-\\u19ab\\u19b0-\\u19c9\\u1a00-\\u1a16\\u1a20-\\u1a54\\u1aa7\\u1b05-\\u1b33\\u1b45-\\u1b4c\\u1b83-\\u1ba0\\u1bae\\u1baf\\u1bba-\\u1be5\\u1c00-\\u1c23\\u1c4d-\\u1c4f\\u1c5a-\\u1c7d\\u1c80-\\u1c88\\u1c90-\\u1cba\\u1cbd-\\u1cbf\\u1ce9-\\u1cec\\u1cee-\\u1cf3\\u1cf5\\u1cf6\\u1cfa\\u1d00-\\u1dbf\\u1e00-\\u1f15\\u1f18-\\u1f1d\\u1f20-\\u1f45\\u1f48-\\u1f4d\\u1f50-\\u1f57\\u1f59\\u1f5b\\u1f5d\\u1f5f-\\u1f7d\\u1f80-\\u1fb4\\u1fb6-\\u1fbc\\u1fbe\\u1fc2-\\u1fc4\\u1fc6-\\u1fcc\\u1fd0-\\u1fd3\\u1fd6-\\u1fdb\\u1fe0-\\u1fec\\u1ff2-\\u1ff4\\u1ff6-\\u1ffc\\u2071\\u207f\\u2090-\\u209c\\u2102\\u2107\\u210a-\\u2113\\u2115\\u2118-\\u211d\\u2124\\u2126\\u2128\\u212a-\\u2139\\u213c-\\u213f\\u2145-\\u2149\\u214e\\u2160-\\u2188\\u2c00-\\u2ce4\\u2ceb-\\u2cee\\u2cf2\\u2cf3\\u2d00-\\u2d25\\u2d27\\u2d2d\\u2d30-\\u2d67\\u2d6f\\u2d80-\\u2d96\\u2da0-\\u2da6\\u2da8-\\u2dae\\u2db0-\\u2db6\\u2db8-\\u2dbe\\u2dc0-\\u2dc6\\u2dc8-\\u2dce\\u2dd0-\\u2dd6\\u2dd8-\\u2dde\\u3005-\\u3007\\u3021-\\u3029\\u3031-\\u3035\\u3038-\\u303c\\u3041-\\u3096\\u309b-\\u309f\\u30a1-\\u30fa\\u30fc-\\u30ff\\u3105-\\u312f\\u3131-\\u318e\\u31a0-\\u31bf\\u31f0-\\u31ff\\u3400-\\u4dbf\\u4e00-\\ua48c\\ua4d0-\\ua4fd\\ua500-\\ua60c\\ua610-\\ua61f\\ua62a\\ua62b\\ua640-\\ua66e\\ua67f-\\ua69d\\ua6a0-\\ua6ef\\ua717-\\ua71f\\ua722-\\ua788\\ua78b-\\ua7ca\\ua7d0\\ua7d1\\ua7d3\\ua7d5-\\ua7d9\\ua7f2-\\ua801\\ua803-\\ua805\\ua807-\\ua80a\\ua80c-\\ua822\\ua840-\\ua873\\ua882-\\ua8b3\\ua8f2-\\ua8f7\\ua8fb\\ua8fd\\ua8fe\\ua90a-\\ua925\\ua930-\\ua946\\ua960-\\ua97c\\ua984-\\ua9b2\\ua9cf\\ua9e0-\\ua9e4\\ua9e6-\\ua9ef\\ua9fa-\\ua9fe\\uaa00-\\uaa28\\uaa40-\\uaa42\\uaa44-\\uaa4b\\uaa60-\\uaa76\\uaa7a\\uaa7e-\\uaaaf\\uaab1\\uaab5\\uaab6\\uaab9-\\uaabd\\uaac0\\uaac2\\uaadb-\\uaadd\\uaae0-\\uaaea\\uaaf2-\\uaaf4\\uab01-\\uab06\\uab09-\\uab0e\\uab11-\\uab16\\uab20-\\uab26\\uab28-\\uab2e\\uab30-\\uab5a\\uab5c-\\uab69\\uab70-\\uabe2\\uac00-\\ud7a3\\ud7b0-\\ud7c6\\ud7cb-\\ud7fb\\uf900-\\ufa6d\\ufa70-\\ufad9\\ufb00-\\ufb06\\ufb13-\\ufb17\\ufb1d\\ufb1f-\\ufb28\\ufb2a-\\ufb36\\ufb38-\\ufb3c\\ufb3e\\ufb40\\ufb41\\ufb43\\ufb44\\ufb46-\\ufbb1\\ufbd3-\\ufd3d\\ufd50-\\ufd8f\\ufd92-\\ufdc7\\ufdf0-\\ufdfb\\ufe70-\\ufe74\\ufe76-\\ufefc\\uff21-\\uff3a\\uff41-\\uff5a\\uff66-\\uffbe\\uffc2-\\uffc7\\uffca-\\uffcf\\uffd2-\\uffd7\\uffda-\\uffdc\";\nlet nonASCIIidentifierChars = \"\\u200c\\u200d\\xb7\\u0300-\\u036f\\u0387\\u0483-\\u0487\\u0591-\\u05bd\\u05bf\\u05c1\\u05c2\\u05c4\\u05c5\\u05c7\\u0610-\\u061a\\u064b-\\u0669\\u0670\\u06d6-\\u06dc\\u06df-\\u06e4\\u06e7\\u06e8\\u06ea-\\u06ed\\u06f0-\\u06f9\\u0711\\u0730-\\u074a\\u07a6-\\u07b0\\u07c0-\\u07c9\\u07eb-\\u07f3\\u07fd\\u0816-\\u0819\\u081b-\\u0823\\u0825-\\u0827\\u0829-\\u082d\\u0859-\\u085b\\u0898-\\u089f\\u08ca-\\u08e1\\u08e3-\\u0903\\u093a-\\u093c\\u093e-\\u094f\\u0951-\\u0957\\u0962\\u0963\\u0966-\\u096f\\u0981-\\u0983\\u09bc\\u09be-\\u09c4\\u09c7\\u09c8\\u09cb-\\u09cd\\u09d7\\u09e2\\u09e3\\u09e6-\\u09ef\\u09fe\\u0a01-\\u0a03\\u0a3c\\u0a3e-\\u0a42\\u0a47\\u0a48\\u0a4b-\\u0a4d\\u0a51\\u0a66-\\u0a71\\u0a75\\u0a81-\\u0a83\\u0abc\\u0abe-\\u0ac5\\u0ac7-\\u0ac9\\u0acb-\\u0acd\\u0ae2\\u0ae3\\u0ae6-\\u0aef\\u0afa-\\u0aff\\u0b01-\\u0b03\\u0b3c\\u0b3e-\\u0b44\\u0b47\\u0b48\\u0b4b-\\u0b4d\\u0b55-\\u0b57\\u0b62\\u0b63\\u0b66-\\u0b6f\\u0b82\\u0bbe-\\u0bc2\\u0bc6-\\u0bc8\\u0bca-\\u0bcd\\u0bd7\\u0be6-\\u0bef\\u0c00-\\u0c04\\u0c3c\\u0c3e-\\u0c44\\u0c46-\\u0c48\\u0c4a-\\u0c4d\\u0c55\\u0c56\\u0c62\\u0c63\\u0c66-\\u0c6f\\u0c81-\\u0c83\\u0cbc\\u0cbe-\\u0cc4\\u0cc6-\\u0cc8\\u0cca-\\u0ccd\\u0cd5\\u0cd6\\u0ce2\\u0ce3\\u0ce6-\\u0cef\\u0cf3\\u0d00-\\u0d03\\u0d3b\\u0d3c\\u0d3e-\\u0d44\\u0d46-\\u0d48\\u0d4a-\\u0d4d\\u0d57\\u0d62\\u0d63\\u0d66-\\u0d6f\\u0d81-\\u0d83\\u0dca\\u0dcf-\\u0dd4\\u0dd6\\u0dd8-\\u0ddf\\u0de6-\\u0def\\u0df2\\u0df3\\u0e31\\u0e34-\\u0e3a\\u0e47-\\u0e4e\\u0e50-\\u0e59\\u0eb1\\u0eb4-\\u0ebc\\u0ec8-\\u0ece\\u0ed0-\\u0ed9\\u0f18\\u0f19\\u0f20-\\u0f29\\u0f35\\u0f37\\u0f39\\u0f3e\\u0f3f\\u0f71-\\u0f84\\u0f86\\u0f87\\u0f8d-\\u0f97\\u0f99-\\u0fbc\\u0fc6\\u102b-\\u103e\\u1040-\\u1049\\u1056-\\u1059\\u105e-\\u1060\\u1062-\\u1064\\u1067-\\u106d\\u1071-\\u1074\\u1082-\\u108d\\u108f-\\u109d\\u135d-\\u135f\\u1369-\\u1371\\u1712-\\u1715\\u1732-\\u1734\\u1752\\u1753\\u1772\\u1773\\u17b4-\\u17d3\\u17dd\\u17e0-\\u17e9\\u180b-\\u180d\\u180f-\\u1819\\u18a9\\u1920-\\u192b\\u1930-\\u193b\\u1946-\\u194f\\u19d0-\\u19da\\u1a17-\\u1a1b\\u1a55-\\u1a5e\\u1a60-\\u1a7c\\u1a7f-\\u1a89\\u1a90-\\u1a99\\u1ab0-\\u1abd\\u1abf-\\u1ace\\u1b00-\\u1b04\\u1b34-\\u1b44\\u1b50-\\u1b59\\u1b6b-\\u1b73\\u1b80-\\u1b82\\u1ba1-\\u1bad\\u1bb0-\\u1bb9\\u1be6-\\u1bf3\\u1c24-\\u1c37\\u1c40-\\u1c49\\u1c50-\\u1c59\\u1cd0-\\u1cd2\\u1cd4-\\u1ce8\\u1ced\\u1cf4\\u1cf7-\\u1cf9\\u1dc0-\\u1dff\\u200c\\u200d\\u203f\\u2040\\u2054\\u20d0-\\u20dc\\u20e1\\u20e5-\\u20f0\\u2cef-\\u2cf1\\u2d7f\\u2de0-\\u2dff\\u302a-\\u302f\\u3099\\u309a\\u30fb\\ua620-\\ua629\\ua66f\\ua674-\\ua67d\\ua69e\\ua69f\\ua6f0\\ua6f1\\ua802\\ua806\\ua80b\\ua823-\\ua827\\ua82c\\ua880\\ua881\\ua8b4-\\ua8c5\\ua8d0-\\ua8d9\\ua8e0-\\ua8f1\\ua8ff-\\ua909\\ua926-\\ua92d\\ua947-\\ua953\\ua980-\\ua983\\ua9b3-\\ua9c0\\ua9d0-\\ua9d9\\ua9e5\\ua9f0-\\ua9f9\\uaa29-\\uaa36\\uaa43\\uaa4c\\uaa4d\\uaa50-\\uaa59\\uaa7b-\\uaa7d\\uaab0\\uaab2-\\uaab4\\uaab7\\uaab8\\uaabe\\uaabf\\uaac1\\uaaeb-\\uaaef\\uaaf5\\uaaf6\\uabe3-\\uabea\\uabec\\uabed\\uabf0-\\uabf9\\ufb1e\\ufe00-\\ufe0f\\ufe20-\\ufe2f\\ufe33\\ufe34\\ufe4d-\\ufe4f\\uff10-\\uff19\\uff3f\\uff65\";\nconst nonASCIIidentifierStart = new RegExp(\"[\" + nonASCIIidentifierStartChars + \"]\");\nconst nonASCIIidentifier = new RegExp(\"[\" + nonASCIIidentifierStartChars + nonASCIIidentifierChars + \"]\");\nnonASCIIidentifierStartChars = nonASCIIidentifierChars = null;\nconst astralIdentifierStartCodes = [0, 11, 2, 25, 2, 18, 2, 1, 2, 14, 3, 13, 35, 122, 70, 52, 268, 28, 4, 48, 48, 31, 14, 29, 6, 37, 11, 29, 3, 35, 5, 7, 2, 4, 43, 157, 19, 35, 5, 35, 5, 39, 9, 51, 13, 10, 2, 14, 2, 6, 2, 1, 2, 10, 2, 14, 2, 6, 2, 1, 68, 310, 10, 21, 11, 7, 25, 5, 2, 41, 2, 8, 70, 5, 3, 0, 2, 43, 2, 1, 4, 0, 3, 22, 11, 22, 10, 30, 66, 18, 2, 1, 11, 21, 11, 25, 71, 55, 7, 1, 65, 0, 16, 3, 2, 2, 2, 28, 43, 28, 4, 28, 36, 7, 2, 27, 28, 53, 11, 21, 11, 18, 14, 17, 111, 72, 56, 50, 14, 50, 14, 35, 349, 41, 7, 1, 79, 28, 11, 0, 9, 21, 43, 17, 47, 20, 28, 22, 13, 52, 58, 1, 3, 0, 14, 44, 33, 24, 27, 35, 30, 0, 3, 0, 9, 34, 4, 0, 13, 47, 15, 3, 22, 0, 2, 0, 36, 17, 2, 24, 20, 1, 64, 6, 2, 0, 2, 3, 2, 14, 2, 9, 8, 46, 39, 7, 3, 1, 3, 21, 2, 6, 2, 1, 2, 4, 4, 0, 19, 0, 13, 4, 159, 52, 19, 3, 21, 2, 31, 47, 21, 1, 2, 0, 185, 46, 42, 3, 37, 47, 21, 0, 60, 42, 14, 0, 72, 26, 38, 6, 186, 43, 117, 63, 32, 7, 3, 0, 3, 7, 2, 1, 2, 23, 16, 0, 2, 0, 95, 7, 3, 38, 17, 0, 2, 0, 29, 0, 11, 39, 8, 0, 22, 0, 12, 45, 20, 0, 19, 72, 264, 8, 2, 36, 18, 0, 50, 29, 113, 6, 2, 1, 2, 37, 22, 0, 26, 5, 2, 1, 2, 31, 15, 0, 328, 18, 16, 0, 2, 12, 2, 33, 125, 0, 80, 921, 103, 110, 18, 195, 2637, 96, 16, 1071, 18, 5, 4026, 582, 8634, 568, 8, 30, 18, 78, 18, 29, 19, 47, 17, 3, 32, 20, 6, 18, 689, 63, 129, 74, 6, 0, 67, 12, 65, 1, 2, 0, 29, 6135, 9, 1237, 43, 8, 8936, 3, 2, 6, 2, 1, 2, 290, 16, 0, 30, 2, 3, 0, 15, 3, 9, 395, 2309, 106, 6, 12, 4, 8, 8, 9, 5991, 84, 2, 70, 2, 1, 3, 0, 3, 1, 3, 3, 2, 11, 2, 0, 2, 6, 2, 64, 2, 3, 3, 7, 2, 6, 2, 27, 2, 3, 2, 4, 2, 0, 4, 6, 2, 339, 3, 24, 2, 24, 2, 30, 2, 24, 2, 30, 2, 24, 2, 30, 2, 24, 2, 30, 2, 24, 2, 7, 1845, 30, 7, 5, 262, 61, 147, 44, 11, 6, 17, 0, 322, 29, 19, 43, 485, 27, 757, 6, 2, 3, 2, 1, 2, 14, 2, 196, 60, 67, 8, 0, 1205, 3, 2, 26, 2, 1, 2, 0, 3, 0, 2, 9, 2, 3, 2, 0, 2, 0, 7, 0, 5, 0, 2, 0, 2, 0, 2, 2, 2, 1, 2, 0, 3, 0, 2, 0, 2, 0, 2, 0, 2, 0, 2, 1, 2, 0, 3, 3, 2, 6, 2, 3, 2, 3, 2, 0, 2, 9, 2, 16, 6, 2, 2, 4, 2, 16, 4421, 42719, 33, 4153, 7, 221, 3, 5761, 15, 7472, 16, 621, 2467, 541, 1507, 4938, 6, 4191];\nconst astralIdentifierCodes = [509, 0, 227, 0, 150, 4, 294, 9, 1368, 2, 2, 1, 6, 3, 41, 2, 5, 0, 166, 1, 574, 3, 9, 9, 370, 1, 81, 2, 71, 10, 50, 3, 123, 2, 54, 14, 32, 10, 3, 1, 11, 3, 46, 10, 8, 0, 46, 9, 7, 2, 37, 13, 2, 9, 6, 1, 45, 0, 13, 2, 49, 13, 9, 3, 2, 11, 83, 11, 7, 0, 3, 0, 158, 11, 6, 9, 7, 3, 56, 1, 2, 6, 3, 1, 3, 2, 10, 0, 11, 1, 3, 6, 4, 4, 193, 17, 10, 9, 5, 0, 82, 19, 13, 9, 214, 6, 3, 8, 28, 1, 83, 16, 16, 9, 82, 12, 9, 9, 84, 14, 5, 9, 243, 14, 166, 9, 71, 5, 2, 1, 3, 3, 2, 0, 2, 1, 13, 9, 120, 6, 3, 6, 4, 0, 29, 9, 41, 6, 2, 3, 9, 0, 10, 10, 47, 15, 406, 7, 2, 7, 17, 9, 57, 21, 2, 13, 123, 5, 4, 0, 2, 1, 2, 6, 2, 0, 9, 9, 49, 4, 2, 1, 2, 4, 9, 9, 330, 3, 10, 1, 2, 0, 49, 6, 4, 4, 14, 9, 5351, 0, 7, 14, 13835, 9, 87, 9, 39, 4, 60, 6, 26, 9, 1014, 0, 2, 54, 8, 3, 82, 0, 12, 1, 19628, 1, 4706, 45, 3, 22, 543, 4, 4, 5, 9, 7, 3, 6, 31, 3, 149, 2, 1418, 49, 513, 54, 5, 49, 9, 0, 15, 0, 23, 4, 2, 14, 1361, 6, 2, 16, 3, 6, 2, 1, 2, 4, 101, 0, 161, 6, 10, 9, 357, 0, 62, 13, 499, 13, 983, 6, 110, 6, 6, 9, 4759, 9, 787719, 239];\nfunction isInAstralSet(code, set) {\n  let pos = 0x10000;\n  for (let i = 0, length = set.length; i < length; i += 2) {\n    pos += set[i];\n    if (pos > code) return false;\n    pos += set[i + 1];\n    if (pos >= code) return true;\n  }\n  return false;\n}\nfunction isIdentifierStart(code) {\n  if (code < 65) return code === 36;\n  if (code <= 90) return true;\n  if (code < 97) return code === 95;\n  if (code <= 122) return true;\n  if (code <= 0xffff) {\n    return code >= 0xaa && nonASCIIidentifierStart.test(String.fromCharCode(code));\n  }\n  return isInAstralSet(code, astralIdentifierStartCodes);\n}\nfunction isIdentifierChar(code) {\n  if (code < 48) return code === 36;\n  if (code < 58) return true;\n  if (code < 65) return false;\n  if (code <= 90) return true;\n  if (code < 97) return code === 95;\n  if (code <= 122) return true;\n  if (code <= 0xffff) {\n    return code >= 0xaa && nonASCIIidentifier.test(String.fromCharCode(code));\n  }\n  return isInAstralSet(code, astralIdentifierStartCodes) || isInAstralSet(code, astralIdentifierCodes);\n}\nfunction isIdentifierName(name) {\n  let isFirst = true;\n  for (let i = 0; i < name.length; i++) {\n    let cp = name.charCodeAt(i);\n    if ((cp & 0xfc00) === 0xd800 && i + 1 < name.length) {\n      const trail = name.charCodeAt(++i);\n      if ((trail & 0xfc00) === 0xdc00) {\n        cp = 0x10000 + ((cp & 0x3ff) << 10) + (trail & 0x3ff);\n      }\n    }\n    if (isFirst) {\n      isFirst = false;\n      if (!isIdentifierStart(cp)) {\n        return false;\n      }\n    } else if (!isIdentifierChar(cp)) {\n      return false;\n    }\n  }\n  return !isFirst;\n}\n\n//# sourceMappingURL=identifier.js.map\n","import * as charCodes from \"charcodes\";\n\n// ## Character categories\n\n// Big ugly regular expressions that match characters in the\n// whitespace, identifier, and identifier-start categories. These\n// are only applied when a character is found to actually have a\n// code point between 0x80 and 0xffff.\n// Generated by `scripts/generate-identifier-regex.js`.\n\n/* prettier-ignore */\nlet nonASCIIidentifierStartChars = \"\\xaa\\xb5\\xba\\xc0-\\xd6\\xd8-\\xf6\\xf8-\\u02c1\\u02c6-\\u02d1\\u02e0-\\u02e4\\u02ec\\u02ee\\u0370-\\u0374\\u0376\\u0377\\u037a-\\u037d\\u037f\\u0386\\u0388-\\u038a\\u038c\\u038e-\\u03a1\\u03a3-\\u03f5\\u03f7-\\u0481\\u048a-\\u052f\\u0531-\\u0556\\u0559\\u0560-\\u0588\\u05d0-\\u05ea\\u05ef-\\u05f2\\u0620-\\u064a\\u066e\\u066f\\u0671-\\u06d3\\u06d5\\u06e5\\u06e6\\u06ee\\u06ef\\u06fa-\\u06fc\\u06ff\\u0710\\u0712-\\u072f\\u074d-\\u07a5\\u07b1\\u07ca-\\u07ea\\u07f4\\u07f5\\u07fa\\u0800-\\u0815\\u081a\\u0824\\u0828\\u0840-\\u0858\\u0860-\\u086a\\u0870-\\u0887\\u0889-\\u088e\\u08a0-\\u08c9\\u0904-\\u0939\\u093d\\u0950\\u0958-\\u0961\\u0971-\\u0980\\u0985-\\u098c\\u098f\\u0990\\u0993-\\u09a8\\u09aa-\\u09b0\\u09b2\\u09b6-\\u09b9\\u09bd\\u09ce\\u09dc\\u09dd\\u09df-\\u09e1\\u09f0\\u09f1\\u09fc\\u0a05-\\u0a0a\\u0a0f\\u0a10\\u0a13-\\u0a28\\u0a2a-\\u0a30\\u0a32\\u0a33\\u0a35\\u0a36\\u0a38\\u0a39\\u0a59-\\u0a5c\\u0a5e\\u0a72-\\u0a74\\u0a85-\\u0a8d\\u0a8f-\\u0a91\\u0a93-\\u0aa8\\u0aaa-\\u0ab0\\u0ab2\\u0ab3\\u0ab5-\\u0ab9\\u0abd\\u0ad0\\u0ae0\\u0ae1\\u0af9\\u0b05-\\u0b0c\\u0b0f\\u0b10\\u0b13-\\u0b28\\u0b2a-\\u0b30\\u0b32\\u0b33\\u0b35-\\u0b39\\u0b3d\\u0b5c\\u0b5d\\u0b5f-\\u0b61\\u0b71\\u0b83\\u0b85-\\u0b8a\\u0b8e-\\u0b90\\u0b92-\\u0b95\\u0b99\\u0b9a\\u0b9c\\u0b9e\\u0b9f\\u0ba3\\u0ba4\\u0ba8-\\u0baa\\u0bae-\\u0bb9\\u0bd0\\u0c05-\\u0c0c\\u0c0e-\\u0c10\\u0c12-\\u0c28\\u0c2a-\\u0c39\\u0c3d\\u0c58-\\u0c5a\\u0c5d\\u0c60\\u0c61\\u0c80\\u0c85-\\u0c8c\\u0c8e-\\u0c90\\u0c92-\\u0ca8\\u0caa-\\u0cb3\\u0cb5-\\u0cb9\\u0cbd\\u0cdd\\u0cde\\u0ce0\\u0ce1\\u0cf1\\u0cf2\\u0d04-\\u0d0c\\u0d0e-\\u0d10\\u0d12-\\u0d3a\\u0d3d\\u0d4e\\u0d54-\\u0d56\\u0d5f-\\u0d61\\u0d7a-\\u0d7f\\u0d85-\\u0d96\\u0d9a-\\u0db1\\u0db3-\\u0dbb\\u0dbd\\u0dc0-\\u0dc6\\u0e01-\\u0e30\\u0e32\\u0e33\\u0e40-\\u0e46\\u0e81\\u0e82\\u0e84\\u0e86-\\u0e8a\\u0e8c-\\u0ea3\\u0ea5\\u0ea7-\\u0eb0\\u0eb2\\u0eb3\\u0ebd\\u0ec0-\\u0ec4\\u0ec6\\u0edc-\\u0edf\\u0f00\\u0f40-\\u0f47\\u0f49-\\u0f6c\\u0f88-\\u0f8c\\u1000-\\u102a\\u103f\\u1050-\\u1055\\u105a-\\u105d\\u1061\\u1065\\u1066\\u106e-\\u1070\\u1075-\\u1081\\u108e\\u10a0-\\u10c5\\u10c7\\u10cd\\u10d0-\\u10fa\\u10fc-\\u1248\\u124a-\\u124d\\u1250-\\u1256\\u1258\\u125a-\\u125d\\u1260-\\u1288\\u128a-\\u128d\\u1290-\\u12b0\\u12b2-\\u12b5\\u12b8-\\u12be\\u12c0\\u12c2-\\u12c5\\u12c8-\\u12d6\\u12d8-\\u1310\\u1312-\\u1315\\u1318-\\u135a\\u1380-\\u138f\\u13a0-\\u13f5\\u13f8-\\u13fd\\u1401-\\u166c\\u166f-\\u167f\\u1681-\\u169a\\u16a0-\\u16ea\\u16ee-\\u16f8\\u1700-\\u1711\\u171f-\\u1731\\u1740-\\u1751\\u1760-\\u176c\\u176e-\\u1770\\u1780-\\u17b3\\u17d7\\u17dc\\u1820-\\u1878\\u1880-\\u18a8\\u18aa\\u18b0-\\u18f5\\u1900-\\u191e\\u1950-\\u196d\\u1970-\\u1974\\u1980-\\u19ab\\u19b0-\\u19c9\\u1a00-\\u1a16\\u1a20-\\u1a54\\u1aa7\\u1b05-\\u1b33\\u1b45-\\u1b4c\\u1b83-\\u1ba0\\u1bae\\u1baf\\u1bba-\\u1be5\\u1c00-\\u1c23\\u1c4d-\\u1c4f\\u1c5a-\\u1c7d\\u1c80-\\u1c88\\u1c90-\\u1cba\\u1cbd-\\u1cbf\\u1ce9-\\u1cec\\u1cee-\\u1cf3\\u1cf5\\u1cf6\\u1cfa\\u1d00-\\u1dbf\\u1e00-\\u1f15\\u1f18-\\u1f1d\\u1f20-\\u1f45\\u1f48-\\u1f4d\\u1f50-\\u1f57\\u1f59\\u1f5b\\u1f5d\\u1f5f-\\u1f7d\\u1f80-\\u1fb4\\u1fb6-\\u1fbc\\u1fbe\\u1fc2-\\u1fc4\\u1fc6-\\u1fcc\\u1fd0-\\u1fd3\\u1fd6-\\u1fdb\\u1fe0-\\u1fec\\u1ff2-\\u1ff4\\u1ff6-\\u1ffc\\u2071\\u207f\\u2090-\\u209c\\u2102\\u2107\\u210a-\\u2113\\u2115\\u2118-\\u211d\\u2124\\u2126\\u2128\\u212a-\\u2139\\u213c-\\u213f\\u2145-\\u2149\\u214e\\u2160-\\u2188\\u2c00-\\u2ce4\\u2ceb-\\u2cee\\u2cf2\\u2cf3\\u2d00-\\u2d25\\u2d27\\u2d2d\\u2d30-\\u2d67\\u2d6f\\u2d80-\\u2d96\\u2da0-\\u2da6\\u2da8-\\u2dae\\u2db0-\\u2db6\\u2db8-\\u2dbe\\u2dc0-\\u2dc6\\u2dc8-\\u2dce\\u2dd0-\\u2dd6\\u2dd8-\\u2dde\\u3005-\\u3007\\u3021-\\u3029\\u3031-\\u3035\\u3038-\\u303c\\u3041-\\u3096\\u309b-\\u309f\\u30a1-\\u30fa\\u30fc-\\u30ff\\u3105-\\u312f\\u3131-\\u318e\\u31a0-\\u31bf\\u31f0-\\u31ff\\u3400-\\u4dbf\\u4e00-\\ua48c\\ua4d0-\\ua4fd\\ua500-\\ua60c\\ua610-\\ua61f\\ua62a\\ua62b\\ua640-\\ua66e\\ua67f-\\ua69d\\ua6a0-\\ua6ef\\ua717-\\ua71f\\ua722-\\ua788\\ua78b-\\ua7ca\\ua7d0\\ua7d1\\ua7d3\\ua7d5-\\ua7d9\\ua7f2-\\ua801\\ua803-\\ua805\\ua807-\\ua80a\\ua80c-\\ua822\\ua840-\\ua873\\ua882-\\ua8b3\\ua8f2-\\ua8f7\\ua8fb\\ua8fd\\ua8fe\\ua90a-\\ua925\\ua930-\\ua946\\ua960-\\ua97c\\ua984-\\ua9b2\\ua9cf\\ua9e0-\\ua9e4\\ua9e6-\\ua9ef\\ua9fa-\\ua9fe\\uaa00-\\uaa28\\uaa40-\\uaa42\\uaa44-\\uaa4b\\uaa60-\\uaa76\\uaa7a\\uaa7e-\\uaaaf\\uaab1\\uaab5\\uaab6\\uaab9-\\uaabd\\uaac0\\uaac2\\uaadb-\\uaadd\\uaae0-\\uaaea\\uaaf2-\\uaaf4\\uab01-\\uab06\\uab09-\\uab0e\\uab11-\\uab16\\uab20-\\uab26\\uab28-\\uab2e\\uab30-\\uab5a\\uab5c-\\uab69\\uab70-\\uabe2\\uac00-\\ud7a3\\ud7b0-\\ud7c6\\ud7cb-\\ud7fb\\uf900-\\ufa6d\\ufa70-\\ufad9\\ufb00-\\ufb06\\ufb13-\\ufb17\\ufb1d\\ufb1f-\\ufb28\\ufb2a-\\ufb36\\ufb38-\\ufb3c\\ufb3e\\ufb40\\ufb41\\ufb43\\ufb44\\ufb46-\\ufbb1\\ufbd3-\\ufd3d\\ufd50-\\ufd8f\\ufd92-\\ufdc7\\ufdf0-\\ufdfb\\ufe70-\\ufe74\\ufe76-\\ufefc\\uff21-\\uff3a\\uff41-\\uff5a\\uff66-\\uffbe\\uffc2-\\uffc7\\uffca-\\uffcf\\uffd2-\\uffd7\\uffda-\\uffdc\";\n/* prettier-ignore */\nlet nonASCIIidentifierChars = \"\\u200c\\u200d\\xb7\\u0300-\\u036f\\u0387\\u0483-\\u0487\\u0591-\\u05bd\\u05bf\\u05c1\\u05c2\\u05c4\\u05c5\\u05c7\\u0610-\\u061a\\u064b-\\u0669\\u0670\\u06d6-\\u06dc\\u06df-\\u06e4\\u06e7\\u06e8\\u06ea-\\u06ed\\u06f0-\\u06f9\\u0711\\u0730-\\u074a\\u07a6-\\u07b0\\u07c0-\\u07c9\\u07eb-\\u07f3\\u07fd\\u0816-\\u0819\\u081b-\\u0823\\u0825-\\u0827\\u0829-\\u082d\\u0859-\\u085b\\u0898-\\u089f\\u08ca-\\u08e1\\u08e3-\\u0903\\u093a-\\u093c\\u093e-\\u094f\\u0951-\\u0957\\u0962\\u0963\\u0966-\\u096f\\u0981-\\u0983\\u09bc\\u09be-\\u09c4\\u09c7\\u09c8\\u09cb-\\u09cd\\u09d7\\u09e2\\u09e3\\u09e6-\\u09ef\\u09fe\\u0a01-\\u0a03\\u0a3c\\u0a3e-\\u0a42\\u0a47\\u0a48\\u0a4b-\\u0a4d\\u0a51\\u0a66-\\u0a71\\u0a75\\u0a81-\\u0a83\\u0abc\\u0abe-\\u0ac5\\u0ac7-\\u0ac9\\u0acb-\\u0acd\\u0ae2\\u0ae3\\u0ae6-\\u0aef\\u0afa-\\u0aff\\u0b01-\\u0b03\\u0b3c\\u0b3e-\\u0b44\\u0b47\\u0b48\\u0b4b-\\u0b4d\\u0b55-\\u0b57\\u0b62\\u0b63\\u0b66-\\u0b6f\\u0b82\\u0bbe-\\u0bc2\\u0bc6-\\u0bc8\\u0bca-\\u0bcd\\u0bd7\\u0be6-\\u0bef\\u0c00-\\u0c04\\u0c3c\\u0c3e-\\u0c44\\u0c46-\\u0c48\\u0c4a-\\u0c4d\\u0c55\\u0c56\\u0c62\\u0c63\\u0c66-\\u0c6f\\u0c81-\\u0c83\\u0cbc\\u0cbe-\\u0cc4\\u0cc6-\\u0cc8\\u0cca-\\u0ccd\\u0cd5\\u0cd6\\u0ce2\\u0ce3\\u0ce6-\\u0cef\\u0cf3\\u0d00-\\u0d03\\u0d3b\\u0d3c\\u0d3e-\\u0d44\\u0d46-\\u0d48\\u0d4a-\\u0d4d\\u0d57\\u0d62\\u0d63\\u0d66-\\u0d6f\\u0d81-\\u0d83\\u0dca\\u0dcf-\\u0dd4\\u0dd6\\u0dd8-\\u0ddf\\u0de6-\\u0def\\u0df2\\u0df3\\u0e31\\u0e34-\\u0e3a\\u0e47-\\u0e4e\\u0e50-\\u0e59\\u0eb1\\u0eb4-\\u0ebc\\u0ec8-\\u0ece\\u0ed0-\\u0ed9\\u0f18\\u0f19\\u0f20-\\u0f29\\u0f35\\u0f37\\u0f39\\u0f3e\\u0f3f\\u0f71-\\u0f84\\u0f86\\u0f87\\u0f8d-\\u0f97\\u0f99-\\u0fbc\\u0fc6\\u102b-\\u103e\\u1040-\\u1049\\u1056-\\u1059\\u105e-\\u1060\\u1062-\\u1064\\u1067-\\u106d\\u1071-\\u1074\\u1082-\\u108d\\u108f-\\u109d\\u135d-\\u135f\\u1369-\\u1371\\u1712-\\u1715\\u1732-\\u1734\\u1752\\u1753\\u1772\\u1773\\u17b4-\\u17d3\\u17dd\\u17e0-\\u17e9\\u180b-\\u180d\\u180f-\\u1819\\u18a9\\u1920-\\u192b\\u1930-\\u193b\\u1946-\\u194f\\u19d0-\\u19da\\u1a17-\\u1a1b\\u1a55-\\u1a5e\\u1a60-\\u1a7c\\u1a7f-\\u1a89\\u1a90-\\u1a99\\u1ab0-\\u1abd\\u1abf-\\u1ace\\u1b00-\\u1b04\\u1b34-\\u1b44\\u1b50-\\u1b59\\u1b6b-\\u1b73\\u1b80-\\u1b82\\u1ba1-\\u1bad\\u1bb0-\\u1bb9\\u1be6-\\u1bf3\\u1c24-\\u1c37\\u1c40-\\u1c49\\u1c50-\\u1c59\\u1cd0-\\u1cd2\\u1cd4-\\u1ce8\\u1ced\\u1cf4\\u1cf7-\\u1cf9\\u1dc0-\\u1dff\\u200c\\u200d\\u203f\\u2040\\u2054\\u20d0-\\u20dc\\u20e1\\u20e5-\\u20f0\\u2cef-\\u2cf1\\u2d7f\\u2de0-\\u2dff\\u302a-\\u302f\\u3099\\u309a\\u30fb\\ua620-\\ua629\\ua66f\\ua674-\\ua67d\\ua69e\\ua69f\\ua6f0\\ua6f1\\ua802\\ua806\\ua80b\\ua823-\\ua827\\ua82c\\ua880\\ua881\\ua8b4-\\ua8c5\\ua8d0-\\ua8d9\\ua8e0-\\ua8f1\\ua8ff-\\ua909\\ua926-\\ua92d\\ua947-\\ua953\\ua980-\\ua983\\ua9b3-\\ua9c0\\ua9d0-\\ua9d9\\ua9e5\\ua9f0-\\ua9f9\\uaa29-\\uaa36\\uaa43\\uaa4c\\uaa4d\\uaa50-\\uaa59\\uaa7b-\\uaa7d\\uaab0\\uaab2-\\uaab4\\uaab7\\uaab8\\uaabe\\uaabf\\uaac1\\uaaeb-\\uaaef\\uaaf5\\uaaf6\\uabe3-\\uabea\\uabec\\uabed\\uabf0-\\uabf9\\ufb1e\\ufe00-\\ufe0f\\ufe20-\\ufe2f\\ufe33\\ufe34\\ufe4d-\\ufe4f\\uff10-\\uff19\\uff3f\\uff65\";\n\nconst nonASCIIidentifierStart = new RegExp(\n  \"[\" + nonASCIIidentifierStartChars + \"]\",\n);\nconst nonASCIIidentifier = new RegExp(\n  \"[\" + nonASCIIidentifierStartChars + nonASCIIidentifierChars + \"]\",\n);\n\nnonASCIIidentifierStartChars = nonASCIIidentifierChars = null;\n\n// These are a run-length and offset-encoded representation of the\n// >0xffff code points that are a valid part of identifiers. The\n// offset starts at 0x10000, and each pair of numbers represents an\n// offset to the next range, and then a size of the range. They were\n// generated by `scripts/generate-identifier-regex.js`.\n/* prettier-ignore */\nconst astralIdentifierStartCodes = [0,11,2,25,2,18,2,1,2,14,3,13,35,122,70,52,268,28,4,48,48,31,14,29,6,37,11,29,3,35,5,7,2,4,43,157,19,35,5,35,5,39,9,51,13,10,2,14,2,6,2,1,2,10,2,14,2,6,2,1,68,310,10,21,11,7,25,5,2,41,2,8,70,5,3,0,2,43,2,1,4,0,3,22,11,22,10,30,66,18,2,1,11,21,11,25,71,55,7,1,65,0,16,3,2,2,2,28,43,28,4,28,36,7,2,27,28,53,11,21,11,18,14,17,111,72,56,50,14,50,14,35,349,41,7,1,79,28,11,0,9,21,43,17,47,20,28,22,13,52,58,1,3,0,14,44,33,24,27,35,30,0,3,0,9,34,4,0,13,47,15,3,22,0,2,0,36,17,2,24,20,1,64,6,2,0,2,3,2,14,2,9,8,46,39,7,3,1,3,21,2,6,2,1,2,4,4,0,19,0,13,4,159,52,19,3,21,2,31,47,21,1,2,0,185,46,42,3,37,47,21,0,60,42,14,0,72,26,38,6,186,43,117,63,32,7,3,0,3,7,2,1,2,23,16,0,2,0,95,7,3,38,17,0,2,0,29,0,11,39,8,0,22,0,12,45,20,0,19,72,264,8,2,36,18,0,50,29,113,6,2,1,2,37,22,0,26,5,2,1,2,31,15,0,328,18,16,0,2,12,2,33,125,0,80,921,103,110,18,195,2637,96,16,1071,18,5,4026,582,8634,568,8,30,18,78,18,29,19,47,17,3,32,20,6,18,689,63,129,74,6,0,67,12,65,1,2,0,29,6135,9,1237,43,8,8936,3,2,6,2,1,2,290,16,0,30,2,3,0,15,3,9,395,2309,106,6,12,4,8,8,9,5991,84,2,70,2,1,3,0,3,1,3,3,2,11,2,0,2,6,2,64,2,3,3,7,2,6,2,27,2,3,2,4,2,0,4,6,2,339,3,24,2,24,2,30,2,24,2,30,2,24,2,30,2,24,2,30,2,24,2,7,1845,30,7,5,262,61,147,44,11,6,17,0,322,29,19,43,485,27,757,6,2,3,2,1,2,14,2,196,60,67,8,0,1205,3,2,26,2,1,2,0,3,0,2,9,2,3,2,0,2,0,7,0,5,0,2,0,2,0,2,2,2,1,2,0,3,0,2,0,2,0,2,0,2,0,2,1,2,0,3,3,2,6,2,3,2,3,2,0,2,9,2,16,6,2,2,4,2,16,4421,42719,33,4153,7,221,3,5761,15,7472,16,621,2467,541,1507,4938,6,4191];\n/* prettier-ignore */\nconst astralIdentifierCodes = [509,0,227,0,150,4,294,9,1368,2,2,1,6,3,41,2,5,0,166,1,574,3,9,9,370,1,81,2,71,10,50,3,123,2,54,14,32,10,3,1,11,3,46,10,8,0,46,9,7,2,37,13,2,9,6,1,45,0,13,2,49,13,9,3,2,11,83,11,7,0,3,0,158,11,6,9,7,3,56,1,2,6,3,1,3,2,10,0,11,1,3,6,4,4,193,17,10,9,5,0,82,19,13,9,214,6,3,8,28,1,83,16,16,9,82,12,9,9,84,14,5,9,243,14,166,9,71,5,2,1,3,3,2,0,2,1,13,9,120,6,3,6,4,0,29,9,41,6,2,3,9,0,10,10,47,15,406,7,2,7,17,9,57,21,2,13,123,5,4,0,2,1,2,6,2,0,9,9,49,4,2,1,2,4,9,9,330,3,10,1,2,0,49,6,4,4,14,9,5351,0,7,14,13835,9,87,9,39,4,60,6,26,9,1014,0,2,54,8,3,82,0,12,1,19628,1,4706,45,3,22,543,4,4,5,9,7,3,6,31,3,149,2,1418,49,513,54,5,49,9,0,15,0,23,4,2,14,1361,6,2,16,3,6,2,1,2,4,101,0,161,6,10,9,357,0,62,13,499,13,983,6,110,6,6,9,4759,9,787719,239];\n\n// This has a complexity linear to the value of the code. The\n// assumption is that looking up astral identifier characters is\n// rare.\nfunction isInAstralSet(code: number, set: readonly number[]): boolean {\n  let pos = 0x10000;\n  for (let i = 0, length = set.length; i < length; i += 2) {\n    pos += set[i];\n    if (pos > code) return false;\n\n    pos += set[i + 1];\n    if (pos >= code) return true;\n  }\n  return false;\n}\n\n// Test whether a given character code starts an identifier.\n\nexport function isIdentifierStart(code: number): boolean {\n  if (code < charCodes.uppercaseA) return code === charCodes.dollarSign;\n  if (code <= charCodes.uppercaseZ) return true;\n  if (code < charCodes.lowercaseA) return code === charCodes.underscore;\n  if (code <= charCodes.lowercaseZ) return true;\n  if (code <= 0xffff) {\n    return (\n      code >= 0xaa && nonASCIIidentifierStart.test(String.fromCharCode(code))\n    );\n  }\n  return isInAstralSet(code, astralIdentifierStartCodes);\n}\n\n// Test whether a given character is part of an identifier.\n\nexport function isIdentifierChar(code: number): boolean {\n  if (code < charCodes.digit0) return code === charCodes.dollarSign;\n  if (code < charCodes.colon) return true;\n  if (code < charCodes.uppercaseA) return false;\n  if (code <= charCodes.uppercaseZ) return true;\n  if (code < charCodes.lowercaseA) return code === charCodes.underscore;\n  if (code <= charCodes.lowercaseZ) return true;\n  if (code <= 0xffff) {\n    return code >= 0xaa && nonASCIIidentifier.test(String.fromCharCode(code));\n  }\n  return (\n    isInAstralSet(code, astralIdentifierStartCodes) ||\n    isInAstralSet(code, astralIdentifierCodes)\n  );\n}\n\n// Test whether a given string is a valid identifier name\n\nexport function isIdentifierName(name: string): boolean {\n  let isFirst = true;\n  for (let i = 0; i < name.length; i++) {\n    // The implementation is based on\n    // https://source.chromium.org/chromium/chromium/src/+/master:v8/src/builtins/builtins-string-gen.cc;l=1455;drc=221e331b49dfefadbc6fa40b0c68e6f97606d0b3;bpv=0;bpt=1\n    // We reimplement `codePointAt` because `codePointAt` is a V8 builtin which is not inlined by TurboFan (as of M91)\n    // since `name` is mostly ASCII, an inlined `charCodeAt` wins here\n    let cp = name.charCodeAt(i);\n    if ((cp & 0xfc00) === 0xd800 && i + 1 < name.length) {\n      const trail = name.charCodeAt(++i);\n      if ((trail & 0xfc00) === 0xdc00) {\n        cp = 0x10000 + ((cp & 0x3ff) << 10) + (trail & 0x3ff);\n      }\n    }\n    if (isFirst) {\n      isFirst = false;\n      if (!isIdentifierStart(cp)) {\n        return false;\n      }\n    } else if (!isIdentifierChar(cp)) {\n      return false;\n    }\n  }\n  return !isFirst;\n}\n","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.isKeyword = isKeyword;\nexports.isReservedWord = isReservedWord;\nexports.isStrictBindOnlyReservedWord = isStrictBindOnlyReservedWord;\nexports.isStrictBindReservedWord = isStrictBindReservedWord;\nexports.isStrictReservedWord = isStrictReservedWord;\nconst reservedWords = {\n  keyword: [\"break\", \"case\", \"catch\", \"continue\", \"debugger\", \"default\", \"do\", \"else\", \"finally\", \"for\", \"function\", \"if\", \"return\", \"switch\", \"throw\", \"try\", \"var\", \"const\", \"while\", \"with\", \"new\", \"this\", \"super\", \"class\", \"extends\", \"export\", \"import\", \"null\", \"true\", \"false\", \"in\", \"instanceof\", \"typeof\", \"void\", \"delete\"],\n  strict: [\"implements\", \"interface\", \"let\", \"package\", \"private\", \"protected\", \"public\", \"static\", \"yield\"],\n  strictBind: [\"eval\", \"arguments\"]\n};\nconst keywords = new Set(reservedWords.keyword);\nconst reservedWordsStrictSet = new Set(reservedWords.strict);\nconst reservedWordsStrictBindSet = new Set(reservedWords.strictBind);\nfunction isReservedWord(word, inModule) {\n  return inModule && word === \"await\" || word === \"enum\";\n}\nfunction isStrictReservedWord(word, inModule) {\n  return isReservedWord(word, inModule) || reservedWordsStrictSet.has(word);\n}\nfunction isStrictBindOnlyReservedWord(word) {\n  return reservedWordsStrictBindSet.has(word);\n}\nfunction isStrictBindReservedWord(word, inModule) {\n  return isStrictReservedWord(word, inModule) || isStrictBindOnlyReservedWord(word);\n}\nfunction isKeyword(word) {\n  return keywords.has(word);\n}\n\n//# sourceMappingURL=keyword.js.map\n","const reservedWords = {\n  keyword: [\n    \"break\",\n    \"case\",\n    \"catch\",\n    \"continue\",\n    \"debugger\",\n    \"default\",\n    \"do\",\n    \"else\",\n    \"finally\",\n    \"for\",\n    \"function\",\n    \"if\",\n    \"return\",\n    \"switch\",\n    \"throw\",\n    \"try\",\n    \"var\",\n    \"const\",\n    \"while\",\n    \"with\",\n    \"new\",\n    \"this\",\n    \"super\",\n    \"class\",\n    \"extends\",\n    \"export\",\n    \"import\",\n    \"null\",\n    \"true\",\n    \"false\",\n    \"in\",\n    \"instanceof\",\n    \"typeof\",\n    \"void\",\n    \"delete\",\n  ],\n  strict: [\n    \"implements\",\n    \"interface\",\n    \"let\",\n    \"package\",\n    \"private\",\n    \"protected\",\n    \"public\",\n    \"static\",\n    \"yield\",\n  ],\n  strictBind: [\"eval\", \"arguments\"],\n};\nconst keywords = new Set(reservedWords.keyword);\nconst reservedWordsStrictSet = new Set(reservedWords.strict);\nconst reservedWordsStrictBindSet = new Set(reservedWords.strictBind);\n\n/**\n * Checks if word is a reserved word in non-strict mode\n */\nexport function isReservedWord(word: string, inModule: boolean): boolean {\n  return (inModule && word === \"await\") || word === \"enum\";\n}\n\n/**\n * Checks if word is a reserved word in non-binding strict mode\n *\n * Includes non-strict reserved words\n */\nexport function isStrictReservedWord(word: string, inModule: boolean): boolean {\n  return isReservedWord(word, inModule) || reservedWordsStrictSet.has(word);\n}\n\n/**\n * Checks if word is a reserved word in binding strict mode, but it is allowed as\n * a normal identifier.\n */\nexport function isStrictBindOnlyReservedWord(word: string): boolean {\n  return reservedWordsStrictBindSet.has(word);\n}\n\n/**\n * Checks if word is a reserved word in binding strict mode\n *\n * Includes non-strict reserved words and non-binding strict reserved words\n */\nexport function isStrictBindReservedWord(\n  word: string,\n  inModule: boolean,\n): boolean {\n  return (\n    isStrictReservedWord(word, inModule) || isStrictBindOnlyReservedWord(word)\n  );\n}\n\nexport function isKeyword(word: string): boolean {\n  return keywords.has(word);\n}\n"],"names":["$parcel$export","e","n","v","s","Object","defineProperty","get","set","enumerable","configurable","parcelRequire","$parcel$global","globalThis","self","window","global","parcelRegister","register","module","exports","$1a40caa3cd7e8fe5$export$4a4670b510dd6137","$5llJV","$4CBDl","message","parsedJson","path","markIdentifier","linesAbove","linesBelow","colors","start","end","getLocation","codeFrameColumns","jsonString","highlightCode","$3e3fc6feab4a2c79$export$96b35ce993c60015","$hFYCa","$3e3fc6feab4a2c79$var$NEWLINE","rawLines","loc","opts","highlighted","forceColor","shouldHighlight","chalk","getChalk","defs","gutter","gray","marker","red","bold","maybeHighlight","chalkFn","text","lines","split","markerLines","$3e3fc6feab4a2c79$var$getMarkerLines","source","startLoc","column","line","endLoc","startLine","startColumn","endLine","endColumn","Math","max","min","length","lineDiff","i","lineNumber","sourceLength","hasColumns","numberMaxWidth","String","highlightedLines","default","frame","slice","map","index","number","paddedNumber","hasMarker","lastMarkerLine","markerLine","Array","isArray","markerSpacing","replace","numberOfMarkers","repeat","join","reset","$cde548d262878208$var$tokenize","$cde548d262878208$export$b398ae2b6acac6de","$cde548d262878208$export$ff2ffba552fac685","$cde548d262878208$export$2e2bcd8739ae039","$1Si6F","$672ZO","$5ENKe","$cde548d262878208$var$sometimesKeywords","Set","$cde548d262878208$var$NEWLINE","$cde548d262878208$var$BRACKET","$cde548d262878208$var$getTokenType","token","type","isKeyword","value","isStrictReservedWord","has","toLowerCase","test","options","supportsColor","Chalk","level","code","keyword","cyan","capitalized","yellow","jsxIdentifier","punctuator","magenta","string","green","regex","comment","invalid","white","bgRed","$cde548d262878208$var$highlightTokens","colorize","str","a","__esModule","jsx","$15d8e12dbdcf0478$var$Identifier","$15d8e12dbdcf0478$var$JSXIdentifier","$15d8e12dbdcf0478$var$JSXPunctuator","$15d8e12dbdcf0478$var$JSXString","$15d8e12dbdcf0478$var$JSXText","$15d8e12dbdcf0478$var$KeywordsWithExpressionAfter","$15d8e12dbdcf0478$var$KeywordsWithNoLineTerminatorAfter","$15d8e12dbdcf0478$var$LineTerminatorSequence","$15d8e12dbdcf0478$var$MultiLineComment","$15d8e12dbdcf0478$var$Newline","$15d8e12dbdcf0478$var$NumericLiteral","$15d8e12dbdcf0478$var$Punctuator","$15d8e12dbdcf0478$var$RegularExpressionLiteral","$15d8e12dbdcf0478$var$SingleLineComment","$15d8e12dbdcf0478$var$StringLiteral","$15d8e12dbdcf0478$var$Template","$15d8e12dbdcf0478$var$TokensNotPrecedingObjectLiteral","$15d8e12dbdcf0478$var$TokensPrecedingExpression","$15d8e12dbdcf0478$var$WhiteSpace","RegExp","input","braces","firstCodePoint","isExpression","lastIndex","lastSignificantToken","match","mode","nextLastIndex","nextLastSignificantToken","parenNesting","postfixIncDec","stack","tag","exec","closed","push","nesting","pop","fromCodePoint","codePointAt","startsWith","$4735b870170493f3$export$fcbe44f5d6fcebd","$4735b870170493f3$export$79544b80b91c2197","$6fcTa","$2ztGv","$jNMsN","stdout","stderr","$4735b870170493f3$export$8107055a758cd2bd","$4735b870170493f3$var$GENERATOR","Symbol","$4735b870170493f3$var$STYLER","$4735b870170493f3$var$IS_EMPTY","$4735b870170493f3$var$levelMapping","$4735b870170493f3$var$styles","create","$4735b870170493f3$var$applyOptions","object","Number","isInteger","Error","colorLevel","undefined","constructor","$4735b870170493f3$var$chalkFactory","strings","setPrototypeOf","$4735b870170493f3$var$createChalk","prototype","styleName","style","Function","entries","builder","$4735b870170493f3$var$createBuilder","$4735b870170493f3$var$createStyler","open","close","visible","$4735b870170493f3$var$getModelAnsi","model","arguments_","ansi16m","ansi256","rgbToAnsi256","ansi","rgbToAnsi","hexToRgb","styler","color","bgModel","toUpperCase","bgColor","$4735b870170493f3$var$proto","defineProperties","parent","openAll","closeAll","_styler","_isEmpty","$4735b870170493f3$var$applyStyle","includes","stringReplaceAll","lfIndex","indexOf","stringEncaseCRLFWithFirstIndex","$48be243e32dd4ca3$export$2e2bcd8739ae039","$48be243e32dd4ca3$var$wrapAnsi16","offset","$48be243e32dd4ca3$var$wrapAnsi256","$48be243e32dd4ca3$var$wrapAnsi16m","blue","$48be243e32dd4ca3$var$styles","modifier","dim","italic","underline","overline","inverse","hidden","strikethrough","black","blackBright","grey","redBright","greenBright","yellowBright","blueBright","magentaBright","cyanBright","whiteBright","bgBlack","bgGreen","bgYellow","bgBlue","bgMagenta","bgCyan","bgWhite","bgBlackBright","bgGray","bgGrey","bgRedBright","bgGreenBright","bgYellowBright","bgBlueBright","bgMagentaBright","bgCyanBright","bgWhiteBright","keys","$48be243e32dd4ca3$export$b42573f554ad2328","$48be243e32dd4ca3$export$e9149c7dc90ec5a1","$48be243e32dd4ca3$var$ansiStyles","$48be243e32dd4ca3$var$assembleStyles","codes","Map","groupName","group","round","hex","matches","toString","colorString","character","integer","parseInt","hexToAnsi256","ansi256ToAnsi","remainder","floor","result","hexToAnsi","$1df5e05ee943fd44$export$2e2bcd8739ae039","$1df5e05ee943fd44$var$level","navigator","userAgentData","brand","brands","find","version","userAgent","$1df5e05ee943fd44$var$colorSupport","hasBasic","has256","has16m","$e6a82fbf759d06a0$export$9300dfb554c6c407","substring","replacer","substringLength","endIndex","returnValue","$e6a82fbf759d06a0$export$ecabf4aff2e9764","prefix","postfix","gotCR","$93Yib","isIdentifierChar","isIdentifierName","isIdentifierStart","$011uq","isReservedWord","isStrictBindOnlyReservedWord","isStrictBindReservedWord","$699329a2eacf4bfe$var$isIdentifierChar","name","isFirst","cp","charCodeAt","trail","$699329a2eacf4bfe$var$isIdentifierStart","$699329a2eacf4bfe$var$nonASCIIidentifierStartChars","$699329a2eacf4bfe$var$nonASCIIidentifierChars","$699329a2eacf4bfe$var$nonASCIIidentifierStart","$699329a2eacf4bfe$var$nonASCIIidentifier","$699329a2eacf4bfe$var$astralIdentifierStartCodes","$699329a2eacf4bfe$var$astralIdentifierCodes","$699329a2eacf4bfe$var$isInAstralSet","pos","fromCharCode","word","$00313ff3a6f6175a$var$keywords","$00313ff3a6f6175a$var$isReservedWord","$00313ff3a6f6175a$var$isStrictBindOnlyReservedWord","inModule","$00313ff3a6f6175a$var$isStrictReservedWord","$00313ff3a6f6175a$var$reservedWords","strict","strictBind","$00313ff3a6f6175a$var$reservedWordsStrictSet","$00313ff3a6f6175a$var$reservedWordsStrictBindSet","_identifier","require","_keyword","nonASCIIidentifierStartChars","nonASCIIidentifierChars","nonASCIIidentifierStart","nonASCIIidentifier","astralIdentifierStartCodes","astralIdentifierCodes","isInAstralSet","reservedWords","keywords","reservedWordsStrictSet","reservedWordsStrictBindSet"],"version":3,"file":"impl-code-frame.d724e0c2.js.map"}